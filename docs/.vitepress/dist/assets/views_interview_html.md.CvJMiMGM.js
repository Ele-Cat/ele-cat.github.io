import{$ as t,U as s,V as i,av as a}from"./chunks/framework.Dv0Ng7O-.js";const E=JSON.parse('{"title":"Html 面试题","description":"","frontmatter":{},"headers":[],"relativePath":"views/interview/html.md","filePath":"views/interview/html.md","lastUpdated":1745897714000}'),l={name:"views/interview/html.md"},n=a(`<h1 id="html-面试题" tabindex="-1">Html 面试题 <a class="header-anchor" href="#html-面试题" aria-label="Permalink to &quot;Html 面试题&quot;">​</a></h1><h2 id="_1、html5-新增那些标签" tabindex="-1">1、HTML5 新增那些标签? <a class="header-anchor" href="#_1、html5-新增那些标签" aria-label="Permalink to &quot;1、HTML5 新增那些标签?&quot;">​</a></h2><p>（1）布局标签（语义化标签）</p><ul><li><code>&lt;header&gt;</code> : 头部标签</li><li><code>&lt;nav&gt;</code> : 导航标签</li><li><code>&lt;article&gt;</code> : 内容标签</li><li><code>&lt;section&gt;</code> : 定义文档某个区域</li><li><code>&lt;aside&gt;</code> : 侧边栏标签</li><li><code>&lt;footer&gt;</code> : 底部标签</li></ul><p>（2）视频标签(video)</p><p>（3）音频标签(audio)</p><p>（4）新的 API</p><ul><li>音视频：audio 和 video 元素</li><li>绘图图形：canvas 元 素</li><li>本地存储：localStorage，sessionStorage</li><li>多线程操作：Web Worker （Web Worker 是 HTML5 新特性，允许我们在 js 主线程之外开辟新线程，并将一段 js 脚本运行其中，它赋予了开发者利用 js 操作多线程的能力 ）</li></ul><div class="warning custom-block"><p class="custom-block-title">语义化的优点如下：</p><ul><li>在没有 CSS 样式情况下也能够让页面呈现出清晰的结构</li><li>有利于 SEO 和搜索引擎建立良好的沟通，有助于爬虫抓取更多的有效信息，爬虫是依赖于标签来确定上下文和各个关键字的权重</li><li>方便团队开发和维护，语义化更具可读性，遵循 W3C 标准的团队都遵循这个标准，可以减少差异化</li></ul></div><h2 id="_2、常见的块元素、行内素以及行内块素-三者有何不同" tabindex="-1">2、常见的块元素、行内素以及行内块素，三者有何不同？ <a class="header-anchor" href="#_2、常见的块元素、行内素以及行内块素-三者有何不同" aria-label="Permalink to &quot;2、常见的块元素、行内素以及行内块素，三者有何不同？&quot;">​</a></h2><ol><li><strong>排列方式</strong></li></ol><table><thead><tr><th>类型</th><th>排列特性</th><th>示例元素</th></tr></thead><tbody><tr><td><strong>块级元素</strong></td><td>独占父容器整行，垂直排列（即使宽度未占满也会换行）</td><td><code>&lt;div&gt;</code>、<code>&lt;h1&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;ul&gt;</code></td></tr><tr><td><strong>行内元素</strong></td><td>与其他行内元素水平排列，直到父容器宽度不足才会换行</td><td><code>&lt;span&gt;</code>、<code>&lt;a&gt;</code>、<code>&lt;strong&gt;</code></td></tr><tr><td><strong>行内块元素</strong></td><td>水平排列，但可设置宽高（类似块元素特性），元素间可能有默认空白缝隙</td><td><code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;button&gt;</code></td></tr></tbody></table><ol start="2"><li><strong>尺寸控制</strong></li></ol><table><thead><tr><th>类型</th><th>宽高设置</th><th>默认宽度规则</th><th>边距控制</th></tr></thead><tbody><tr><td><strong>块级元素</strong></td><td>可直接设置宽高（<code>width</code>/<code>height</code>）</td><td>父容器宽度的 100%</td><td>四个方向（上下左右）外边距（<code>margin</code>）和内边距（<code>padding</code>）均有效</td></tr><tr><td><strong>行内元素</strong></td><td>宽高由内容决定，设置无效</td><td>内容实际宽度</td><td>仅水平方向（左右）外边距有效，垂直方向无效；内边距四个方向有效但不会撑大布局</td></tr><tr><td><strong>行内块元素</strong></td><td>可直接设置宽高，覆盖默认内容宽度</td><td>内容实际宽度</td><td>四个方向外边距和内边距均有效</td></tr></tbody></table><ol start="3"><li><strong>嵌套规则与典型场景</strong></li></ol><table><thead><tr><th>类型</th><th>内容嵌套规则</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>块级元素</strong></td><td>可包含其他块级、行内或行内块元素（例外：文字类标签如<code>&lt;p&gt;</code>内不可嵌套块元素）</td><td>页面布局容器（如头部、侧边栏）、复杂内容区块</td></tr><tr><td><strong>行内元素</strong></td><td>仅能包含文本或其他行内元素（例外：<code>&lt;a&gt;</code>可嵌套块元素但需转换为块级模式）</td><td>文本修饰（如加粗、链接）、小型交互元素（如输入框）</td></tr><tr><td><strong>行内块元素</strong></td><td>可包含行内元素或文本，部分场景可嵌套块元素</td><td>图文混排（如图片按钮）、表单控件（如按钮、选择框）</td></tr></tbody></table><ol start="4"><li><p><strong>常见问题与解决方案</strong></p><ol><li><p><strong>行内块元素间的空白缝隙</strong><br> 原因：HTML 代码中的换行符或空格被解析为空白节点。<br> 解决：设置父元素<code>font-size: 0</code>，或使用负边距<code>margin-left: -4px</code> 。</p></li><li><p><strong>元素类型转换</strong><br> 通过 CSS 的<code>display</code>属性实现：</p></li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 转为块级 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 转为行内 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 转为行内块 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="3"><li><p><strong>垂直对齐问题</strong><br> 行内块元素默认基线对齐，导致垂直位置偏移。<br> 解决：设置<code>vertical-align: middle</code>或<code>vertical-align: top</code> 。</p></li><li><p><strong>高度塌陷问题</strong> 行内块元素的高度由其内容决定，父元素高度塌陷。 解决：设置父元素<code>overflow: hidden</code>或<code>display: table</code> 。</p></li></ol></li></ol><h2 id="_3、html、xml、xhtml-它们之间有什么区别" tabindex="-1">3、HTML、XML、XHTML 它们之间有什么区别？ <a class="header-anchor" href="#_3、html、xml、xhtml-它们之间有什么区别" aria-label="Permalink to &quot;3、HTML、XML、XHTML 它们之间有什么区别？&quot;">​</a></h2><ol><li><strong>核心定位与用途</strong></li></ol><table><thead><tr><th>类型</th><th>定义</th><th>主要用途</th><th>关键特性</th></tr></thead><tbody><tr><td><strong>HTML</strong></td><td><strong>超文本标记语言</strong>（HyperText Markup Language）</td><td>描述网页内容结构和呈现方式（如段落、图片、链接）</td><td>- 预定义标签（如 <code>&lt;p&gt;</code>, <code>&lt;img&gt;</code>）<br>- 关注数据的外观和显示</td></tr><tr><td><strong>XML</strong></td><td><strong>可扩展标记语言</strong>（eXtensible Markup Language）</td><td>存储和传输结构化数据（如配置文件、API 数据交换）</td><td>- 自定义标签（如 <code>&lt;product&gt;</code>）<br>- 关注数据的内容和语义</td></tr><tr><td><strong>XHTML</strong></td><td><strong>可扩展超文本标记语言</strong>（eXtensible HyperText Markup Language）</td><td>以 XML 的严格语法重写 HTML，增强规范性和兼容性</td><td>- 继承 HTML 的标签库<br>- 强制 XML 语法规则（如标签闭合、小写）</td></tr></tbody></table><ol start="2"><li><strong>语法规则对比</strong></li></ol><table><thead><tr><th>特性</th><th>HTML</th><th>XML</th><th>XHTML</th></tr></thead><tbody><tr><td><strong>标签闭合</strong></td><td>允许省略闭合标签（如 <code>&lt;br&gt;</code>）</td><td>必须显式闭合（如 <code>&lt;br/&gt;</code>）</td><td>必须显式闭合（如 <code>&lt;br/&gt;</code>）</td></tr><tr><td><strong>标签大小写</strong></td><td>不敏感（<code>&lt;DIV&gt;</code> 等同 <code>&lt;div&gt;</code>）</td><td>敏感（自定义标签严格区分）</td><td>必须小写（如 <code>&lt;div&gt;</code>）</td></tr><tr><td><strong>属性引号</strong></td><td>可选（如 <code>width=200</code>）</td><td>必须加引号（如 <code>width=&quot;200&quot;</code>）</td><td>必须加引号（如 <code>width=&quot;200&quot;</code>）</td></tr><tr><td><strong>错误处理</strong></td><td>浏览器自动纠错</td><td>解析失败报错</td><td>严格解析，错误导致渲染终止</td></tr><tr><td><strong>文档结构</strong></td><td>允许松散结构</td><td>必须单根元素（如 <code>&lt;root&gt;</code>）</td><td>需完整声明（DOCTYPE 和命名空间）</td></tr></tbody></table><ol start="3"><li><p><strong>设计目标与演进</strong></p><ol><li><p><strong>HTML</strong></p><ul><li><strong>目标</strong>：快速构建可视化网页，早期版本（如 HTML4）语法宽松，允许开发者快速上手。</li><li><strong>问题</strong>：代码不规范导致跨浏览器兼容性问题，难以维护 。</li><li><strong>演进</strong>：HTML5 引入语义化标签（如 <code>&lt;article&gt;</code>）和多媒体支持（如 <code>&lt;video&gt;</code>），成为现代 Web 开发主流 。</li></ul></li><li><p><strong>XML</strong></p><ul><li><strong>目标</strong>：实现跨平台数据交换，独立于软件和硬件。</li><li><strong>应用</strong>：常见于配置文件（如 Android 布局）、RSS 订阅、Web Service 数据格式（如 SOAP）。</li></ul></li><li><p><strong>XHTML</strong></p><ul><li><strong>起源</strong>：W3C 为规范 HTML 松散性，将 XML 语法引入 HTML，推出 XHTML 1.0/1.1。</li><li><strong>特点</strong>：强制严格语法（如属性值必须小写），提升代码可维护性和机器可读性 。</li><li><strong>现状</strong>：XHTML 2.0 因过度复杂被放弃，HTML5 成为替代方案，但 XHTML 的严格性仍被部分项目采用 。</li></ul></li></ol></li><li><p><strong>典型代码示例</strong></p><ol><li><strong>HTML（宽松语法）</strong></li></ol><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      这是一个段落</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li><strong>XML（自定义数据结构）</strong></li></ol><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bookstore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">book</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> category</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;编程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;JavaScript 高级程序设计&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Nicholas C. Zakas&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">price</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;89.00&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">price</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">book</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bookstore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="3"><li><strong>XHTML（严格语法）</strong></li></ol><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PUBLIC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.w3.org/1999/xhtml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一个段落&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image.jpg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;示例图片&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h2 id="_4、doctype-文档类型-的作用" tabindex="-1">4、DOCTYPE(⽂档类型) 的作⽤ <a class="header-anchor" href="#_4、doctype-文档类型-的作用" aria-label="Permalink to &quot;4、DOCTYPE(⽂档类型) 的作⽤&quot;">​</a></h2><p>Doctype 是 HTML5 的文档声明，通过它可以告诉浏览器，使用哪一个 HTML 版本标准解析文档。在浏览器发展的过程中，HTML 出现过很多版本，不同的版本之间格式书写上略有差异。如果没有事先告诉浏览器，那么浏览器就不知道文档解析标准是什么？此时，大部分浏览器将开启最大兼容模式来解析网页，我们一般称为怪异模式，这不仅会降低解析效率，而且会在解析过程中产生一些难以预知的 bug，所以文档声明是必须的。</p><p>浏览器渲染页面的两种模式（可通过 document.compatMode 获取）：</p><ul><li>CSS1Compat：标准模式（Strick mode），默认模式，浏览器使用 W3C 的标准解析渲染页面。在标准模式中，浏览器以其支持的最高标准呈现页面。</li><li>BackCompat：怪异模式(混杂模式)(Quick mode)，浏览器使用自己的怪异模式解析渲染页面。在怪异模式中，页面以一种比较宽松的向后兼容的方式显示。</li></ul><h2 id="_5、localstorage、sessionstorage、cookie-三者区别" tabindex="-1">5、localStorage、sessionStorage、cookie 三者区别？ <a class="header-anchor" href="#_5、localstorage、sessionstorage、cookie-三者区别" aria-label="Permalink to &quot;5、localStorage、sessionStorage、cookie 三者区别？&quot;">​</a></h2><ol><li>存储时间与生命周期</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>有效期</strong></th><th><strong>触发失效的条件</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>可设置过期时间（<code>Expires</code>/<code>Max-Age</code>），默认关闭浏览器后失效。</td><td>浏览器关闭（未设过期时间）或达到预设的过期时间。</td></tr><tr><td><strong>localStorage</strong></td><td>永久存储，除非手动删除或用户清除浏览器缓存。</td><td>用户主动调用 <code>localStorage.clear()</code> 或浏览器隐私设置清除。</td></tr><tr><td><strong>sessionStorage</strong></td><td>会话级存储，仅在当前浏览器标签页有效。</td><td>关闭标签页或浏览器窗口。</td></tr></tbody></table><ol start="2"><li>存储容量与数据格式</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>容量限制</strong></th><th><strong>数据格式</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>单个约 <strong>4KB</strong>，同域名下最多 <strong>20-50 个</strong>。</td><td>仅支持字符串，需手动编码/解码（如 <code>encodeURIComponent</code>）。</td></tr><tr><td><strong>localStorage</strong></td><td>约 <strong>5-10MB</strong>（不同浏览器差异）。</td><td>支持字符串，复杂数据需序列化（如 <code>JSON.stringify</code>）。</td></tr><tr><td><strong>sessionStorage</strong></td><td>同 <code>localStorage</code>。</td><td>同 <code>localStorage</code>。</td></tr></tbody></table><ol start="3"><li>通信方式与服务端交互</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>是否随 HTTP 请求发送</strong></th><th><strong>服务端控制</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>是，自动携带在请求头（<code>Cookie</code>）。</td><td>服务器通过 <code>Set-Cookie</code> 响应头设置，客户端通过 <code>document.cookie</code> 读写。</td></tr><tr><td><strong>localStorage</strong></td><td>否，纯客户端存储。</td><td>完全由前端控制，通过 <code>setItem</code>/<code>getItem</code> 等 API 操作。</td></tr><tr><td><strong>sessionStorage</strong></td><td>否，同 <code>localStorage</code>。</td><td>同 <code>localStorage</code>。</td></tr></tbody></table><ol start="4"><li>作用域与共享规则</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>作用域</strong></th><th><strong>跨窗口/标签页共享</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>同域名下所有页面共享，可通过 <code>domain</code> 和 <code>path</code> 限定范围。</td><td>支持跨窗口共享。</td></tr><tr><td><strong>localStorage</strong></td><td>同源策略（协议+域名+端口一致）下的所有页面共享。</td><td>支持跨窗口共享。</td></tr><tr><td><strong>sessionStorage</strong></td><td>仅限当前浏览器标签页，不同标签页即使同源也不共享。</td><td>不支持。</td></tr></tbody></table><ol start="5"><li>安全性对比</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>安全风险</strong></th><th><strong>防护措施</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>易受 XSS 和 CSRF 攻击，可能泄露会话标识。</td><td>设置 <code>HttpOnly</code>（禁止 JS 访问）、<code>Secure</code>（仅 HTTPS 传输）、<code>SameSite</code> 属性。</td></tr><tr><td><strong>localStorage</strong></td><td>易受 XSS 攻击，数据可能被恶意脚本窃取。</td><td>避免存储敏感信息，加密关键数据。</td></tr><tr><td><strong>sessionStorage</strong></td><td>同 <code>localStorage</code>，但数据生命周期更短。</td><td>同 <code>localStorage</code>。</td></tr></tbody></table><ol start="6"><li>应用场景</li></ol><table><thead><tr><th><strong>类型</strong></th><th><strong>典型使用场景</strong></th></tr></thead><tbody><tr><td><strong>Cookie</strong></td><td>用户身份验证（如 Session ID）、跟踪用户行为（广告分析）、保存小型服务端交互数据。</td></tr><tr><td><strong>localStorage</strong></td><td>持久化存储用户偏好（如主题、语言）、离线缓存（如静态资源）、购物车状态。</td></tr><tr><td><strong>sessionStorage</strong></td><td>临时保存表单填写进度、单页应用（SPA）的页面状态、防止重复提交。</td></tr></tbody></table><p><strong>总结对比表</strong></p><table><thead><tr><th><strong>特性</strong></th><th><strong>Cookie</strong></th><th><strong>localStorage</strong></th><th><strong>sessionStorage</strong></th></tr></thead><tbody><tr><td><strong>存储时间</strong></td><td>可设置过期时间或会话级</td><td>永久存储</td><td>会话级（标签页关闭失效）</td></tr><tr><td><strong>容量</strong></td><td>~4KB</td><td>5-10MB</td><td>5-10MB</td></tr><tr><td><strong>通信方式</strong></td><td>自动携带在 HTTP 请求头</td><td>不参与通信</td><td>不参与通信</td></tr><tr><td><strong>作用域</strong></td><td>同域名下共享</td><td>同源策略共享</td><td>仅当前标签页共享</td></tr><tr><td><strong>安全性</strong></td><td>中（需额外设置防护）</td><td>低（易受 XSS）</td><td>低（易受 XSS）</td></tr><tr><td><strong>API 便捷性</strong></td><td>手动字符串操作</td><td>封装 <code>setItem</code>/<code>getItem</code></td><td>同 <code>localStorage</code></td></tr></tbody></table><p><strong>操作建议</strong></p><ol><li><strong>敏感数据</strong>：优先使用服务端 Session + Cookie（<code>HttpOnly</code>）组合，避免前端存储敏感信息。</li><li><strong>性能优化</strong>：大容量非敏感数据（如用户配置）使用 <code>localStorage</code> 减少 HTTP 请求。</li><li><strong>临时状态</strong>：表单步骤或页面刷新恢复使用 <code>sessionStorage</code>，避免数据跨标签泄露。</li></ol><h2 id="_6、网站-tdk-三大标签以及-seo-优化" tabindex="-1">6、网站 TDK 三大标签以及 SEO 优化 <a class="header-anchor" href="#_6、网站-tdk-三大标签以及-seo-优化" aria-label="Permalink to &quot;6、网站 TDK 三大标签以及 SEO 优化&quot;">​</a></h2><p>TDK 是<code>网站标题（title）</code>、<code>描述（description）</code>、<code>关键词（keywords）</code>这三者的英文首字母缩写，主要用来对当前网页进行总结和概况。</p><p>在 SEO 界，<strong>标题、描述、关键词</strong>通常也被称为三大标签。</p><h2 id="_7、img-标签的-title-属性与-alt-属性的区别是什么" tabindex="-1">7、img 标签的 title 属性与 alt 属性的区别是什么？ <a class="header-anchor" href="#_7、img-标签的-title-属性与-alt-属性的区别是什么" aria-label="Permalink to &quot;7、img 标签的 title 属性与 alt 属性的区别是什么？&quot;">​</a></h2><ol><li>核心用途差异</li></ol><table><thead><tr><th><strong>属性</strong></th><th><strong>核心作用</strong></th><th><strong>适用场景</strong></th></tr></thead><tbody><tr><td><strong><code>alt</code></strong></td><td><strong>替代文本</strong>：当图片无法加载时显示替代内容，帮助视障用户和搜索引擎理解图片语义。</td><td>- 图片加载失败时显示文字描述<br>- 屏幕阅读器读取内容<br>- SEO 优化关键字段</td></tr><tr><td><strong><code>title</code></strong></td><td><strong>提示信息</strong>：用户鼠标悬停时显示工具提示（Tooltip），提供额外非必要信息。</td><td>- 补充图片的附加说明（如拍摄时间、版权信息）<br>- 增强用户体验（如交互提示）</td></tr></tbody></table><ol start="2"><li><p>显示机制与浏览器行为</p><ol><li><p><strong><code>alt</code> 的显示规则</strong></p><ul><li>仅在图片加载失败、禁用图片或使用屏幕阅读器时显示。</li><li><strong>例外</strong>：早期 IE 浏览器会将 <code>alt</code> 作为工具提示显示，但现代浏览器（Chrome、Firefox 等）已修正此行为 。</li></ul></li><li><p><strong><code>title</code> 的显示规则</strong></p><ul><li>鼠标悬停在图片上时显示工具提示，与图片是否加载成功无关。</li><li>部分浏览器对过长内容截断处理（如 Firefox 仅显示前 60 个字符）。</li></ul></li></ol></li><li><p>必要性及语法规范</p></li></ol><table><thead><tr><th><strong>属性</strong></th><th><strong>是否必需</strong></th><th><strong>语法规范</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong><code>alt</code></strong></td><td><strong>必需</strong></td><td>- 长度建议 ≤ 100 个英文字符<br>- 装饰性图片可设为空值 <code>alt=&quot;&quot;</code><br>- 禁止包含 HTML 标签</td><td><code>&lt;img src=&quot;cat.jpg&quot; alt=&quot;一只橘猫趴在沙发上&quot;&gt;</code></td></tr><tr><td><strong><code>title</code></strong></td><td><strong>可选</strong></td><td>- 无严格长度限制，但建议简洁<br>- 可包含补充性信息（如来源、作者）</td><td><code>&lt;img src=&quot;landscape.jpg&quot; alt=&quot;雪山湖泊&quot; title=&quot;摄于2025年西藏纳木错&quot;&gt;</code></td></tr></tbody></table><ol start="4"><li><p>对 SEO 和可访问性的影响</p><ol><li><p><strong>SEO 优化</strong></p><ul><li><strong><code>alt</code></strong>：搜索引擎通过 <code>alt</code> 文本理解图片内容，直接影响图片搜索排名。需包含关键词但避免堆砌（如 <code>alt=&quot;2025款智能手表外观图&quot;</code>）。</li><li><strong><code>title</code></strong>：对 SEO 无直接影响，但用户体验提升可能间接降低跳出率 。</li></ul></li><li><p><strong>可访问性（A11y）</strong></p><ul><li><strong><code>alt</code></strong>：视障用户依赖屏幕阅读器读取 <code>alt</code> 内容，需准确描述图片核心信息。装饰性图片应设为 <code>alt=&quot;&quot;</code> 以避免干扰 。</li><li><strong><code>title</code></strong>：部分辅助工具（如屏幕阅读器）可能忽略 <code>title</code>，因此关键信息不应仅依赖 <code>title</code> 。</li></ul></li></ol></li><li><p>开发建议与常见错误</p><ol><li><p><strong>推荐实践</strong></p><ul><li><strong>同时使用</strong>：为关键图片同时设置 <code>alt</code> 和 <code>title</code>，但内容避免重复（如 <code>alt</code> 描述功能，<code>title</code> 补充技术参数）。</li><li><strong>语义化优先</strong>：<code>alt</code> 应简洁明确（如 <code>alt=&quot;用户登录按钮&quot;</code>），而非堆砌关键词（如 <code>alt=&quot;按钮 登录 用户&quot;</code>）。</li></ul></li><li><p><strong>常见错误</strong></p><ul><li><strong>错误 1</strong>：装饰性图片未设置 <code>alt=&quot;&quot;</code>，导致屏幕阅读器朗读冗余信息 。</li><li><strong>错误 2</strong>：将 <code>title</code> 作为 <code>alt</code> 的替代品，忽视视障用户和 SEO 需求 。</li></ul></li></ol></li><li><p>浏览器兼容性对比</p></li></ol><table><thead><tr><th><strong>浏览器</strong></th><th><strong><code>alt</code> 显示行为</strong></th><th><strong><code>title</code> 显示行为</strong></th></tr></thead><tbody><tr><td><strong>Chrome 120+</strong></td><td>仅图片加载失败时显示替代文本</td><td>悬停时显示完整工具提示</td></tr><tr><td><strong>Firefox 125+</strong></td><td>同 Chrome</td><td>截断超过 60 字符的内容</td></tr><tr><td><strong>Safari 18+</strong></td><td>同 Chrome</td><td>支持长文本，无截断</td></tr><tr><td><strong>IE 11</strong></td><td>替代文本作为工具提示显示（已淘汰）</td><td>优先显示 <code>title</code>，无 <code>title</code> 时显示 <code>alt</code></td></tr></tbody></table><p><strong>总结</strong></p><p><code>alt</code> 和 <code>title</code> 是 <code>&lt;img&gt;</code> 标签中互补但功能迥异的属性：</p><ul><li><strong><code>alt</code></strong> 是<strong>必要</strong>的语义化属性，核心服务于可访问性和 SEO。</li><li><strong><code>title</code></strong> 是<strong>可选</strong>的交互属性，用于提供额外信息以增强用户体验。<br> 开发时应遵循语义化原则，避免混淆两者用途，确保兼顾功能与合规性。</li></ul><h2 id="_8、src-和-href-的区别" tabindex="-1">8、src 和 href 的区别？ <a class="header-anchor" href="#_8、src-和-href-的区别" aria-label="Permalink to &quot;8、src 和 href 的区别？&quot;">​</a></h2><p>src 和 href 都是 HTML 中特定素的属性，都可以用来引入外部的资源。两者区别如下：</p><ul><li>src：全称 source，它通常用于 img、video、audio、script 素，通过 src 指向请求外部资源的来源地址，指向的内容会嵌入到文档中当前标签所在位置，在请求 src 资源时，它会将资源下载并应用到文档内，比如说：js 脚本、img 图片、frame 等素。当浏览器解析到该素时，会暂停其它资源下载，直到将该资源加载、编译、执行完毕。这也是为什么将 js 脚本放在底部而不是头部的原因。</li><li>href：全称 hyper reference，意味着超链接，指向网络资源，当浏览器识别到它指向的⽂件时，就会并⾏下载资源，不会停⽌对当前⽂档的处理，通常用于 a、link 素。</li></ul>`,60),o=[n];function d(e,r,h,g,p,c){return s(),i("div",null,o)}const b=t(l,[["render",d]]);export{E as __pageData,b as default};
