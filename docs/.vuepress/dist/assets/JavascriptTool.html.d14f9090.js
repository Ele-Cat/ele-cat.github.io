import{_ as e,a as o,o as c,c as l,b as n,d as p,F as r,f as s,h as t}from"./app.625dc6e8.js";const u={},i=n("h1",{id:"\u81EA\u5B9A\u4E49\u5DE5\u5177\u51FD\u6570\u5E93",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u81EA\u5B9A\u4E49\u5DE5\u5177\u51FD\u6570\u5E93","aria-hidden":"true"},"#"),s(" \u81EA\u5B9A\u4E49\u5DE5\u5177\u51FD\u6570\u5E93")],-1),k={href:"https://zxfjd3g.github.io/ec_utils-docs/",target:"_blank",rel:"noopener noreferrer"},b=s("\u5B66\u4E60\u5730\u5740"),m=t('<h2 id="\u6253\u5305\u5DE5\u5177\u5E93" tabindex="-1"><a class="header-anchor" href="#\u6253\u5305\u5DE5\u5177\u5E93" aria-hidden="true">#</a> \u6253\u5305\u5DE5\u5177\u5E93</h2><h3 id="_01-\u521B\u5EFA\u5DE5\u5177\u5305\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#_01-\u521B\u5EFA\u5DE5\u5177\u5305\u9879\u76EE" aria-hidden="true">#</a> 01. \u521B\u5EFA\u5DE5\u5177\u5305\u9879\u76EE</h3><h4 id="_1-1-\u5B89\u88C5node" tabindex="-1"><a class="header-anchor" href="#_1-1-\u5B89\u88C5node" aria-hidden="true">#</a> 1.1 \u5B89\u88C5Node</h4>',3),d={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},g=s("Node\u5B98\u7F51"),y=t(`<h4 id="_1-2-\u521B\u5EFA\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#_1-2-\u521B\u5EFA\u9879\u76EE" aria-hidden="true">#</a> 1.2 \u521B\u5EFA\u9879\u76EE</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u521B\u5EFA\u4E00\u4E2A\u7A7A\u7684\u9879\u76EE\u6587\u4EF6\u5939: ec-utils</span>
<span class="token comment"># \u5728\u6587\u4EF6\u5939\u4E0B\u6267\u884C\u547D\u4EE4</span>
<span class="token function">npm</span> init -y
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-3-\u5B89\u88C5\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_1-3-\u5B89\u88C5\u4F9D\u8D56" aria-hidden="true">#</a> 1.3 \u5B89\u88C5\u4F9D\u8D56</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i webpack webpack-cli
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-4-\u914D\u7F6Ewebpack" tabindex="-1"><a class="header-anchor" href="#_1-4-\u914D\u7F6Ewebpack" aria-hidden="true">#</a> 1.4 \u914D\u7F6Ewebpack</h4><ul><li><code>webpack.config.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u5F0F</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u4E5F\u53EF\u4EE5\u4F7F\u7528 production</span>
  <span class="token comment">// \u5165\u53E3</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span> 
  <span class="token comment">// \u51FA\u53E3</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6253\u5305\u6587\u4EF6\u5939</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6253\u5305\u6587\u4EF6</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;ec-utils.js&#39;</span><span class="token punctuation">,</span> 
    <span class="token comment">// \u5411\u5916\u66B4\u9732\u7684\u5BF9\u8C61\u7684\u540D\u79F0</span>
    <span class="token literal-property property">library</span><span class="token operator">:</span> <span class="token string">&#39;ecUtils&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6253\u5305\u751F\u6210\u5E93\u53EF\u4EE5\u901A\u8FC7esm/commonjs/reqirejs\u7684\u8BED\u6CD5\u5F15\u5165</span>
    <span class="token literal-property property">libraryTarget</span><span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span><span class="token punctuation">,</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_1-5-\u5728\u5165\u53E3js\u4E2D\u66B4\u9732\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_1-5-\u5728\u5165\u53E3js\u4E2D\u66B4\u9732\u529F\u80FD" aria-hidden="true">#</a> 1.5 \u5728\u5165\u53E3JS\u4E2D\u66B4\u9732\u529F\u80FD</h4><ul><li><code>src/index.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;\u6D4B\u8BD5\u81EA\u5B9A\u4E49\u5305&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test()&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_1-6-\u914D\u7F6E\u6253\u5305\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#_1-6-\u914D\u7F6E\u6253\u5305\u547D\u4EE4" aria-hidden="true">#</a> 1.6 \u914D\u7F6E\u6253\u5305\u547D\u4EE4</h4><ul><li><code>package.json</code></li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;build:watch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --watch&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-7-\u5BF9\u9879\u76EE\u8FDB\u884C\u6253\u5305" tabindex="-1"><a class="header-anchor" href="#_1-7-\u5BF9\u9879\u76EE\u8FDB\u884C\u6253\u5305" aria-hidden="true">#</a> 1.7 \u5BF9\u9879\u76EE\u8FDB\u884C\u6253\u5305</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run build:watch
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-8-\u6D4B\u8BD5\u4F7F\u7528\u81EA\u5B9A\u4E49\u5305" tabindex="-1"><a class="header-anchor" href="#_1-8-\u6D4B\u8BD5\u4F7F\u7528\u81EA\u5B9A\u4E49\u5305" aria-hidden="true">#</a> 1.8 \u6D4B\u8BD5\u4F7F\u7528\u81EA\u5B9A\u4E49\u5305</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../dist/ec-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    ecUtils<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_02-\u53D1\u5E03\u5230npm\u4E2D\u592E\u4ED3\u5E93" tabindex="-1"><a class="header-anchor" href="#_02-\u53D1\u5E03\u5230npm\u4E2D\u592E\u4ED3\u5E93" aria-hidden="true">#</a> 02. \u53D1\u5E03\u5230npm\u4E2D\u592E\u4ED3\u5E93</h3><h4 id="_2-1-\u5B8C\u5584-package-json" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5B8C\u5584-package-json" aria-hidden="true">#</a> 2.1 \u5B8C\u5584 package.json</h4><ul><li>\u6CE8\u610F: <ul><li>name: \u5FC5\u987B\u662F\u552F\u4E00\u7684\u540D\u79F0(\u5728npm\u5728\u7EBF\u4E2D\u592E\u4ED3\u5E93\u4E2D\u6CA1\u6709\u540C\u540D\u7684)</li><li>main: \u5FC5\u987B\u6307\u5B9A\u4E3A\u6253\u5305\u751F\u6210\u7684js\u6587\u4EF6</li><li>keywords: \u6307\u5B9A\u4E00\u4E9B\u65B9\u4FBF\u522B\u7684\u7A0B\u5E8F\u5458\u641C\u7D22\u5230\u5F53\u524D\u5E93\u7684\u5173\u952E\u5B57</li></ul></li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;utils&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xfzhang&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5C1A\u7845\u8C37-\u524D\u7AEF-\u81EA\u5B9A\u4E49\u5DE5\u5177\u51FD\u6570\u5E93&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;ec&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;utils&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;array&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;function&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;event-bus&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pub-sub&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;promise&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist/ec-utils.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build:watch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --watch&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.10.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.2.0&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="_2-2-npm\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_2-2-npm\u914D\u7F6E" aria-hidden="true">#</a> 2.2 npm\u914D\u7F6E</h4><ul><li>npm\u914D\u7F6E\u7684\u4E2D\u592E\u4ED3\u5E93\u4E0D\u80FD\u662F\u6DD8\u5B9D\u955C\u50CF</li><li>\u53D1\u5E03\u524D\u5FC5\u987B\u6267\u884C: <code>npm config set registry https://registry.npmjs.org/</code></li><li>\u4E0D\u7528\u53D1\u5E03\u65F6: <code>npm config set registry http://registry.npm.taobao.org/</code></li><li>\u67E5\u770B\u914D\u7F6E: <code>npm config list</code></li></ul><h4 id="_2-3-\u6CE8\u518Cnpm\u4E2D\u592E\u4ED3\u5E93\u8D26\u53F7" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6CE8\u518Cnpm\u4E2D\u592E\u4ED3\u5E93\u8D26\u53F7" aria-hidden="true">#</a> 2.3 \u6CE8\u518Cnpm\u4E2D\u592E\u4ED3\u5E93\u8D26\u53F7</h4><ul><li>\u6CE8\u518C\u5730\u5740: https://www.npmjs.com/</li><li>\u5173\u952E\u4FE1\u606F: \u7528\u6237\u540D/\u5BC6\u7801/\u90AE\u7BB1(\u9700\u8981\u9A8C\u8BC1)</li></ul><h4 id="_2-4-\u6DFB\u52A0\u7528\u6237" tabindex="-1"><a class="header-anchor" href="#_2-4-\u6DFB\u52A0\u7528\u6237" aria-hidden="true">#</a> 2.4 \u6DFB\u52A0\u7528\u6237</h4><ul><li>\u6267\u884C: npm addUser</li><li>\u767B\u9646npm\u4ED3\u5E93</li><li>\u4F9D\u6B21\u6307\u5B9A\u7528\u6237\u540D/\u5BC6\u7801/\u90AE\u7BB1</li></ul><h4 id="_2-5-\u53D1\u5E03\u4ED3\u5E93" tabindex="-1"><a class="header-anchor" href="#_2-5-\u53D1\u5E03\u4ED3\u5E93" aria-hidden="true">#</a> 2.5 \u53D1\u5E03\u4ED3\u5E93</h4><ul><li>\u6267\u884C: <code>npm publish</code></li><li>\u53D1\u5E03\u5931\u8D25, \u539F\u56E0\u662F\u5E93\u7684\u540D\u79F0\u91CD\u590D\u4E86, \u4FEE\u6539name\u4E3A\u4E00\u4E2A\u552F\u4E00\u503C, \u518D\u53D1\u5E03</li></ul><h4 id="_2-6\u66F4\u65B0\u4EE3\u7801\u540E\u518D\u53D1\u5E03" tabindex="-1"><a class="header-anchor" href="#_2-6\u66F4\u65B0\u4EE3\u7801\u540E\u518D\u53D1\u5E03" aria-hidden="true">#</a> 2.6\u66F4\u65B0\u4EE3\u7801\u540E\u518D\u53D1\u5E03</h4><ul><li>\u4FEE\u6539\u9879\u76EE\u5E93\u7684\u7248\u672C\u53F7: package.json \u4E2D\u7684version \u4ECE1.0.0 \u6539\u4E3A1.0.1, \u6CE8\u610F\u4E00\u5B9A\u8981\u53D8\u5927</li><li>\u4FEE\u6539\u4EE3\u7801\u540E\u91CD\u65B0\u6253\u5305: <code>npm run build</code></li><li>\u6267\u884C\u53D1\u5E03: <code>npm publish</code></li></ul><h4 id="_2-7-\u5F3A\u5236\u5220\u9664\u5DF2\u53D1\u5E03\u7684\u5E93" tabindex="-1"><a class="header-anchor" href="#_2-7-\u5F3A\u5236\u5220\u9664\u5DF2\u53D1\u5E03\u7684\u5E93" aria-hidden="true">#</a> 2.7 \u5F3A\u5236\u5220\u9664\u5DF2\u53D1\u5E03\u7684\u5E93</h4><ul><li>\u6267\u884C: <code>npm unpublish --force</code></li><li>\u6CE8\u610F: \u5FC5\u987B\u572872\u5C0F\u65F6\u5185, \u5426\u5219\u4E0D\u80FD\u518D\u5220\u9664</li></ul><h3 id="_03-\u4F7F\u7528\u81EA\u5B9A\u4E49\u5DE5\u5177\u5305" tabindex="-1"><a class="header-anchor" href="#_03-\u4F7F\u7528\u81EA\u5B9A\u4E49\u5DE5\u5177\u5305" aria-hidden="true">#</a> 03. \u4F7F\u7528\u81EA\u5B9A\u4E49\u5DE5\u5177\u5305</h3><h4 id="_3-1-\u4E0B\u8F7D\u5DE5\u5177\u5305" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4E0B\u8F7D\u5DE5\u5177\u5305" aria-hidden="true">#</a> 3.1 \u4E0B\u8F7D\u5DE5\u5177\u5305</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u540D\u79F0\u662F\u4F60\u524D\u9762\u6307\u5B9A\u7684\u5E93\u7684\u540D\u79F0</span>
<span class="token function">npm</span> <span class="token function">install</span> a-utils2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-2-\u7F51\u9875\u4E2D\u5F15\u5165\u5E76\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_3-2-\u7F51\u9875\u4E2D\u5F15\u5165\u5E76\u4F7F\u7528" aria-hidden="true">#</a> 3.2 \u7F51\u9875\u4E2D\u5F15\u5165\u5E76\u4F7F\u7528</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./node_modules/a-utils2/dist/ec-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  ecUtils<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_3-3-\u6A21\u5757\u5316\u5F15\u5165\u5E76\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_3-3-\u6A21\u5757\u5316\u5F15\u5165\u5E76\u4F7F\u7528" aria-hidden="true">#</a> 3.3 \u6A21\u5757\u5316\u5F15\u5165\u5E76\u4F7F\u7528</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F7F\u7528ESM\u5F15\u5165</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>test<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;a-utils2&#39;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528commonjs\u5F15\u5165</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>test<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;a-utils2&#39;</span><span class="token punctuation">)</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5404\u79CD\u81EA\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5404\u79CD\u81EA\u5B9A\u4E49" aria-hidden="true">#</a> \u5404\u79CD\u81EA\u5B9A\u4E49</h2><h3 id="_01-\u51FD\u6570\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_01-\u51FD\u6570\u76F8\u5173" aria-hidden="true">#</a> 01. \u51FD\u6570\u76F8\u5173</h3><h4 id="_1-1-call-apply-bind" tabindex="-1"><a class="header-anchor" href="#_1-1-call-apply-bind" aria-hidden="true">#</a> 1.1 call()&amp; apply()&amp; bind()</h4><h5 id="_1-1-1-api\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_1-1-1-api\u8BF4\u660E" aria-hidden="true">#</a> 1.1.1 API\u8BF4\u660E</h5><ul><li>call() <ul><li>\u8BED\u6CD5: call(fn, obj, ...args)</li><li>\u529F\u80FD: \u6267\u884Cfn, \u4F7Fthis\u4E3Aobj, \u5E76\u5C06\u540E\u9762\u7684n\u4E2A\u53C2\u6570\u4F20\u7ED9fn(\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684call\u65B9\u6CD5)</li></ul></li><li>apply() <ul><li>\u8BED\u6CD5: apply(fn, obj, args)</li><li>\u529F\u80FD: \u6267\u884Cfn, \u4F7Fthis\u4E3Aobj, \u5E76\u5C06args\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4F20\u7ED9fn(\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684apply\u65B9\u6CD5)</li></ul></li><li>bind() <ul><li>\u8BED\u6CD5: bind(fn, obj, ...args)</li><li>\u529F\u80FD: \u7ED9fn\u7ED1\u5B9Athis\u4E3Aobj, \u5E76\u6307\u5B9A\u53C2\u6570\u4E3A\u540E\u9762\u7684n\u4E2A\u53C2\u6570 (\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684bind\u65B9\u6CD5)</li></ul></li></ul><h5 id="_1-1-2-\u5B9E\u73B0\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_1-1-2-\u5B9E\u73B0\u8BF4\u660E" aria-hidden="true">#</a> 1.1.2 \u5B9E\u73B0\u8BF4\u660E</h5><ul><li>\u533A\u522Bcall()/apply()/bind() <ul><li>call(obj)/apply(obj): \u8C03\u7528\u51FD\u6570, \u6307\u5B9A\u51FD\u6570\u4E2D\u7684this\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u7684\u503C</li><li>bind(obj): \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570, \u65B0\u51FD\u6570\u5185\u90E8\u4F1A\u8C03\u7528\u539F\u6765\u7684\u51FD\u6570, \u4E14this\u4E3Abind()\u6307\u5B9A\u7684\u7B2C\u4E00\u53C2\u6570\u7684\u503C</li><li>\u6CE8\u610F: \u5982\u679Cobj\u662Fnull/undefined, this\u4E3Awindow</li></ul></li><li>\u5E94\u7528 <ul><li>call()/apply()\u5E94\u7528: \u6839\u636E\u4F2A\u6570\u7EC4\u751F\u6210\u771F\u6570\u7EC4</li><li>bind(): react\u4E2D\u7EC4\u4EF6\u7684\u81EA\u5B9A\u4E49\u65B9\u6CD5 / vue\u4E2D\u7684\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u5185\u90E8</li></ul></li><li>\u81EA\u5B9A\u4E49call()/apply() <ul><li>\u7ED9obj\u6DFB\u52A0\u4E00\u4E2A\u4E34\u65F6\u65B9\u6CD5, \u65B9\u6CD5\u540D\u4EFB\u610F, \u503C\u4E3A\u5F53\u524D\u51FD\u6570</li><li>\u901A\u8FC7obj\u8C03\u7528\u8FD9\u4E2A\u4E34\u65F6\u65B9\u6CD5, \u5E76\u5C06\u63A5\u6536\u7684\u53C2\u6570\u4F20\u5165</li><li>\u5220\u9664obj\u4E0A\u7684\u8FD9\u4E2A\u4E34\u65F6\u65B9\u6CD5\u5C5E\u6027</li></ul></li><li>\u81EA\u5B9A\u4E49\u5B9E\u73B0bind() <ul><li>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570</li><li>\u5728\u65B0\u51FD\u6570\u5185\u90E8\u901A\u8FC7\u539F\u51FD\u6570\u5BF9\u8C61\u7684call\u65B9\u6CD5\u6765\u6267\u884C\u539F\u51FD\u6570</li><li>\u6307\u5B9A\u539F\u51FD\u6570\u7684this\u4E3Aobj</li><li>\u6307\u5B9A\u53C2\u6570\u4E3Abind\u8C03\u7528\u7684\u53C2\u6570\u548C\u540E\u9762\u65B0\u51FD\u6570\u8C03\u7528\u7684\u53C2\u6570 #1.1.3.\u7F16\u7801\u5B9E\u73B0</li></ul></li><li>\u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684call\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684call\u65B9\u6CD5
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;call()&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5982\u679Cobj\u662Fundefined/null, this\u6307\u5B9A\u4E3Awindow</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token operator">===</span><span class="token keyword">undefined</span> <span class="token operator">||</span> obj<span class="token operator">===</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return fn(...args)</span>
    obj <span class="token operator">=</span> window
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7ED9obj\u6DFB\u52A0\u4E00\u4E2A\u4E34\u65F6\u65B9\u6CD5, \u65B9\u6CD5\u6307\u5411\u7684\u51FD\u6570\u5C31\u662Ffn</span>
  obj<span class="token punctuation">.</span>tempFn <span class="token operator">=</span> fn
  <span class="token comment">// \u901A\u8FC7obj\u6765\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5 ==&gt; \u4E5F\u5C31\u4F1A\u6267\u884Cfn\u51FD\u6570 ==&gt; \u6B64\u65F6fn\u4E2D\u7684this\u80AF\u5B9A\u4E3Aobj</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">tempFn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664obj\u4E0A\u7684\u4E34\u65F6\u65B9\u6CD5</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>tempFn
  <span class="token comment">// \u8FD4\u56DEfn\u6267\u884C\u7684\u7ED3\u679C</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>\u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684apply\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684apply\u65B9\u6CD5
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;apply()&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5982\u679Cobj\u662Fundefined/null, this\u6307\u5B9A\u4E3Awindow</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token operator">===</span><span class="token keyword">undefined</span> <span class="token operator">||</span> obj<span class="token operator">===</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return fn(...args)</span>
    obj <span class="token operator">=</span> window
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7ED9obj\u6DFB\u52A0\u4E00\u4E2A\u4E34\u65F6\u65B9\u6CD5, \u65B9\u6CD5\u6307\u5411\u7684\u51FD\u6570\u5C31\u662Ffn</span>
  obj<span class="token punctuation">.</span>tempFn <span class="token operator">=</span> fn
  <span class="token comment">// \u901A\u8FC7obj\u6765\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5 ==&gt; \u4E5F\u5C31\u4F1A\u6267\u884Cfn\u51FD\u6570 ==&gt; \u6B64\u65F6fn\u4E2D\u7684this\u80AF\u5B9A\u4E3Aobj</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">tempFn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664obj\u4E0A\u7684\u4E34\u65F6\u65B9\u6CD5</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>tempFn
  <span class="token comment">// \u8FD4\u56DEfn\u6267\u884C\u7684\u7ED3\u679C</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>\u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684bind\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>call<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./call&#39;</span>
<span class="token comment">/* 
  \u81EA\u5B9A\u4E49\u51FD\u6570\u5BF9\u8C61\u7684bind\u65B9\u6CD5
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;bind()&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span> args2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u901A\u8FC7call\u8C03\u7528\u539F\u51FD\u6570, \u5E76\u6307\u5B9Athis\u4E3Aobj, \u5B9E\u53C2\u4E3Aargs\u4E0Eargs2</span>
    <span class="token keyword">return</span> <span class="token function">call</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>args2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_1-2-\u51FD\u6570\u7684\u8282\u6D41\u4E0E\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#_1-2-\u51FD\u6570\u7684\u8282\u6D41\u4E0E\u9632\u6296" aria-hidden="true">#</a> 1.2 \u51FD\u6570\u7684\u8282\u6D41\u4E0E\u9632\u6296</h4><h5 id="_1-2-1-\u76F8\u5173\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_1-2-1-\u76F8\u5173\u7406\u89E3" aria-hidden="true">#</a> 1.2.1 \u76F8\u5173\u7406\u89E3</h5><ul><li>\u4E8B\u4EF6\u9891\u7E41\u89E6\u53D1\u53EF\u80FD\u9020\u6210\u7684\u95EE\u9898? <ul><li>\u4E00\u4E9B\u6D4F\u89C8\u5668\u4E8B\u4EF6:window.onresize\u3001window.mousemove\u7B49\uFF0C\u89E6\u53D1\u7684\u9891\u7387\u975E\u5E38\u9AD8\uFF0C\u4F1A\u9020\u6210\u754C\u9762\u5361\u987F</li><li>\u5982\u679C\u5411\u540E\u53F0\u53D1\u9001\u8BF7\u6C42\uFF0C\u9891\u7E41\u89E6\u53D1\uFF0C\u5BF9\u670D\u52A1\u5668\u9020\u6210\u4E0D\u5FC5\u8981\u7684\u538B\u529B</li></ul></li><li>\u5982\u4F55\u9650\u5236\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u9891\u7E41\u8C03\u7528 <ul><li>\u51FD\u6570\u8282\u6D41</li><li>\u51FD\u6570\u9632\u6296</li></ul></li><li>\u51FD\u6570\u8282\u6D41(throttle) <ul><li>\u7406\u89E3: <ul><li>\u5728\u51FD\u6570\u9700\u8981\u9891\u7E41\u89E6\u53D1\u65F6: \u51FD\u6570\u6267\u884C\u4E00\u6B21\u540E\uFF0C\u53EA\u6709\u5927\u4E8E\u8BBE\u5B9A\u7684\u6267\u884C\u5468\u671F\u540E\u624D\u4F1A\u6267\u884C\u7B2C\u4E8C\u6B21</li><li>\u9002\u5408\u591A\u6B21\u4E8B\u4EF6\u6309\u65F6\u95F4\u505A\u5E73\u5747\u5206\u914D\u89E6\u53D1</li></ul></li><li>\u573A\u666F\uFF1A <ul><li>\u7A97\u53E3\u8C03\u6574\uFF08resize\uFF09</li><li>\u9875\u9762\u6EDA\u52A8\uFF08scroll\uFF09</li><li>DOM \u5143\u7D20\u7684\u62D6\u62FD\u529F\u80FD\u5B9E\u73B0\uFF08mousemove\uFF09</li><li>\u62A2\u8D2D\u75AF\u72C2\u70B9\u51FB\uFF08click\uFF09</li></ul></li></ul></li><li>\u51FD\u6570\u9632\u6296(debounce) <ul><li>\u7406\u89E3: <ul><li>\u5728\u51FD\u6570\u9700\u8981\u9891\u7E41\u89E6\u53D1\u65F6: \u5728\u89C4\u5B9A\u65F6\u95F4\u5185\uFF0C\u53EA\u8BA9\u6700\u540E\u4E00\u6B21\u751F\u6548\uFF0C\u524D\u9762\u7684\u4E0D\u751F\u6548\u3002</li><li>\u9002\u5408\u591A\u6B21\u4E8B\u4EF6\u4E00\u6B21\u54CD\u5E94\u7684\u60C5\u51B5</li></ul></li><li>\u573A\u666F: <ul><li>\u8F93\u5165\u6846\u5B9E\u65F6\u641C\u7D22\u8054\u60F3\uFF08keyup/input\uFF09</li><li>\u533A\u522B\u51FD\u6570\u8282\u6D41\u4E0E\u9632\u6296</li></ul></li></ul></li></ul><h5 id="_1-2-2-api\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_1-2-2-api\u8BF4\u660E" aria-hidden="true">#</a> 1.2.2 API\u8BF4\u660E</h5><ul><li>throttle() \u8282\u6D41 <ul><li>\u8BED\u6CD5: throttle(callback, wait)</li><li>\u529F\u80FD: \u521B\u5EFA\u4E00\u4E2A\u8282\u6D41\u51FD\u6570\uFF0C\u5728 wait \u6BEB\u79D2\u5185\u6700\u591A\u6267\u884C callback \u4E00\u6B21</li></ul></li><li>debounce() \u9632\u6296 <ul><li>\u8BED\u6CD5: debounce(callback, wait)</li><li>\u529F\u80FD: \u521B\u5EFA\u4E00\u4E2A\u9632\u6296\u52A8\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u4ECE\u4E0A\u4E00\u6B21\u88AB\u8C03\u7528\u540E\uFF0C\u5EF6\u8FDF wait \u6BEB\u79D2\u540E\u8C03\u7528 callback</li></ul></li></ul><h5 id="_1-2-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-2-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 1.2.3 \u7F16\u7801\u5B9E\u73B0</h5><ul><li>\u51FD\u6570\u8282\u6D41</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u5B9E\u73B0\u51FD\u6570\u8282\u6D41
- \u8BED\u6CD5: throttle(callback, wait)
- \u529F\u80FD: \u521B\u5EFA\u4E00\u4E2A\u8282\u6D41\u51FD\u6570\uFF0C\u5728 wait \u6BEB\u79D2\u5185\u6700\u591A\u6267\u884C \`callback\` \u4E00\u6B21
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u4E8B\u4EF6\u76D1\u542C\u51FD\u6570(\u4E5F\u5C31\u662F\u8282\u6D41\u51FD\u6570)</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;throttle event&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u53EA\u6709\u5F53\u8DDD\u79BB\u4E0A\u6B21\u5904\u7406\u7684\u65F6\u95F4\u95F4\u9694\u8D85\u8FC7\u4E86wait\u65F6, \u624D\u6267\u884C\u5904\u7406\u4E8B\u4EF6\u7684\u51FD\u6570</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> current <span class="token operator">-</span> start <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token comment">// \u9700\u8981\u6307\u5B9Athis\u548C\u53C2\u6570</span>
      start <span class="token operator">=</span> current
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>\u51FD\u6570\u9632\u6296</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u5B9E\u73B0\u51FD\u6570\u9632\u6296
- \u8BED\u6CD5: debounce(callback, wait)
- \u529F\u80FD: \u521B\u5EFA\u4E00\u4E2A\u9632\u6296\u52A8\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u4ECE\u4E0A\u4E00\u6B21\u88AB\u8C03\u7528\u540E\uFF0C\u5EF6\u8FDF \`wait\` \u6BEB\u79D2\u540E\u8C03\u7528 \`callback\`
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">debounce</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7528\u6765\u4FDD\u5B58\u5B9A\u65F6\u5668\u4EFB\u52A1\u7684\u6807\u8BC6id</span>
  <span class="token keyword">let</span> timeoutId <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> 
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u4E8B\u4EF6\u76D1\u542C\u51FD\u6570(\u4E5F\u5C31\u662F\u9632\u6296\u51FD\u6570)</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;debounce event&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6E05\u9664\u672A\u6267\u884C\u7684\u5B9A\u65F6\u5668\u4EFB\u52A1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeoutId<span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeoutId<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u542F\u52A8\u5EF6\u8FDF await \u65F6\u95F4\u540E\u6267\u884C\u7684\u5B9A\u65F6\u5668\u4EFB\u52A1</span>
    timeoutId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8C03\u7528 callback \u5904\u7406\u4E8B\u4EF6</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span>
      <span class="token comment">// \u5904\u7406\u5B8C\u540E\u91CD\u7F6E\u6807\u8BC6</span>
      timeoutId <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="_02-\u6570\u7EC4\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_02-\u6570\u7EC4\u76F8\u5173" aria-hidden="true">#</a> 02. \u6570\u7EC4\u76F8\u5173</h3><h4 id="_2-1-api\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#_2-1-api\u5217\u8868" aria-hidden="true">#</a> 2.1 API\u5217\u8868</h4><ul><li>map()</li><li>reduce()</li><li>filter()</li><li>find()</li><li>findIndex()</li><li>every()</li><li>some()</li><li>unique1() / unique2() / unique3()</li><li>concat()</li><li>slice()</li><li>flatten()</li><li>chunk() / chunk2()</li><li>difference()</li><li>pull()</li><li>pullAll()</li><li>drop()</li><li>dropRight()</li></ul><h4 id="_2-2-\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" aria-hidden="true">#</a> 2.2 \u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5</h4><h5 id="_2-2-1-\u4F7F\u7528\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-1-\u4F7F\u7528\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" aria-hidden="true">#</a> 2.2.1 \u4F7F\u7528\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5</h5><ul><li>map(): \u8FD4\u56DE\u4E00\u4E2A\u7531\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u7684\u65B0\u6570\u7EC4</li><li>reduce(): \u4ECE\u5DE6\u5230\u53F3\u4E3A\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u6267\u884C\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u628A\u4E0A\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u653E\u5728\u4E00\u4E2A\u6682\u5B58\u5668\u4E2D\u4F20\u7ED9\u4E0B\u6B21\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u6700\u540E\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C</li><li>filter(): \u5C06\u6240\u6709\u5728\u8FC7\u6EE4\u51FD\u6570\u4E2D\u8FD4\u56DE true \u7684\u6570\u7EC4\u5143\u7D20\u653E\u8FDB\u4E00\u4E2A\u65B0\u6570\u7EC4\u4E2D\u5E76\u8FD4\u56DE</li><li>find(): \u627E\u5230\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u90A3\u4E2A\u5143\u7D20\u7684\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u5219\u8FD4\u56DE undefined\u3002</li><li>findIndex(): \u627E\u5230\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u90A3\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u5219\u8FD4\u56DE -1\u3002</li><li>every(): \u5982\u679C\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\uFF0C\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002</li><li>some(): \u5982\u679C\u6570\u7EC4\u4E2D\u81F3\u5C11\u6709\u4E00\u4E2A\u5143\u7D20\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\uFF0C\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002</li></ul><h5 id="_2-2-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-2-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.2.2 \u7F16\u7801\u5B9E\u73B0</h5><ul><li>\u5B9E\u73B0\u6570\u7EC4\u58F0\u660E\u5F0F\u5904\u7406\u7CFB\u5217\u5DE5\u5177\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u5B9E\u73B0map()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06callback\u7684\u6267\u884C\u7ED3\u679C\u6DFB\u52A0\u5230\u7ED3\u679C\u6570\u7EC4\u4E2D</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token comment">/*
\u5B9E\u73B0reduce() 
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reduce</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> initValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> initValue
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528\u56DE\u8C03\u51FD\u6570\u5C06\u8FD4\u56DE\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9result</span>
    result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u5B9E\u73B0filter()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u5B9E\u73B0find()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">find</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u5B9E\u73B0findIndex()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">findIndex</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> index
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>

 <span class="token comment">/* 
 \u5B9E\u73B0every()
 */</span>
 <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">every</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u6709\u4E00\u4E2A\u7ED3\u679C\u4E3Afalse, \u76F4\u63A5\u8FD4\u56DEfalse</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u5B9E\u73B0some()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">some</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u6709\u4E00\u4E2A\u7ED3\u679C\u4E3Atrue, \u76F4\u63A5\u8FD4\u56DEtrue</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h4 id="_2-3-\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> 2.3 \u6570\u7EC4\u53BB\u91CD</h4><h5 id="_2-3-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-3-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.3.1 API \u8BF4\u660E</h5><ul><li>\u6839\u636E\u5F53\u524D\u6570\u7EC4\u4EA7\u751F\u4E00\u4E2A\u53BB\u9664\u91CD\u590D\u5143\u7D20\u540E\u7684\u65B0\u6570\u7EC4</li><li>\u5982: [2, 3, 2, 7, 6, 7] ==&gt; [2, 3, 7, 6]</li></ul><h5 id="_2-3-2-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-3-2-\u5B9E\u73B0" aria-hidden="true">#</a> 2.3.2 \u5B9E\u73B0</h5><ul><li>\u65B9\u6CD51: \u5229\u7528forEach()\u548CindexOf() <ul><li>\u8BF4\u660E: \u672C\u8D28\u662F\u53CC\u91CD\u904D\u5386, \u6548\u7387\u5DEE\u4E9B</li></ul></li><li>\u65B9\u6CD52: \u5229\u7528forEach() + \u5BF9\u8C61\u5BB9\u5668 <ul><li>\u8BF4\u660E: \u53EA\u9700\u4E00\u91CD\u904D\u5386, \u6548\u7387\u9AD8\u4E9B</li></ul></li><li>\u65B9\u6CD53: \u5229\u7528ES6\u8BED\u6CD5: from + Set \u6216\u8005 ... + Set <ul><li>\u8BF4\u660E: \u7F16\u7801\u7B80\u6D01</li></ul></li></ul><h5 id="_2-3-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-3-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.3.3 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
\u65B9\u6CD51: \u5229\u7528forEach()\u548CindexOf()
  \u8BF4\u660E: \u672C\u8D28\u662F\u53CC\u91CD\u904D\u5386, \u6548\u7387\u5DEE\u4E9B
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">unique1</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token comment">/*
\u65B9\u6CD52: \u5229\u7528forEach() + \u5BF9\u8C61\u5BB9\u5668
  \u8BF4\u660E: \u53EA\u9700\u4E00\u91CD\u904D\u5386, \u6548\u7387\u9AD8\u4E9B
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">unique2</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token comment">/*
\u65B9\u6CD53: \u5229\u7528ES6\u8BED\u6CD5
    1). from + Set
    2). ... + Set
    \u8BF4\u660E: \u7F16\u7801\u7B80\u6D01
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">unique3</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// return Array.from(new Set(array))</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h4 id="_2-4-\u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#_2-4-\u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247" aria-hidden="true">#</a> 2.4 \u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247</h4><h5 id="_2-4-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-4-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.4.1 API \u8BF4\u660E</h5><ul><li>concat(): \u5408\u5E76 <ul><li>\u8BED\u6CD5: var new_array = concat(array, value1[, value2[, ...[, valueN]]])</li><li>\u529F\u80FD: \u5C06n\u4E2A\u6570\u7EC4\u6216\u503C\u4E0E\u5F53\u524D\u6570\u7EC4\u5408\u5E76\u751F\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4, \u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</li></ul></li><li>slice(): \u5207\u7247 <ul><li>\u8BED\u6CD5: var new_array = slice(array, [begin[, end]])</li><li>\u529F\u80FD: \u8FD4\u56DE\u4E00\u4E2A\u7531 begin \u548C end \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D, \u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</li></ul></li></ul><h5 id="_2-4-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-4-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.4.2 \u7F16\u7801\u5B9E\u73B0</h5><ul><li>\u81EA\u5B9A\u4E49\u6570\u7EC4\u5408\u5E76</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u8BED\u6CD5: var new_array = concat(old_array, value1[, value2[, ...[, valueN]]]) 
\u529F\u80FD: \u5C06n\u4E2A\u6570\u7EC4\u6216\u503C\u4E0E\u5F53\u524D\u6570\u7EC4\u5408\u5E76\u751F\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">concat</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span>
  values<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>\u81EA\u5B9A\u4E49\u6570\u7EC4\u5207\u7247</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
  \u8BED\u6CD5: var new_array = slice(oldArr, [begin[, end]])
  \u529F\u80FD: \u8FD4\u56DE\u4E00\u4E2A\u7531 begin \u548C end \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D, \u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">slice</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5F53\u524D\u6570\u7EC4\u662F[], \u76F4\u63A5\u8FD4\u56DE[]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679Cbegin\u8D85\u8FC7\u6700\u5927\u4E0B\u6807, \u76F4\u63A5\u8FD4\u56DE[]</span>
  begin <span class="token operator">=</span> begin <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>begin <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679Cend\u4E0D\u5927\u4E8Ebegin, \u76F4\u63A5\u8FD4\u56DE[]</span>
  end <span class="token operator">=</span> end <span class="token operator">||</span> array<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&gt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    end <span class="token operator">=</span> array<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&lt;=</span> begin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u53D6\u51FA\u4E0B\u6807\u5728[begin, end)\u533A\u95F4\u7684\u5143\u7D20, \u5E76\u4FDD\u5B58\u5230\u6700\u7EC8\u7684\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> begin<span class="token punctuation">;</span> index <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="_2-5-\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#_2-5-\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> 2.5 \u6570\u7EC4\u6241\u5E73\u5316</h4><h5 id="_2-5-1-api\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-5-1-api\u8BF4\u660E" aria-hidden="true">#</a> 2.5.1 API\u8BF4\u660E</h5><ul><li>\u8BED\u6CD5: flatten(array)</li><li>\u53D6\u51FA\u5D4C\u5957\u6570\u7EC4(\u591A\u7EF4)\u4E2D\u7684\u6240\u6709\u5143\u7D20\u653E\u5230\u4E00\u4E2A\u65B0\u6570\u7EC4(\u4E00\u7EF4)\u4E2D</li><li>\u5982: [1, [3, [2, 4]]] ==&gt; [1, 3, 2, 4]</li></ul><h5 id="_2-5-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-5-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.5.2.\u7F16\u7801\u5B9E\u73B0</h5><ul><li>\u65B9\u6CD5\u4E00: \u9012\u5F52 + reduce() + concat()</li><li>\u65B9\u6CD5\u4E8C: ... + some() + concat()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u6570\u7EC4\u6241\u5E73\u5316: \u53D6\u51FA\u5D4C\u5957\u6570\u7EC4(\u591A\u7EF4)\u4E2D\u7684\u6240\u6709\u5143\u7D20\u653E\u5230\u4E00\u4E2A\u65B0\u6570\u7EC4(\u4E00\u7EF4)\u4E2D
  \u5982: [1, [3, [2, 4]]]  ==&gt;  [1, 3, 2, 4]
*/</span>

<span class="token comment">/*
\u65B9\u6CD5\u4E00: \u9012\u5F52 + concat()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flatten1</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten1</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">/*
\u65B9\u6CD5\u4E8C: \u9012\u5F52 + reduce() + concat() + some()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flatten2</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">cItem</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cItem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten2</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
\u65B9\u6CD5\u4E09: ... + some() + concat()
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flatten3</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>array<span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h4 id="_2-6-\u6570\u7EC4\u5206\u5757" tabindex="-1"><a class="header-anchor" href="#_2-6-\u6570\u7EC4\u5206\u5757" aria-hidden="true">#</a> 2.6 \u6570\u7EC4\u5206\u5757</h4><h5 id="_2-6-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-6-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.6.1 API \u8BF4\u660E</h5><ul><li>\u8BED\u6CD5: chunk(array, size)</li><li>\u529F\u80FD: \u5C06\u6570\u7EC4\u62C6\u5206\u6210\u591A\u4E2A size \u957F\u5EA6\u7684\u533A\u5757\uFF0C\u6BCF\u4E2A\u533A\u5757\u7EC4\u6210\u5C0F\u6570\u7EC4,\u6574\u4F53\u7EC4\u6210\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4</li><li>\u5982: [1, 3, 5, 6, 7, 8] \u8C03\u7528chunk(arr, 4) ==&gt; [[1, 3, 5, 6], [7,8]]</li></ul><h5 id="_2-6-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-6-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.6.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u5C06\u6570\u7EC4\u62C6\u5206\u6210\u591A\u4E2A size \u957F\u5EA6\u7684\u533A\u5757\uFF0C\u6BCF\u4E2A\u533A\u5757\u7EC4\u6210\u5C0F\u6570\u7EC4,\u6574\u4F53\u7EC4\u6210\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">chunk</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  size <span class="token operator">=</span> size <span class="token operator">||</span> <span class="token number">1</span>

  <span class="token keyword">const</span> bigArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bigArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>smallArr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    smallArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length<span class="token operator">===</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> bigArr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="_2-7-\u6570\u7EC4\u53D6\u5DEE\u5F02" tabindex="-1"><a class="header-anchor" href="#_2-7-\u6570\u7EC4\u53D6\u5DEE\u5F02" aria-hidden="true">#</a> 2.7 \u6570\u7EC4\u53D6\u5DEE\u5F02</h4><h5 id="_2-7-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-7-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.7.1 API \u8BF4\u660E</h5><ul><li>\u8BED\u6CD5: difference(arr1, arr2)</li><li>\u529F\u80FD: \u5F97\u5230\u5F53\u524D\u6570\u7EC4\u4E2D\u6240\u6709\u4E0D\u5728arr\u4E2D\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4(\u4E0D\u6539\u53D8\u539F\u6570\u7EC4)</li><li>\u4F8B\u5B50: difference([1,3,5,7], [5, 8]) ==&gt; [1, 3, 7]</li></ul><h5 id="_2-7-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-7-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.7.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
difference(arr1, arr2): \u5F97\u5230arr1\u4E2D\u6240\u6709\u4E0D\u5728arr2\u4E2D\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4(\u4E0D\u6539\u53D8\u539F\u6570\u7EC4)
    \u5982: [1,3,5,7].difference([5, 8])  ==&gt; [1, 3, 7]
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">difference</span> <span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr2<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr1<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> arr2<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token comment">// return arr1.filter(item =&gt; !arr2.includes(item))</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_2-8-\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-8-\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> 2.8.\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20</h4><h5 id="_2-8-1-api\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_2-8-1-api\u76F8\u5173" aria-hidden="true">#</a> 2.8.1 API\u76F8\u5173</h5><ul><li>pull(array, ...values): <ul><li>\u5220\u9664\u539F\u6570\u7EC4\u4E2D\u4E0Evalue\u76F8\u540C\u7684\u5143\u7D20, \u8FD4\u56DE\u6240\u6709\u5220\u9664\u5143\u7D20\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u539F\u6570\u7EC4\u53D1\u751F\u4E86\u6539\u53D8</li><li>\u5982: pull([1,3,5,3,7], 2, 7, 3, 7) ===&gt; \u539F\u6570\u7EC4\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]</li></ul></li><li>pullAll(array, values): <ul><li>\u529F\u80FD\u4E0Epull\u4E00\u81F4, \u53EA\u662F\u53C2\u6570\u53D8\u4E3A\u6570\u7EC4</li><li>\u5982: pullAll([1,3,5,3,7], [2, 7, 3, 7]) ===&gt; \u6570\u7EC41\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]</li></ul></li></ul><h5 id="_2-8-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-8-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.8.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
1. pull(array, ...values): 
  \u5220\u9664\u6570\u7EC4\u4E2D\u4E0Evalue\u76F8\u540C\u7684\u5143\u7D20, \u8FD4\u56DE\u6240\u6709\u5220\u9664\u5143\u7D20\u7684\u6570\u7EC4
  \u8BF4\u660E: \u6570\u7EC4\u53D1\u751F\u4E86\u6539\u53D8
  \u5982: pull([1,3,5,3,7], 2, 7, 3, 7) ===&gt; \u6570\u7EC4\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]
2. pullAll(array, values): 
  \u529F\u80FD\u4E0Epull\u4E00\u81F4, \u53EA\u662F\u53C2\u6570\u53D8\u4E3A\u6570\u7EC4
  \u5982: pullAll([1,3,5,3,7], [2, 7, 3, 7]) ===&gt; \u6570\u7EC4\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pull</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span> <span class="token operator">||</span> values<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      array<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      index<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pullAll</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>values <span class="token operator">||</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">pull</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token operator">...</span>values<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="_2-9-\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-9-\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> 2.9 \u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20</h4><h5 id="_2-9-1-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_2-9-1-api-\u76F8\u5173" aria-hidden="true">#</a> 2.9.1 API \u76F8\u5173</h5><ul><li>drop(array, count) <ul><li>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u6389\u5DE6\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4, count\u9ED8\u8BA4\u662F1</li><li>\u5982: drop([1,3,5,7], 2) ===&gt; [5, 7]</li></ul></li><li>dropRight(array, count) <ul><li>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u6389\u53F3\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4, count\u9ED8\u8BA4\u662F1</li><li>\u5982: dropRight([1,3,5,7], 2) ===&gt; [1, 3]</li></ul></li></ul><h5 id="_2-9-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-9-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.9.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
1. drop(array, count): 
   \u5F97\u5230\u6570\u7EC4\u8FC7\u6EE4\u6389\u5DE6\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4
   \u8BF4\u660E: \u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4, count\u9ED8\u8BA4\u662F1
   \u5982: drop([1,3,5,7], 2) ===&gt; [5, 7]
2. dropRight(array, count): 
   \u5F97\u5230\u6570\u7EC4\u8FC7\u6EE4\u6389\u53F3\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4
   \u8BF4\u660E: \u4E0D\u6539\u53D8\u6570\u7EC4, count\u9ED8\u8BA4\u662F1
   \u5982: dropRight([1,3,5,7], 2) ===&gt; [1, 3]
*/</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">drop</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> count <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token operator">&gt;=</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dropRight</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> count <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token operator">-</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_03-\u5BF9\u8C61\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_03-\u5BF9\u8C61\u76F8\u5173" aria-hidden="true">#</a> 03. \u5BF9\u8C61\u76F8\u5173</h3><h4 id="_3-1-api\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_3-1-api\u76F8\u5173" aria-hidden="true">#</a> 3.1 API\u76F8\u5173</h4><ul><li>newInstance()</li><li>myInstanceOf()</li><li>mergeObject()</li><li>clone1() / clone2()</li><li>deepClone1() / deepClone2() / deepClone3() / deepClone4()</li></ul><h4 id="_3-2-\u81EA\u5B9A\u4E49new" tabindex="-1"><a class="header-anchor" href="#_3-2-\u81EA\u5B9A\u4E49new" aria-hidden="true">#</a> 3.2 \u81EA\u5B9A\u4E49new</h4><h5 id="_3-2-1-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_3-2-1-api-\u76F8\u5173" aria-hidden="true">#</a> 3.2.1 API \u76F8\u5173</h5><ul><li>\u8BED\u6CD5: newInstance(Fn, ...args)</li><li>\u529F\u80FD: \u521B\u5EFAFn\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\u5BF9\u8C61</li></ul><h5 id="_3-2-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-2-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 3.2.3 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">newInstance</span> <span class="token punctuation">(</span><span class="token parameter">Fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u7684object\u5B9E\u4F8B\u5BF9\u8C61obj, \u4F5C\u4E3AFn\u7684\u5B9E\u4F8B\u5BF9\u8C61</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u5C06Fn\u7684prototype\u5C5E\u6027\u503C\u8D4B\u503C\u7ED9obj\u7684__proto__\u5C5E\u6027\u503C</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype
  <span class="token comment">// \u8C03\u7528Fn, \u6307\u5B9Athis\u4E3Aobj, \u53C2\u6570\u4E3Aargs\u5217\u8868</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">Fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679CFn\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B, \u90A3\u8FD4\u56DE\u7684\u5C31\u4E0D\u518D\u662Fobj, \u800C\u662FFn\u8FD4\u56DE\u7684\u5BF9\u8C61</span>
  <span class="token comment">// \u5426\u5219\u8FD4\u56DEobj</span>
  <span class="token keyword">return</span> result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_3-3-\u81EA\u5B9A\u4E49instanceof" tabindex="-1"><a class="header-anchor" href="#_3-3-\u81EA\u5B9A\u4E49instanceof" aria-hidden="true">#</a> 3.3 \u81EA\u5B9A\u4E49instanceof</h4><h5 id="_3-3-1-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_3-3-1-api-\u76F8\u5173" aria-hidden="true">#</a> 3.3.1 API \u76F8\u5173</h5><ul><li>\u8BED\u6CD5: myInstanceOf(obj, Type)</li><li>\u529F\u80FD: \u5224\u65ADobj\u662F\u5426\u662FType\u7C7B\u578B\u7684\u5B9E\u4F8B</li><li>\u5B9E\u73B0: Type\u7684\u539F\u578B\u5BF9\u8C61\u662F\u5426\u662Fobj\u7684\u539F\u578B\u94FE\u4E0A\u7684\u67D0\u4E2A\u5BF9\u8C61, \u5982\u679C\u662F\u8FD4\u56DEtrue, \u5426\u5219\u8FD4\u56DEfalse</li></ul><h5 id="_3-3-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-3-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 3.3.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">myInstanceOf</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> Type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F97\u5230\u539F\u578B\u5BF9\u8C61</span>
  <span class="token keyword">let</span> protoObj <span class="token operator">=</span> obj<span class="token punctuation">.</span>__proto__

  <span class="token comment">// \u53EA\u8981\u539F\u578B\u5BF9\u8C61\u5B58\u5728</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>protoObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u539F\u578B\u5BF9\u8C61\u662FType\u7684\u539F\u578B\u5BF9\u8C61, \u8FD4\u56DEtrue</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>protoObj <span class="token operator">===</span> <span class="token class-name">Type</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6307\u5B9A\u539F\u578B\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61</span>
    protoObj <span class="token operator">=</span> protoObj<span class="token punctuation">.</span>__proto__
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_3-4-\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-4-\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61" aria-hidden="true">#</a> 3.4 \u5408\u5E76\u591A\u4E2A\u5BF9\u8C61</h4><h5 id="_3-4-1-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_3-4-1-api-\u76F8\u5173" aria-hidden="true">#</a> 3.4.1 API \u76F8\u5173</h5><ul><li>\u8BED\u6CD5: object mergeObject(...objs)</li><li>\u529F\u80FD: \u5408\u5E76\u591A\u4E2A\u5BF9\u8C61, \u8FD4\u56DE\u4E00\u4E2A\u5408\u5E76\u540E\u5BF9\u8C61(\u4E0D\u6539\u53D8\u539F\u5BF9\u8C61)</li><li>\u4F8B\u5B50: <ul><li>{ a: [{ x: 2 }, { y: 4 }], b: 1}</li><li>{ a: { z: 3}, b: [2, 3], c: &#39;foo&#39;}</li><li>\u5408\u5E76\u540E: { a: [ { x: 2 }, { y: 4 }, { z: 3 } ], b: [ 1, 2, 3 ], c: &#39;foo&#39; }</li></ul></li></ul><h5 id="_3-4-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-4-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 3.4.2 \u7F16\u7801\u5B9E\u73B0</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mergeObject</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>objs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u904D\u5386objs</span>
  objs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679Cresult\u8FD8\u6CA1\u6709key\u503C\u5C5E\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5426\u5219 \u5408\u5E76\u5C5E\u6027</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u53EF\u4EE5\u4F7F\u7528reduce\u6765\u4EE3\u66FFforEach\u624B\u52A8\u6DFB\u52A0</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_3-5-\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-5-\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" aria-hidden="true">#</a> 3.5 \u5BF9\u8C61/\u6570\u7EC4\u62F7\u8D1D</h4><h5 id="_3-5-1-\u533A\u522B\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-5-1-\u533A\u522B\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 3.5.1 \u533A\u522B\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D</h5><ul><li>\u7EAF\u8BED\u8A00\u8868\u8FBE: <ul><li>\u6D45\u62F7\u8D1D: \u53EA\u662F\u590D\u5236\u4E86\u5BF9\u8C61\u5C5E\u6027\u6216\u6570\u7EC4\u5143\u7D20\u672C\u8EAB(\u53EA\u662F\u5F15\u7528\u5730\u5740\u503C)</li><li>\u6DF1\u62F7\u8D1D: \u4E0D\u4EC5\u590D\u5236\u4E86\u5BF9\u8C61\u5C5E\u6027\u6216\u6570\u7EC4\u5143\u7D20\u672C\u8EAB, \u8FD8\u590D\u5236\u4E86\u6307\u5411\u7684\u5BF9\u8C61(\u4F7F\u7528\u9012\u5F52)</li></ul></li><li>\u4E3E\u4F8B\u8BF4\u660E: \u62F7\u8D1Dpersons\u6570\u7EC4(\u591A\u4E2A\u4EBA\u5BF9\u8C61\u7684\u6570\u7EC4) <ul><li>\u6D45\u62F7\u8D1D: \u53EA\u662F\u62F7\u8D1D\u4E86\u6BCF\u4E2Aperson\u5BF9\u8C61\u7684\u5F15\u7528\u5730\u5740\u503C, \u6BCF\u4E2Aperson\u5BF9\u8C61\u53EA\u6709\u4E00\u4EFD</li><li>\u6DF1\u62F7\u8D1D: \u6BCF\u4E2Aperson\u5BF9\u8C61\u4E5F\u88AB\u590D\u5236\u4E86\u4E00\u4EFD\u65B0\u7684</li></ul></li></ul><h5 id="_3-5-2-\u5B9E\u73B0\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-5-2-\u5B9E\u73B0\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> 3.5.2 \u5B9E\u73B0\u6D45\u62F7\u8D1D</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u5B9E\u73B0\u6D45\u62F7\u8D1D
  \u65B9\u6CD5\u4E00: \u5229\u7528ES6\u8BED\u6CD5
  \u65B9\u6CD5\u4E8C: \u5229\u7528ES5\u8BED\u6CD5: for...in
*/</span>
<span class="token comment">/* \u65B9\u6CD5\u4E00: \u5229\u7528ES6\u8BED\u6CD5*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">clone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662F\u5BF9\u8C61(\u4E0D\u662F\u51FD\u6570, \u4E5F\u5C31\u662F\u53EF\u80FD\u662Fobject\u5BF9\u8C61\u6216\u8005\u6570\u7EC4)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// return target.slice()</span>
      <span class="token comment">// return target.filter(() =&gt; true)</span>
      <span class="token comment">// return target.map(item =&gt; item)</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>target<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// return Object.assign({}, target)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>target<span class="token punctuation">}</span>
    <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span>
  <span class="token comment">// \u57FA\u672C\u7C7B\u578B\u6216\u8005\u51FD\u6570, \u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token comment">/* \u65B9\u6CD5\u4E8C: \u5229\u7528ES5\u8BED\u6CD5: for...in */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">clone2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h5 id="_3-5-3-\u5B9E\u73B0\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-5-3-\u5B9E\u73B0\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 3.5.3 \u5B9E\u73B0\u6DF1\u62F7\u8D1D</h5><ul><li>\u5B9E\u73B0\u4E00: \u5927\u4F17\u4E5E\u4E10\u7248 <ul><li>\u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931</li><li>\u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519</li></ul></li><li>\u5B9E\u73B0\u4E8C: \u9762\u8BD5\u57FA\u7840\u7248 <ul><li>\u89E3\u51B3\u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u8FD8\u6CA1\u4E22\u5931</li></ul></li><li>\u5B9E\u73B0\u4E09: \u9762\u8BD5\u52A0\u5F3A\u7248\u672C <ul><li>\u89E3\u51B3\u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u6B63\u5E38</li></ul></li><li>\u5B9E\u73B0\u56DB: \u9762\u8BD5\u52A0\u5F3A\u7248\u672C2(\u4F18\u5316\u904D\u5386\u6027\u80FD) <ul><li>\u6570\u7EC4: while | for | forEach() \u4F18\u4E8E for-in | keys()&amp;forEach()</li><li>\u5BF9\u8C61: for-in \u4E0E keys()&amp;forEach() \u5DEE\u4E0D\u591A</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
1). \u5927\u4F17\u4E5E\u4E10\u7248
    \u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931
    \u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deepClone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
2). \u9762\u8BD5\u57FA\u7840\u7248\u672C
    \u89E3\u51B3\u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u8FD8\u6CA1\u4E22\u5931
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deepClone2</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token comment">/* 
3). \u9762\u8BD5\u52A0\u5F3A\u7248\u672C
    \u89E3\u51B3\u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u6B63\u5E38
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deepClone3</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u7F13\u5B58\u5BB9\u5668\u4E2D\u8BFB\u53D6\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728, \u8FD4\u56DE\u524D\u9762\u7F13\u5B58\u7684\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61(\u53EF\u80FD\u662F{}\u6216\u8005[])  </span>
    cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u7F13\u5B58\u5230map\u4E2D</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u8C03\u7528, \u6DF1\u5EA6\u514B\u9686\u5BF9\u8C61, \u4E14\u4F20\u5165\u7F13\u5B58\u5BB9\u5668map</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token comment">/* 
4). \u9762\u8BD5\u52A0\u5F3A\u7248\u672C2(\u4F18\u5316\u904D\u5386\u6027\u80FD)
    \u6570\u7EC4: while | for | forEach() \u4F18\u4E8E for-in | keys()&amp;forEach() 
    \u5BF9\u8C61: for-in \u4E0E keys()&amp;forEach() \u5DEE\u4E0D\u591A
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deepClone4</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u7F13\u5B58\u5BB9\u5668\u4E2D\u8BFB\u53D6\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728, \u8FD4\u56DE\u524D\u9762\u7F13\u5B58\u7684\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61(\u53EF\u80FD\u662F{}\u6216\u8005[])  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token comment">// \u7F13\u5B58\u5230map\u4E2D</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      target<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token comment">// \u7F13\u5B58\u5230map\u4E2D</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br></div></div><h3 id="_04-\u5B57\u7B26\u4E32\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_04-\u5B57\u7B26\u4E32\u76F8\u5173" aria-hidden="true">#</a> 04. \u5B57\u7B26\u4E32\u76F8\u5173</h3><h4 id="_4-1-api\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_4-1-api\u76F8\u5173" aria-hidden="true">#</a> 4.1 API\u76F8\u5173</h4><ul><li>\u5B57\u7B26\u4E32\u5012\u5E8F <ul><li>\u8BED\u6CD5: reverseString(str)</li><li>\u529F\u80FD: \u751F\u6210\u4E00\u4E2A\u5012\u5E8F\u7684\u5B57\u7B26\u4E32</li></ul></li><li>\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587 <ul><li>\u8BED\u6CD5: palindrome(str)</li><li>\u529F\u80FD: \u5982\u679C\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u662F\u56DE\u6587\uFF0C\u5219\u8FD4\u56DE true \uFF1B\u5426\u5219\u8FD4\u56DE false</li></ul></li><li>\u622A\u53D6\u5B57\u7B26\u4E32 <ul><li>\u8BED\u6CD5: truncate(str, num)</li><li>\u529F\u80FD: \u5982\u679C\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u8D85\u8FC7\u4E86num, \u622A\u53D6\u524D\u9762num\u957F\u5EA6\u90E8\u5206, \u5E76\u4EE5...\u7ED3\u675F</li></ul></li></ul><h4 id="_4-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 4.2 \u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
1. \u5B57\u7B26\u4E32\u5012\u5E8F: reverseString(str)  \u751F\u6210\u4E00\u4E2A\u5012\u5E8F\u7684\u5B57\u7B26\u4E32
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// return str.split(&#39;&#39;).reverse().join(&#39;&#39;)</span>
    <span class="token comment">// return [...str].reverse().join(&#39;&#39;)</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
2. \u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587: palindrome(str) \u5982\u679C\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u662F\u56DE\u6587\uFF0C\u5219\u8FD4\u56DE true \uFF1B\u5426\u5219\u8FD4\u56DE false
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">palindrome</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str <span class="token operator">===</span> <span class="token function">reverseString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
3. \u622A\u53D6\u5B57\u7B26\u4E32: truncate(str, num) \u5982\u679C\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u8D85\u8FC7\u4E86num, \u622A\u53D6\u524D\u9762num\u957F\u5EA6\u90E8\u5206, \u5E76\u4EE5...\u7ED3\u675F
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">truncate</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> num <span class="token operator">?</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;...&#39;</span> <span class="token operator">:</span> str
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="_05-\u624B\u5199dom\u4E8B\u4EF6\u76D1\u542C-\u5E26\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#_05-\u624B\u5199dom\u4E8B\u4EF6\u76D1\u542C-\u5E26\u59D4\u6258" aria-hidden="true">#</a> 05. \u624B\u5199DOM\u4E8B\u4EF6\u76D1\u542C(\u5E26\u59D4\u6258)</h3><h4 id="_5-1-\u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#_5-1-\u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258" aria-hidden="true">#</a> 5.1 \u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258</h4><ul><li><p>\u4E8B\u4EF6\u5192\u6CE1\u7684\u6D41\u7A0B</p><ul><li>\u57FA\u4E8EDOM\u6811\u5F62\u7ED3\u6784</li><li>\u4E8B\u4EF6\u5728\u76EE\u6807\u5143\u7D20\u4E0A\u5904\u7406\u540E, \u4F1A\u7531\u5185\u5411\u5916(\u4E0A)\u9010\u5C42\u4F20\u9012</li><li>\u5E94\u7528\u573A\u666F: \u4E8B\u4EF6\u4EE3\u7406/\u59D4\u6258/\u59D4\u6D3E</li></ul></li><li><p>\u4E8B\u4EF6\u59D4\u6258/\u4EE3\u7406</p><ul><li>\u5C06\u591A\u4E2A\u5B50\u5143\u7D20\u7684\u540C\u7C7B\u4E8B\u4EF6\u76D1\u542C\u59D4\u6258\u7ED9(\u7ED1\u5B9A\u5728)\u5171\u540C\u7684\u4E00\u4E2A\u7236\u7EC4\u4EF6\u4E0A</li><li>\u597D\u5904\uFF1A <ul><li>\u51CF\u5C11\u5185\u5B58\u5360\u7528(\u4E8B\u4EF6\u76D1\u542C\u56DE\u8C03\u4ECEn\u53D8\u4E3A</li><li>\u52A8\u6001\u6DFB\u52A0\u7684\u5185\u90E8\u5143\u7D20\u4E5F\u80FD\u54CD\u5E94</li></ul></li></ul></li></ul><h4 id="_5-2-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_5-2-api-\u76F8\u5173" aria-hidden="true">#</a> 5.2 API \u76F8\u5173</h4><ul><li>\u8BED\u6CD5\uFF1AaddEventListener(element, type, fn, selector)</li><li>\u8BF4\u660E\uFF1A\u5982\u679Cselector\u6CA1\u6709\uFF0C\u76F4\u63A5\u7ED9element\u7ED1\u5B9A\u4E8B\u4EF6\uFF0C\u5982\u679Cselector\u6709\uFF0C\u5C06selector\u5BF9\u5E94\u7684\u591A\u4E2A\u5143\u7D20\u7684\u4E8B\u4EF6\u59D4\u6258\u7ED1\u5B9A\u7ED9\u7236\u5143\u7D20element</li></ul><h4 id="_5-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_5-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 5.2 \u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u8BED\u6CD5\uFF1AaddEventListener(element, type, fn, selector)
\u8BF4\u660E\uFF1A\u5982\u679Cselector\u6CA1\u6709\uFF0C\u76F4\u63A5\u7ED9element\u7ED1\u5B9A\u4E8B\u4EF6\uFF0C
  \u5982\u679Cselector\u6709\uFF0C\u5C06selector\u5BF9\u5E94\u7684\u591A\u4E2A\u5143\u7D20\u7684\u4E8B\u4EF6\u59D4\u6258\u7ED1\u5B9A\u7ED9\u7236\u5143\u7D20element
*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> type<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u6307\u5B9Aselector, \u666E\u901A\u7684\u4E8B\u4EF6\u7ED1\u5B9A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5426\u5219\u662F\u4EE3\u59D4\u6258\u7684\u4E8B\u4EF6\u7ED1\u5B9A</span>
    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F97\u5230\u771F\u6B63\u53D1\u751F\u4E8B\u4EF6\u7684\u76EE\u6807\u5143\u7D20</span>
      <span class="token keyword">const</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target
      <span class="token comment">// \u5982\u679C\u4E0E\u9009\u62E9\u5668\u5339\u914D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528\u5904\u7406\u4E8B\u4EF6\u7684\u56DE\u8C03fn, \u5E76\u6307\u5B9Athis\u4E3A\u76EE\u6807\u5143\u7D20, \u53C2\u6570\u4E3Aevent</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_06-\u624B\u5199ajax\u8BF7\u6C42\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_06-\u624B\u5199ajax\u8BF7\u6C42\u51FD\u6570" aria-hidden="true">#</a> 06. \u624B\u5199ajax\u8BF7\u6C42\u51FD\u6570</h3><h4 id="_6-1-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_6-1-api-\u76F8\u5173" aria-hidden="true">#</a> 6.1 API \u76F8\u5173</h4><ul><li>\u8BED\u6CD5\uFF1A <ul><li>axios(options) <ul><li>\u53C2\u6570\u914D\u7F6E\u5BF9\u8C61\uFF1Aurl, method, params\u4E0Edata</li><li>\u8FD4\u56DE\u503C\u4E3A\uFF1Apromise\u5BF9\u8C61</li></ul></li><li>axios.get(url, options)</li><li>axios.post(url, data, options)</li><li>axios.put(url, data, options)</li><li>axios.delete(url, options)</li></ul></li><li>\u529F\u80FD\uFF1A\u4F7F\u7528xhr\u53D1\u9001ajax\u8BF7\u6C42\u7684\u5DE5\u5177\u51FD\u6570\uFF0C\u4E0Eaxios\u5E93\u529F\u80FD\u7C7B\u4F3C</li></ul><h4 id="_6-2-\u5B9E\u73B0\u6574\u4F53\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_6-2-\u5B9E\u73B0\u6574\u4F53\u6D41\u7A0B" aria-hidden="true">#</a> 6.2 \u5B9E\u73B0\u6574\u4F53\u6D41\u7A0B</h4><ol><li>\u51FD\u6570\u7684\u53C2\u6570\u4E3A\u4E00\u4E2A\u914D\u7F6E\u5BF9\u8C61 { url: &#39;&#39;, // \u8BF7\u6C42\u5730\u5740 method: &#39;&#39;, // \u8BF7\u6C42\u65B9\u5F0FGET/POST/PUT/DELETE params: {}, // GET/DELETE\u8BF7\u6C42\u7684query\u53C2\u6570 data: {}, // POST\u6216DELETE\u8BF7\u6C42\u7684\u8BF7\u6C42\u4F53\u53C2\u6570 }</li><li>\u8FD4\u56DE\u503C: \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E3Apromise, \u6210\u529F\u7684\u7ED3\u679C\u4E3Aresponse, \u5931\u8D25\u7684\u7ED3\u679C\u4E3Aerror</li><li>\u80FD\u5904\u7406\u591A\u79CD\u7C7B\u578B\u7684\u8BF7\u6C42: GET/POST/PUT/DELETE</li><li>\u54CD\u5E94json\u6570\u636E\u81EA\u52A8\u89E3\u6790\u4E3Ajs\u7684\u5BF9\u8C61/\u6570\u7EC4</li></ol><h4 id="_6-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_6-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 6.3 \u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u53D1\u9001\u4EFB\u610F\u7C7B\u578B\u8BF7\u6C42\u7684\u51FD\u6570 */</span>
<span class="token keyword">function</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  url<span class="token punctuation">,</span>
  method<span class="token operator">=</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
  params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2Apromise\u5BF9\u8C61</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5904\u7406method(\u8F6C\u5927\u5199)</span>
    method <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token comment">// \u5904\u7406query\u53C2\u6570(\u62FC\u63A5\u5230url\u4E0A)   id=1&amp;xxx=abc</span>
    <span class="token comment">/* { id: 1, xxx: &#39;abc&#39;} */</span>
    <span class="token keyword">let</span> queryString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      queryString <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>queryString<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// id=1&amp;xxx=abc&amp;</span>
      <span class="token comment">// \u53BB\u9664\u6700\u540E\u7684&amp;</span>
      queryString <span class="token operator">=</span> queryString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> queryString<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token comment">// \u63A5\u5230url</span>
      url <span class="token operator">+=</span> <span class="token string">&#39;?&#39;</span> <span class="token operator">+</span> queryString
    <span class="token punctuation">}</span>


    <span class="token comment">// 1. \u6267\u884C\u5F02\u6B65ajax\u8BF7\u6C42</span>
    <span class="token comment">// \u521B\u5EFAxhr\u5BF9\u8C61</span>
    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6253\u5F00\u8FDE\u63A5(\u521D\u59CB\u5316\u8BF7\u6C42, \u6CA1\u6709\u8BF7\u6C42)</span>
    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    
    <span class="token comment">// \u53D1\u9001\u8BF7\u6C42</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token operator">===</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token operator">===</span><span class="token string">&#39;POST&#39;</span> <span class="token operator">||</span> method<span class="token operator">===</span><span class="token string">&#39;PUT&#39;</span> <span class="token operator">||</span> method<span class="token operator">===</span><span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// \u544A\u8BC9\u670D\u52A1\u5668\u8BF7\u6C42\u4F53\u7684\u683C\u5F0F\u662Fjson</span>
      request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json;charset=utf-8&#39;</span><span class="token punctuation">)</span> 
       <span class="token comment">// \u53D1\u9001json\u683C\u5F0F\u8BF7\u6C42\u4F53\u53C2\u6570</span>
      request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7ED1\u5B9A\u72B6\u6001\u6539\u53D8\u7684\u76D1\u542C</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BF7\u6C42\u6CA1\u6709\u5B8C\u6210, \u76F4\u63A5\u7ED3\u675F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState<span class="token operator">!==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u54CD\u5E94\u72B6\u6001\u7801\u5728[200, 300)\u4E4B\u95F4\u4EE3\u8868\u6210\u529F, \u5426\u5219\u5931\u8D25</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>status<span class="token punctuation">,</span> statusText<span class="token punctuation">}</span> <span class="token operator">=</span> request
      <span class="token comment">// 2.1. \u5982\u679C\u8BF7\u6C42\u6210\u529F\u4E86, \u8C03\u7528resolve()</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>status<span class="token operator">&gt;=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> status<span class="token operator">&lt;=</span><span class="token number">299</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u51C6\u5907\u7ED3\u679C\u6570\u636E\u5BF9\u8C61response</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>
          status<span class="token punctuation">,</span>
          statusText
        <span class="token punctuation">}</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 2.2. \u5982\u679C\u8BF7\u6C42\u5931\u8D25\u4E86, \u8C03\u7528reject()</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;request error status is &#39;</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u53D1\u9001\u7279\u5B9A\u8BF7\u6C42\u7684\u9759\u6001\u65B9\u6CD5 */</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">delete</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">post</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">put</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><h3 id="_07-\u624B\u5199\u4E8B\u4EF6\u603B\u7EBF" tabindex="-1"><a class="header-anchor" href="#_07-\u624B\u5199\u4E8B\u4EF6\u603B\u7EBF" aria-hidden="true">#</a> 07. \u624B\u5199\u4E8B\u4EF6\u603B\u7EBF</h3><h4 id="_7-1-api\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_7-1-api\u8BF4\u660E" aria-hidden="true">#</a> 7.1 API\u8BF4\u660E</h4><ol><li>eventBus: \u5305\u542B\u6240\u6709\u529F\u80FD\u7684\u4E8B\u4EF6\u603B\u7EBF\u5BF9\u8C61</li><li>eventBus.on(eventName, listener): \u7ED1\u5B9A\u4E8B\u4EF6\u76D1\u542C</li><li>eventBus.emit(eventName, data): \u5206\u53D1\u4E8B\u4EF6</li><li>eventBus.off(eventName): \u89E3\u7ED1\u6307\u5B9A\u4E8B\u4EF6\u540D\u7684\u4E8B\u4EF6\u76D1\u542C, \u5982\u679C\u6CA1\u6709\u6307\u5B9A\u89E3\u7ED1\u6240\u6709</li></ol><h4 id="_7-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_7-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 7.2 \u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">/* 
{
  add:  [callback1, callback2]
  delete: [callback3]
}
*/</span>
<span class="token keyword">let</span> callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">/* 
\u7ED1\u5B9A\u4E8B\u4EF6\u76D1\u542C
*/</span>
eventBus<span class="token punctuation">.</span><span class="token function-variable function">on</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    callbacksObj<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u5206\u53D1\u4E8B\u4EF6
*/</span>
eventBus<span class="token punctuation">.</span><span class="token function-variable function">emit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks <span class="token operator">&amp;&amp;</span> callbacks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u79FB\u9664\u4E8B\u4EF6\u76D1\u542C
*/</span>
eventBus<span class="token punctuation">.</span><span class="token function-variable function">off</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>eventName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> callbacksObj<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> eventBus
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="_08-\u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03" tabindex="-1"><a class="header-anchor" href="#_08-\u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03" aria-hidden="true">#</a> 08. \u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03</h3><h4 id="_8-1-api\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_8-1-api\u8BF4\u660E" aria-hidden="true">#</a> 8.1 API\u8BF4\u660E</h4><ol><li>PubSub: \u5305\u542B\u6240\u6709\u529F\u80FD\u7684\u8BA2\u9605/\u53D1\u5E03\u6D88\u606F\u7684\u7BA1\u7406\u8005</li><li>PubSub.subscribe(msg, subscriber): \u8BA2\u9605\u6D88\u606F: \u6307\u5B9A\u6D88\u606F\u540D\u548C\u8BA2\u9605\u8005\u56DE\u8C03\u51FD\u6570</li><li>PubSub.publish(msg, data): \u5F02\u6B65\u53D1\u5E03\u6D88\u606F: \u6307\u5B9A\u6D88\u606F\u540D\u548C\u6570\u636E</li><li>PubSub.publishSync(msg, data): \u540C\u6B65\u53D1\u5E03\u6D88\u606F: \u6307\u5B9A\u6D88\u606F\u540D\u548C\u6570\u636E</li><li>PubSub.unsubscribe(flag): \u53D6\u6D88\u8BA2\u9605: \u6839\u636E\u6807\u8BC6\u53D6\u6D88\u67D0\u4E2A\u6216\u67D0\u4E9B\u6D88\u606F\u7684\u8BA2\u9605</li></ol><h4 id="_8-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_8-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 8.2 \u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
\u81EA\u5B9A\u4E49\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03
*/</span>

<span class="token keyword">const</span> PubSub <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">/* 
  {
    add: {
      token1: callback1, 
      token2: callback2
    },
    update: {
      token3: callback3
    }
  }
*/</span>
<span class="token keyword">let</span> callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u4FDD\u5B58\u6240\u6709\u56DE\u8C03\u7684\u5BB9\u5668</span>
<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u7528\u4E8E\u751F\u6210token\u7684\u6807\u8BB0</span>

<span class="token comment">// 1. \u8BA2\u9605\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">subscribe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u786E\u5B9Atoken</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token string">&#39;token_&#39;</span> <span class="token operator">+</span> <span class="token operator">++</span>id
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token operator">:</span> callback
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    callbacks<span class="token punctuation">[</span>token<span class="token punctuation">]</span> <span class="token operator">=</span> callback
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DEtoken</span>
  <span class="token keyword">return</span> token
<span class="token punctuation">}</span>


<span class="token comment">// 2. \u53D1\u5E03\u5F02\u6B65\u7684\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">publish</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">let</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u6709\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// callbacks = Object.assign({}, callbacks)</span>
    <span class="token comment">// \u542F\u52A8\u5B9A\u65F6\u5668, \u5F02\u6B65\u6267\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 3. \u53D1\u5E03\u540C\u6B65\u7684\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">publishSync</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u6709\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ACB\u5373\u540C\u6B65\u6267\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570</span>
    Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
4. \u53D6\u6D88\u6D88\u606F\u8BA2\u9605
  1). \u6CA1\u6709\u4F20\u503C, flag\u4E3Aundefined
  2). \u4F20\u5165token\u5B57\u7B26\u4E32
  3). msgName\u5B57\u7B26\u4E32
*/</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">unsubscribe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679Cflag\u6CA1\u6709\u6307\u5B9A\u6216\u8005\u4E3Anull, \u53D6\u6D88\u6240\u6709</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> flag <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;token_&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// flag\u662Ftoken</span>
      <span class="token comment">// \u627E\u5230flag\u5BF9\u5E94\u7684callbacks</span>
      <span class="token keyword">const</span> callbacks <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacksObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">callbacks</span> <span class="token operator">=&gt;</span> callbacks<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5982\u679C\u5B58\u5728, \u5220\u9664\u5BF9\u5E94\u7684\u5C5E\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> callbacks<span class="token punctuation">[</span>flag<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// flag\u662FmsgName</span>
      <span class="token keyword">delete</span> callbacksObj<span class="token punctuation">[</span>flag<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u5982\u679C\u4F20\u5165\u53C2\u6570, \u5FC5\u987B\u662F\u5B57\u7B26\u4E32\u7C7B\u578B&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> PubSub
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br></div></div><h3 id="_09-\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#_09-\u624B\u5199promise" aria-hidden="true">#</a> 09. \u624B\u5199Promise</h3><h4 id="_9-1-api\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_9-1-api\u76F8\u5173" aria-hidden="true">#</a> 9.1 API\u76F8\u5173</h4><h4 id="_9-2-\u6574\u4F53\u5B9E\u73B0\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_9-2-\u6574\u4F53\u5B9E\u73B0\u6D41\u7A0B" aria-hidden="true">#</a> 9.2 \u6574\u4F53\u5B9E\u73B0\u6D41\u7A0B</h4><ol><li>\u5B9A\u4E49\u6574\u4F53\u7ED3\u6784</li><li>Promise\u6784\u9020\u51FD\u6570\u7684\u5B9E\u73B0</li><li>promise.then()/catch()\u7684\u5B9E\u73B0</li><li>Promise.resolve()/reject()\u7684\u5B9E\u73B0</li><li>Promise.all/race()\u7684\u5B9E\u73B0</li><li>Promise.resolveDelay()/rejectDelay()\u7684\u5B9E\u73B0</li></ol><h4 id="_9-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_9-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 9.3.\u7F16\u7801\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span> <span class="token comment">// \u521D\u59CB\u672A\u786E\u5B9A\u7684\u72B6\u6001</span>
<span class="token keyword">const</span> <span class="token constant">RESOLVED</span> <span class="token operator">=</span> <span class="token string">&#39;resolved&#39;</span> <span class="token comment">// \u6210\u529F\u7684\u72B6\u6001</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span> <span class="token comment">// \u5931\u8D25\u7684\u72B6\u6001</span>

<span class="token comment">/* 
Promise\u6784\u9020\u51FD\u6570
*/</span>
<span class="token keyword">function</span> <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token parameter">excutor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">// Promise\u7684\u5B9E\u4F8B\u5BF9\u8C61</span>
  self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">PENDING</span> <span class="token comment">// \u72B6\u6001\u5C5E\u6027, \u521D\u59CB\u503C\u4E3Apending, \u4EE3\u8868\u521D\u59CB\u672A\u786E\u5B9A\u7684\u72B6\u6001</span>
  self<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u7528\u6765\u5B58\u50A8\u7ED3\u679C\u6570\u636E\u7684\u5C5E\u6027, \u521D\u59CB\u503C\u4E3Aundefined</span>
  self<span class="token punctuation">.</span>callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// {onResolved(){}, onRejected(){}}</span>

  <span class="token comment">/* 
  \u5C06promise\u7684\u72B6\u6001\u6539\u4E3A\u6210\u529F, \u6307\u5B9A\u6210\u529F\u7684value
  */</span>
  <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5F53\u524D\u4E0D\u662Fpending, \u76F4\u63A5\u7ED3\u675F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">RESOLVED</span> <span class="token comment">// \u5C06\u72B6\u6001\u6539\u4E3A\u6210\u529F</span>
    self<span class="token punctuation">.</span>data <span class="token operator">=</span> value <span class="token comment">// \u4FDD\u5B58\u6210\u529F\u7684value</span>

    <span class="token comment">// \u5F02\u6B65\u8C03\u7528\u6240\u6709\u7F13\u5B58\u7684\u5F85\u6267\u884C\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u542F\u52A8\u4E00\u4E2A\u5EF6\u8FDF\u65F6\u95F4\u4E3A0\u7684\u5B9A\u65F6\u5668, \u5728\u5B9A\u65F6\u5668\u7684\u56DE\u8C03\u4E2D\u6267\u884C\u6240\u6709\u6210\u529F\u7684\u56DE\u8C03</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cbsObj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          cbsObj<span class="token punctuation">.</span><span class="token function">onResolved</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 
  \u5C06promise\u7684\u72B6\u6001\u6539\u4E3A\u5931\u8D25, \u6307\u5B9A\u5931\u8D25\u7684reason
  */</span>
  <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5F53\u524D\u4E0D\u662Fpending, \u76F4\u63A5\u7ED3\u675F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span> <span class="token comment">// \u5C06\u72B6\u6001\u6539\u4E3A\u5931\u8D25</span>
    self<span class="token punctuation">.</span>data <span class="token operator">=</span> reason <span class="token comment">// \u4FDD\u5B58reason\u6570\u636E</span>

    <span class="token comment">// \u5F02\u6B65\u8C03\u7528\u6240\u6709\u7F13\u5B58\u7684\u5F85\u6267\u884C\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u542F\u52A8\u4E00\u4E2A\u5EF6\u8FDF\u65F6\u95F4\u4E3A0\u7684\u5B9A\u65F6\u5668, \u5728\u5B9A\u65F6\u5668\u7684\u56DE\u8C03\u4E2D\u6267\u884C\u6240\u6709\u5931\u8D25\u7684\u56DE\u8C03</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cbsObj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          cbsObj<span class="token punctuation">.</span><span class="token function">onRejected</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8C03\u7528excutor\u6765\u542F\u52A8\u5F02\u6B65\u4EFB\u52A1</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">excutor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6267\u884C\u5668\u6267\u884C\u51FA\u9519, \u5F53\u524Dpromise\u53D8\u4E3A\u5931\u8D25</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-----&#39;</span><span class="token punctuation">)</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">/* 
\u7528\u6765\u6307\u5B9A\u6210\u529F/\u5931\u8D25\u56DE\u8C03\u51FD\u6570\u7684\u65B9\u6CD5
    1). \u5982\u679C\u5F53\u524Dpromise\u662Fresolved, \u5F02\u6B65\u6267\u884C\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570onResolved
    2). \u5982\u679C\u5F53\u524Dpromise\u662Frejected, \u5F02\u6B65\u6267\u884C\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570onRejected
    3). \u5982\u679C\u5F53\u524Dpromise\u662Fpending, \u4FDD\u5B58\u56DE\u8C03\u51FD\u6570
\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684promise\u5BF9\u8C61
    \u5B83\u7684\u7ED3\u679C\u72B6\u6001\u7531onResolved\u6216\u8005onRejected\u6267\u884C\u7684\u7ED3\u679C\u51B3\u5B9A
    2.1). \u629B\u51FAerror ==&gt; \u53D8\u4E3Arejected, \u7ED3\u679C\u503C\u4E3Aerror
    2.2). \u8FD4\u56DE\u503C\u4E0D\u662Fpromise   ==&gt; \u53D8\u4E3Aresolved, \u7ED3\u679C\u503C\u4E3A\u8FD4\u56DE\u503C
    2.3). \u8FD4\u56DE\u503C\u662Fpromise    ===&gt; \u7531\u8FD9\u4E2Apromise\u7684\u51B3\u5B9A\u65B0\u7684promise\u7684\u7ED3\u679C(\u6210\u529F/\u5931\u8D25)
*/</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onResolved<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span>

  onResolved <span class="token operator">=</span> <span class="token keyword">typeof</span> onResolved <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onResolved</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value <span class="token comment">// \u5C06value\u5411\u4E0B\u4F20\u9012</span>
  onRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> reason
  <span class="token punctuation">}</span> <span class="token comment">// \u5C06reason\u5411\u4E0B\u4F20\u9012</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u4EC0\u4E48\u65F6\u5019\u6539\u53D8\u5B83\u7684\u72B6\u6001</span>

    <span class="token comment">/* 
    1. \u8C03\u7528\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570
    2. \u6839\u636E\u56DE\u8C03\u6267\u884C\u7ED3\u679C\u6765\u66F4\u65B0\u8FD4\u56DEpromise\u7684\u72B6\u6001
    */</span>
    <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//  2.2). \u8FD4\u56DE\u503C\u4E0D\u662Fpromise   ==&gt; \u53D8\u4E3Aresolved, \u7ED3\u679C\u503C\u4E3A\u8FD4\u56DE\u503C</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 2.3). \u8FD4\u56DE\u503C\u662Fpromise    ===&gt; \u7531\u8FD9\u4E2Apromise\u7684\u51B3\u5B9A\u65B0\u7684promise\u7684\u7ED3\u679C(\u6210\u529F/\u5931\u8D25)</span>
          result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
            <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
          <span class="token comment">// result.then(resolve, reject)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 2.1). \u629B\u51FAerror ==&gt; \u53D8\u4E3Arejected, \u7ED3\u679C\u503C\u4E3Aerror</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">RESOLVED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handle</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handle</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// PENDING</span>
      self<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handle</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handle</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u7528\u6765\u6307\u5B9A\u5931\u8D25\u56DE\u8C03\u51FD\u6570\u7684\u65B9\u6CD5
catch\u662Fthen\u7684\u8BED\u6CD5\u7CD6
*/</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">catch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u7528\u6765\u8FD4\u56DE\u4E00\u4E2A\u6307\u5B9Avlaue\u7684\u6210\u529F\u7684promise
value\u53EF\u80FD\u662F\u4E00\u4E2A\u4E00\u822C\u7684\u503C, \u4E5F\u53EF\u80FD\u662Fpromise\u5BF9\u8C61
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679Cvalue\u662F\u4E00\u4E2Apromise, \u6700\u7EC8\u8FD4\u56DE\u7684promise\u7684\u7ED3\u679C\u7531value\u51B3\u5B9A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// value\u4E0D\u662Fpromise, \u8FD4\u56DE\u7684\u662F\u6210\u529F\u7684promise, \u6210\u529F\u7684\u503C\u5C31\u662Fvalue</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u7528\u6765\u8FD4\u56DE\u4E00\u4E2A\u6307\u5B9Areason\u7684\u5931\u8D25\u7684promise
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u8FD4\u56DE\u4E00\u4E2Apromise, \u53EA\u6709\u5F53\u6570\u7EC4\u4E2D\u6240\u6709promise\u90FD\u6210\u529F\u624D\u6210\u529F, \u5426\u5219\u5931\u8D25
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">let</span> resolvedCount <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u5DF2\u7ECF\u6210\u529F\u7684\u6570\u91CF </span>
    <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>promises<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// \u7528\u6765\u4FDD\u5B58\u6210\u529Fpromise\u7684value\u503C</span>
    <span class="token comment">// \u904D\u5386\u6240\u6709promise, \u53D6\u5176\u5BF9\u5E94\u7684\u7ED3\u679C</span>
    promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
        <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          resolvedCount<span class="token operator">++</span>
          values<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value
          <span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedCount <span class="token operator">===</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u90FD\u6210\u529F\u4E86</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u8FD4\u56DE\u4E00\u4E2Apromise, \u7531\u7B2C\u4E00\u4E2A\u5B8C\u6210promise\u51B3\u5B9A
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u904D\u5386\u6240\u6709promise, \u53D6\u5176\u5BF9\u5E94\u7684\u7ED3\u679C</span>
    promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD4\u56DE\u7684promise\u7531\u7B2C\u4E00\u4E2A\u5B8C\u6210p\u6765\u51B3\u5B9A\u5176\u7ED3\u679C</span>
      p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u8FD4\u56DE\u4E00\u4E2A\u5EF6\u8FDF\u6307\u5B9A\u65F6\u95F4\u624D\u6210\u529F(\u4E5F\u53EF\u80FD\u5931\u8D25)\u7684promise
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">resolveDelay</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679Cvalue\u662F\u4E00\u4E2Apromise, \u6700\u7EC8\u8FD4\u56DE\u7684promise\u7684\u7ED3\u679C\u7531value\u51B3\u5B9A</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// value\u4E0D\u662Fpromise, \u8FD4\u56DE\u7684\u662F\u6210\u529F\u7684promise, \u6210\u529F\u7684\u503C\u5C31\u662Fvalue</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 
\u8FD4\u56DE\u4E00\u4E2A\u5EF6\u8FDF\u6307\u5B9A\u65F6\u95F4\u624D\u5931\u8D25\u7684promise
*/</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">rejectDelay</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Promise
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br></div></div><h2 id="\u81EA\u5B9A\u4E49util" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49util" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49util</h2><details class="custom-container details"><summary>\u5B50\u7EC4\u4EF6</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\r
 * \u90AE\u7BB1\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">s</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>\r
    s\r
  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u624B\u673A\u53F7\u7801\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">s</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isMobile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[0-9]{10}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u7535\u8BDD\u53F7\u7801\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">s</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPhone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([0-9]{3,4}-)?[0-9]{7,8}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * URL\u5730\u5740\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">s</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isURL</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^http[s]?:\\/\\/.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u5B57\u7B26\u4E32\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;String&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u6570\u5B57\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Number&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426boolean\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isBoolean</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u51FD\u6570\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Function&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u4E3Anull\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNull</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Null&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426undefined\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isUndefined</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Undefined&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u5BF9\u8C61\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isObj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Object&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * /\u662F\u5426\u6570\u7EC4\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Array&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u65F6\u95F4\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Date&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u6B63\u5219\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isRegExp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;RegExp&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u9519\u8BEF\u5BF9\u8C61\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426Symbol\u51FD\u6570\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSymbol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Symbol&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426Promise\u5BF9\u8C61\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Promise&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426Set\u5BF9\u8C61\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Set&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token keyword">export</span> <span class="token keyword">const</span> ua <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWeiXin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">microMessenger</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;micromessenger&quot;</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u662F\u79FB\u52A8\u7AEF\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isDeviceMobile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">android|webos|iphone|ipod|balckberry</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u662FQQ\u6D4F\u89C8\u5668\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isQQBrowser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mqqbrowser|qzone|qqbrowser|qbwebviewtype</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u662F\u722C\u866B\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSpider</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">adsbot|googlebot|bingbot|msnbot|yandexbot|baidubot|robot|careerbot|seznambot|bot|baiduspider|jikespider|symantecspider|scannerlwebcrawler|crawler|360spider|sosospider|sogou web sprider|sogou orion spider</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>\r
    ua\r
  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426ios\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIos</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Linux&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//\u5B89\u5353\u624B\u673A</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//\u82F9\u679C\u624B\u673A</span>\r
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPad&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//iPad</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Windows Phone&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//winphone\u624B\u673A</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u662F\u5426\u4E3APC\u7AEF\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> userAgentInfo <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> Agents <span class="token operator">=</span> <span class="token punctuation">[</span>\r
    <span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;SymbianOS&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;Windows Phone&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;iPad&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;iPod&quot;</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> Agents<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgentInfo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>Agents<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
      <span class="token keyword">break</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> flag<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u53BB\u9664html\u6807\u7B7E\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">str</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">removeHtmltag</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^&gt;]+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u83B7\u53D6url\u53C2\u6570\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">name</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getQueryString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|&amp;)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">const</span> search <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
  <span class="token keyword">const</span> r <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u52A8\u6001\u5F15\u5165js\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">src</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">injectScript</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">const</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  s<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">;</span>\r
  s<span class="token punctuation">.</span>async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
  s<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>\r
  <span class="token keyword">const</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  t<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6839\u636Eurl\u5730\u5740\u4E0B\u8F7D\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">url</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">download</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> isChrome <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;chrome&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> isSafari <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;safari&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isChrome <span class="token operator">||</span> isSafari<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">.</span>download <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">var</span> fileName <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      link<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>createEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">var</span> e <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;MouseEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      e<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      link<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    url <span class="token operator">+=</span> <span class="token string">&quot;?download&quot;</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&quot;_self&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * el\u662F\u5426\u5305\u542B\u67D0\u4E2Aclass\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">el</span>\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">className</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hasClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|\\\\s)&quot;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&quot;(\\\\s|$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * el\u6DFB\u52A0\u67D0\u4E2Aclass\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">el</span>\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">className</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">addClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">let</span> newClass <span class="token operator">=</span> el<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newClass<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  el<span class="token punctuation">.</span>className <span class="token operator">=</span> newClass<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * el\u53BB\u9664\u67D0\u4E2Aclass\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">el</span>\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">className</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">removeClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|\\\\s)&quot;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&quot;(\\\\s|$)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;g&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  el<span class="token punctuation">.</span>className <span class="token operator">=</span> el<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">el</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getScrollPosition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\r
  <span class="token literal-property property">x</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>\r
  <span class="token literal-property property">y</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6EDA\u52A8\u5230\u9876\u90E8\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollToTop<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">-</span> c <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * el\u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4\u5185\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">el</span>\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">partiallyVisible</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">elementIsVisibleInViewport</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> partiallyVisible <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right <span class="token punctuation">}</span> <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">const</span> <span class="token punctuation">{</span> innerHeight<span class="token punctuation">,</span> innerWidth <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> partiallyVisible\r
    <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>top <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> top <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span> <span class="token operator">||</span>\r
        <span class="token punctuation">(</span>bottom <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\r
        <span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span><span class="token punctuation">)</span>\r
    <span class="token operator">:</span> top <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;=</span> innerHeight <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;=</span> innerWidth<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6D17\u724C\u7B97\u6CD5\u968F\u673A\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">arr</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">shuffle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r
    random<span class="token punctuation">;</span>\r
  <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>random<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u52AB\u6301\u7C98\u8D34\u677F\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">copyTextToClipboard</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> textArea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  textArea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;transparent&quot;</span><span class="token punctuation">;</span>\r
  textArea<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\r
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textArea<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  textArea<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">try</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> successful <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Oops, unable to copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>textArea<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5224\u65AD\u7C7B\u578B\u96C6\u5408\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">str</span>\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">type</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token comment">//\u624B\u673A\u53F7\u7801</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[3|4|5|6|7|8|9][0-9]{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;tel&quot;</span><span class="token operator">:</span> <span class="token comment">//\u5EA7\u673A</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;card&quot;</span><span class="token operator">:</span> <span class="token comment">//\u8EAB\u4EFD\u8BC1</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;pwd&quot;</span><span class="token operator">:</span> <span class="token comment">//\u5BC6\u7801\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u957F\u5EA6\u57286~18\u4E4B\u95F4\uFF0C\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u4E0B\u5212\u7EBF</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]\\w{5,17}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;postal&quot;</span><span class="token operator">:</span> <span class="token comment">//\u90AE\u653F\u7F16\u7801</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[1-9]\\d{5}(?!\\d)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;QQ&quot;</span><span class="token operator">:</span> <span class="token comment">//QQ\u53F7</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;email&quot;</span><span class="token operator">:</span> <span class="token comment">//\u90AE\u7BB1</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;money&quot;</span><span class="token operator">:</span> <span class="token comment">//\u91D1\u989D(\u5C0F\u6570\u70B92\u4F4D)</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*(?:\\.\\d{0,2})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;URL&quot;</span><span class="token operator">:</span> <span class="token comment">//\u7F51\u5740</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>\r
        str\r
      <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;IP&quot;</span><span class="token operator">:</span> <span class="token comment">//IP</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>\r
        str\r
      <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;date&quot;</span><span class="token operator">:</span> <span class="token comment">//\u65E5\u671F\u65F6\u95F4</span>\r
      <span class="token keyword">return</span> <span class="token punctuation">(</span>\r
        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>\r
          str\r
        <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})\\-(\\d{2})\\-(\\d{2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>\r
      <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;number&quot;</span><span class="token operator">:</span> <span class="token comment">//\u6570\u5B57</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;english&quot;</span><span class="token operator">:</span> <span class="token comment">//\u82F1\u6587</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;chinese&quot;</span><span class="token operator">:</span> <span class="token comment">//\u4E2D\u6587</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\\\u4E00-\\\\u9FA5]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;lower&quot;</span><span class="token operator">:</span> <span class="token comment">//\u5C0F\u5199</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;upper&quot;</span><span class="token operator">:</span> <span class="token comment">//\u5927\u5199</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token string">&quot;HTML&quot;</span><span class="token operator">:</span> <span class="token comment">//HTML\u6807\u8BB0</span>\r
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">default</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u4E25\u683C\u7684\u8EAB\u4EFD\u8BC1\u6821\u9A8C\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">sId</span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isCardID</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u8F93\u5165\u7684\u8EAB\u4EFD\u8BC1\u957F\u5EA6\u6216\u683C\u5F0F\u9519\u8BEF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token comment">//\u8EAB\u4EFD\u8BC1\u57CE\u5E02</span>\r
  <span class="token keyword">var</span> aCity <span class="token operator">=</span> <span class="token punctuation">{</span>\r
    <span class="token number">11</span><span class="token operator">:</span> <span class="token string">&quot;\u5317\u4EAC&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">12</span><span class="token operator">:</span> <span class="token string">&quot;\u5929\u6D25&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">13</span><span class="token operator">:</span> <span class="token string">&quot;\u6CB3\u5317&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">14</span><span class="token operator">:</span> <span class="token string">&quot;\u5C71\u897F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">15</span><span class="token operator">:</span> <span class="token string">&quot;\u5185\u8499\u53E4&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">21</span><span class="token operator">:</span> <span class="token string">&quot;\u8FBD\u5B81&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">22</span><span class="token operator">:</span> <span class="token string">&quot;\u5409\u6797&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">23</span><span class="token operator">:</span> <span class="token string">&quot;\u9ED1\u9F99\u6C5F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">31</span><span class="token operator">:</span> <span class="token string">&quot;\u4E0A\u6D77&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">32</span><span class="token operator">:</span> <span class="token string">&quot;\u6C5F\u82CF&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">33</span><span class="token operator">:</span> <span class="token string">&quot;\u6D59\u6C5F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">34</span><span class="token operator">:</span> <span class="token string">&quot;\u5B89\u5FBD&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">35</span><span class="token operator">:</span> <span class="token string">&quot;\u798F\u5EFA&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">36</span><span class="token operator">:</span> <span class="token string">&quot;\u6C5F\u897F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">37</span><span class="token operator">:</span> <span class="token string">&quot;\u5C71\u4E1C&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">41</span><span class="token operator">:</span> <span class="token string">&quot;\u6CB3\u5357&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">42</span><span class="token operator">:</span> <span class="token string">&quot;\u6E56\u5317&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">43</span><span class="token operator">:</span> <span class="token string">&quot;\u6E56\u5357&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">44</span><span class="token operator">:</span> <span class="token string">&quot;\u5E7F\u4E1C&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">45</span><span class="token operator">:</span> <span class="token string">&quot;\u5E7F\u897F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">46</span><span class="token operator">:</span> <span class="token string">&quot;\u6D77\u5357&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">50</span><span class="token operator">:</span> <span class="token string">&quot;\u91CD\u5E86&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">51</span><span class="token operator">:</span> <span class="token string">&quot;\u56DB\u5DDD&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">52</span><span class="token operator">:</span> <span class="token string">&quot;\u8D35\u5DDE&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">53</span><span class="token operator">:</span> <span class="token string">&quot;\u4E91\u5357&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">54</span><span class="token operator">:</span> <span class="token string">&quot;\u897F\u85CF&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">61</span><span class="token operator">:</span> <span class="token string">&quot;\u9655\u897F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">62</span><span class="token operator">:</span> <span class="token string">&quot;\u7518\u8083&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">63</span><span class="token operator">:</span> <span class="token string">&quot;\u9752\u6D77&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">64</span><span class="token operator">:</span> <span class="token string">&quot;\u5B81\u590F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">65</span><span class="token operator">:</span> <span class="token string">&quot;\u65B0\u7586&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">71</span><span class="token operator">:</span> <span class="token string">&quot;\u53F0\u6E7E&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">81</span><span class="token operator">:</span> <span class="token string">&quot;\u9999\u6E2F&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">82</span><span class="token operator">:</span> <span class="token string">&quot;\u6FB3\u95E8&quot;</span><span class="token punctuation">,</span>\r
    <span class="token number">91</span><span class="token operator">:</span> <span class="token string">&quot;\u56FD\u5916&quot;</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>aCity<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u7684\u8EAB\u4EFD\u8BC1\u5730\u533A\u975E\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token comment">// \u51FA\u751F\u65E5\u671F\u9A8C\u8BC1</span>\r
  <span class="token keyword">var</span> sBirthday <span class="token operator">=</span> <span class="token punctuation">(</span>\r
      sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span>\r
      <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span>\r
      <span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>\r
      <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span>\r
      <span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
    d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>sBirthday<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>\r
    sBirthday <span class="token operator">!=</span>\r
    d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8EAB\u4EFD\u8BC1\u4E0A\u7684\u51FA\u751F\u65E5\u671F\u975E\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token comment">// \u8EAB\u4EFD\u8BC1\u53F7\u7801\u6821\u9A8C</span>\r
  <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\r
    weights <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r
    codes <span class="token operator">=</span> <span class="token string">&quot;10X98765432&quot;</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sId<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    sum <span class="token operator">+=</span> sId<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">var</span> last <span class="token operator">=</span> codes<span class="token punctuation">[</span>sum <span class="token operator">%</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u8BA1\u7B97\u51FA\u6765\u7684\u6700\u540E\u4E00\u4F4D\u8EAB\u4EFD\u8BC1\u53F7\u7801</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sId<span class="token punctuation">[</span>sId<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u8F93\u5165\u7684\u8EAB\u4EFD\u8BC1\u53F7\u975E\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/********************************************* \u6570\u5B57\u8F6C\u6362 ******************************/</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u968F\u673A\u6570\u8303\u56F4\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">numberToChinese</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> <span class="token constant">AA</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>\r
    <span class="token string">&quot;\u96F6&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E8C&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E09&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u56DB&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E94&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u516D&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E03&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u516B&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u4E5D&quot;</span><span class="token punctuation">,</span>\r
    <span class="token string">&quot;\u5341&quot;</span>\r
  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> <span class="token constant">BB</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u767E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u842C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5104&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u70B9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^0*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
    k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\r
    re <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>\r
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;0{4}//d{&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;}$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r
          re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>\r
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>\r
        <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
        k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>\r
      re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token constant">BB</span><span class="token punctuation">[</span>k <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>\r
    k<span class="token operator">++</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">// \u52A0\u4E0A\u5C0F\u6570\u90E8\u5206(\u5982\u679C\u6709\u5C0F\u6570\u90E8\u5206)</span>\r
    re <span class="token operator">+=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> re <span class="token operator">+=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re <span class="token operator">==</span> <span class="token string">&quot;\u4E00\u5341&quot;</span><span class="token punctuation">)</span> re <span class="token operator">=</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\u4E00</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> re<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> re<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">changeToChinese</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">Num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token comment">//\u5224\u65AD\u5982\u679C\u4F20\u9012\u8FDB\u6765\u7684\u4E0D\u662F\u5B57\u7B26\u7684\u8BDD\u8F6C\u6362\u4E3A\u5B57\u7B26</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Num <span class="token operator">==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    Num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u66FF\u6362tomoney()\u4E2D\u7684\u201C,\u201D</span>\r
  Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> </span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u66FF\u6362tomoney()\u4E2D\u7684\u7A7A\u683C</span>\r
  Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\uFFE5</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u66FF\u6362\u6389\u53EF\u80FD\u51FA\u73B0\u7684\uFFE5\u5B57\u7B26</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//\u9A8C\u8BC1\u8F93\u5165\u7684\u5B57\u7B26\u662F\u5426\u4E3A\u6570\u5B57</span>\r
    <span class="token comment">//alert(&quot;\u8BF7\u68C0\u67E5\u5C0F\u5199\u91D1\u989D\u662F\u5426\u6B63\u786E&quot;);</span>\r
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token comment">//\u5B57\u7B26\u5904\u7406\u5B8C\u6BD5\u540E\u5F00\u59CB\u8F6C\u6362\uFF0C\u91C7\u7528\u524D\u540E\u4E24\u90E8\u5206\u5206\u522B\u8F6C\u6362</span>\r
  <span class="token keyword">var</span> part <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> newchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
  <span class="token comment">//\u5C0F\u6570\u70B9\u524D\u8FDB\u884C\u8F6C\u5316</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
      <span class="token comment">//\u82E5\u6570\u91CF\u8D85\u8FC7\u62FE\u4EBF\u5355\u4F4D\uFF0C\u63D0\u793A</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">var</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
    <span class="token keyword">var</span> perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;0&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u96F6&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;1&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u58F9&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;2&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8D30&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;3&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u53C1&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;4&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8086&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;5&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u4F0D&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;6&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u9646&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;7&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u67D2&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;8&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u634C&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token string">&quot;9&quot;</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u7396&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4F70&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4E07&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4F70&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>\r
        tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>\r
        <span class="token keyword">break</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">var</span> newchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> newchar<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token comment">//\u5C0F\u6570\u70B9\u4E4B\u540E\u8FDB\u884C\u8F6C\u5316</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Num<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token comment">// alert(&quot;\u5C0F\u6570\u70B9\u4E4B\u540E\u53EA\u80FD\u4FDD\u7559\u4E24\u4F4D,\u7CFB\u7EDF\u5C06\u81EA\u52A8\u622A\u65AD&quot;);</span>\r
      part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
      perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;0&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u96F6&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;1&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u58F9&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;2&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8D30&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;3&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u53C1&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;4&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8086&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;5&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u4F0D&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;6&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u9646&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;7&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u67D2&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;8&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u634C&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
        <span class="token keyword">case</span> <span class="token string">&quot;9&quot;</span><span class="token operator">:</span>\r
          tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u7396&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
          <span class="token keyword">break</span><span class="token punctuation">;</span>\r
      <span class="token punctuation">}</span>\r
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u89D2&quot;</span><span class="token punctuation">;</span>\r
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u5206&quot;</span><span class="token punctuation">;</span>\r
      newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token comment">//\u66FF\u6362\u6240\u6709\u65E0\u7528\u6C49\u5B57</span>\r
  <span class="token keyword">while</span> <span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u96F6&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u96F6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u96F6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u4EBF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBF\u4E07&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u4E07&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E07&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u5143&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u89D2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u5206&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>newchar<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> <span class="token string">&quot;\u6574&quot;</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> newchar<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/********************************************* \u5173\u4E8E\u6570\u7EC4 ******************************/</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">contains</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>arr<span class="token punctuation">}</span></span> <span class="token parameter">\u6570\u7EC4</span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>fn<span class="token punctuation">}</span></span> <span class="token parameter">\u56DE\u8C03\u51FD\u6570</span>\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">each</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  fn <span class="token operator">=</span> fn <span class="token operator">||</span> Function<span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>arr<span class="token punctuation">}</span></span> <span class="token parameter">\u6570\u7EC4</span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>fn<span class="token punctuation">}</span></span> <span class="token parameter">\u56DE\u8C03\u51FD\u6570</span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>thisObj<span class="token punctuation">}</span></span> <span class="token parameter">this\u6307\u5411</span>\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> thisObj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> scope <span class="token operator">=</span> thisObj <span class="token operator">||</span> window<span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> a<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>arr<span class="token punctuation">}</span></span> <span class="token parameter">\u6570\u7EC4</span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>type<span class="token punctuation">}</span></span> <span class="token parameter">1\uFF1A\u4ECE\u5C0F\u5230\u5927</span>   2\uFF1A\u4ECE\u5927\u5230\u5C0F   3\uFF1A\u968F\u673A\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>\r
        <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>\r
        <span class="token keyword">return</span> b <span class="token operator">-</span> a<span class="token punctuation">;</span>\r
      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>\r
        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\r
      <span class="token keyword">default</span><span class="token operator">:</span>\r
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u53BB\u91CD\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;from&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r
      r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
        n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
        r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token punctuation">}</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">return</span> r<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">union</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> newArr <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">intersect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r
  a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> _this<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> o<span class="token punctuation">)</span> <span class="token operator">?</span> o <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> ele</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4\u7684\u65B9\u6CD5\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ary</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    arr <span class="token operator">=</span> ary<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6700\u5927\u503C\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">max</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6700\u5C0F\u503C\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u6C42\u548C\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> pre <span class="token operator">+</span> cur<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5E73\u5747\u503C\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">average</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/********************************************* String \u5B57\u7B26\u4E32\u64CD\u4F5C ******************************/</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u53BB\u9664\u7A7A\u683C\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>str<span class="token punctuation">}</span></span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>type<span class="token punctuation">}</span></span>\r
 * type:  1-\u6240\u6709\u7A7A\u683C  2-\u524D\u540E\u7A7A\u683C  3-\u524D\u7A7A\u683C 4-\u540E\u7A7A\u683C\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">trim</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>\r
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">default</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>str<span class="token punctuation">}</span></span>\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>type<span class="token punctuation">}</span></span>\r
 *       type:  1:\u9996\u5B57\u6BCD\u5927\u5199  2\uFF1A\u9996\u5B57\u6BCD\u5C0F\u5199  3\uFF1A\u5927\u5C0F\u5199\u8F6C\u6362  4\uFF1A\u5168\u90E8\u5927\u5199  5\uFF1A\u5168\u90E8\u5C0F\u5199\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">changeCase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">4</span><span class="token punctuation">;</span>\r
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
        <span class="token keyword">return</span> <span class="token punctuation">(</span>\r
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
        <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
        <span class="token keyword">return</span> <span class="token punctuation">(</span>\r
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
        <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str\r
        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\r
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
          <span class="token punctuation">}</span>\r
        <span class="token punctuation">}</span><span class="token punctuation">)</span>\r
        <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">default</span><span class="token operator">:</span>\r
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token comment">/*\r
 *  \u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkPwd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> Lv <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> Lv<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\.|-|_]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> Lv<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u51FD\u6570\u8282\u6D41\u5668\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">fn</span> \u9700\u8981\u6267\u884C\u6027\u7684\u51FD\u6570\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">time</span> \u65F6\u95F4\u6233\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">interval</span> \u95F4\u9694\u65F6\u95F4\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">debouncer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time<span class="token punctuation">,</span> interval <span class="token operator">=</span> <span class="token number">200</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">-</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>debounceTimestamp <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> interval<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    fn <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    window<span class="token punctuation">.</span>debounceTimestamp <span class="token operator">=</span> time<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">soure</span> \u6E90\u5B57\u7B26\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">index</span> \u63D2\u5165\u5B57\u7B26\u7684\u4F4D\u7F6E\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">newStr</span> \u9700\u8981\u63D2\u5165\u7684\u5B57\u7B26\r
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> \u8FD4\u56DE\u65B0\u751F\u6210\u7684\u5B57\u7B26\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">insertStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">soure<span class="token punctuation">,</span> index<span class="token punctuation">,</span> newStr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> str <span class="token operator">=</span> soure<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">+</span> newStr <span class="token operator">+</span> soure<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> str<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span>  <span class="token parameter">a</span> \u7B2C\u4E00\u4E2A\u5BF9\u8C61\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span>  <span class="token parameter">b</span> \u7B2C\u4E00\u4E2A\u5BF9\u8C61\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span>   \u76F8\u540C\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isObjectEqual</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> aProps <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> bProps <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>aProps<span class="token punctuation">.</span>length <span class="token operator">!==</span> bProps<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> aProps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> propName <span class="token operator">=</span> aProps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\r
\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>propName<span class="token punctuation">]</span> <span class="token operator">!==</span> b<span class="token punctuation">[</span>propName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * 16\u8FDB\u5236\u989C\u8272\u8F6CRGB\\RGBA\u5B57\u7B26\u4E32\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">val</span> 16\u8FDB\u5236\u989C\u8272\u503C\r
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">opa</span> \u4E0D\u900F\u660E\u5EA6\uFF0C\u53D6\u503C0~1\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>     \u8F6C\u6362\u540E\u7684RGB\u6216RGBA\u989C\u8272\u503C\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">colorToRGB</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> opa</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(#?)[a-fA-F0-9]{6}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">//16\u8FDB\u5236\u989C\u8272\u503C\u6821\u9A8C\u89C4\u5219</span>\r
  <span class="token keyword">var</span> isOpa <span class="token operator">=</span> <span class="token keyword">typeof</span> opa <span class="token operator">==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">;</span> <span class="token comment">//\u5224\u65AD\u662F\u5426\u6709\u8BBE\u7F6E\u4E0D\u900F\u660E\u5EA6</span>\r
\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token comment">//\u5982\u679C\u503C\u4E0D\u7B26\u5408\u89C4\u5219\u8FD4\u56DE\u7A7A\u5B57\u7B26</span>\r
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token keyword">var</span> v <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5982\u679C\u6709#\u53F7\u5148\u53BB\u9664#\u53F7</span>\r
  <span class="token keyword">var</span> rgbArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">var</span> rgbStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\r
\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">var</span> item <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    rgbArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
\r
  rgbStr <span class="token operator">=</span> rgbArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  rgbStr <span class="token operator">=</span>\r
    <span class="token string">&quot;rgb&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>isOpa <span class="token operator">?</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> rgbStr <span class="token operator">+</span> <span class="token punctuation">(</span>isOpa <span class="token operator">?</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> opa <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> rgbStr<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u8FFD\u52A0url\u53C2\u6570\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">url</span> url\u53C2\u6570\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token operator">|</span>object<span class="token punctuation">}</span></span> <span class="token parameter">key</span> \u540D\u5B57\u6216\u8005\u5BF9\u8C61\r
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">value</span> \u503C\r
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> \u8FD4\u56DE\u65B0\u7684url\r
 * <span class="token keyword">@example</span>\r
 <span class="token example">* <span class="token code language-javascript"><span class="token function">appendQuery</span><span class="token punctuation">(</span><span class="token string">&#39;lechebang.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\r
 * <span class="token code language-javascript"><span class="token function">appendQuery</span><span class="token punctuation">(</span><span class="token string">&#39;lechebang.com?key=value&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">cityId</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">cityName</span><span class="token operator">:</span> <span class="token string">&#39;\u5317\u4EAC&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">appendQuery</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> options <span class="token operator">=</span> key<span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\r
    options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  options <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    url <span class="token operator">+=</span> <span class="token string">&quot;&amp;&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    url <span class="token operator">+=</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> url<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5224\u65ADa\u6570\u7EC4\u662F\u5426\u5305\u542Bb\u6570\u7EC4\u4E2D\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getArrRepeat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">return</span> arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u5C06\u6570\u7EC4\u5206\u7247\r
 * \u5217\u5B50[1,2,3,4,5,6,7,8] [[1,2,3],[4,5,6],[7,8]]\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrChunk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> space <span class="token operator">=</span> <span class="token number">5</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">+=</span> space<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> space<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token punctuation">}</span>\r
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> result<span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> data<span class="token punctuation">.</span>length<span class="token punctuation">,</span> space <span class="token punctuation">}</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u590D\u5236\u5185\u5BB9\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">copyToClip</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">var</span> aux <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  aux<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>aux<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  aux<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>aux<span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u590D\u5236\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * \u751F\u6210uuid\r
 */</span>\r
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">generateUUID</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">let</span> uuid <span class="token operator">=</span> <span class="token string">&quot;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&quot;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>\r
    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[xy]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>\r
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>d <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">;</span>\r
      d <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>d <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
      <span class="token keyword">return</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">&quot;x&quot;</span> <span class="token operator">?</span> r <span class="token operator">:</span> <span class="token punctuation">(</span>r <span class="token operator">&amp;</span> <span class="token number">0x7</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r
  <span class="token keyword">return</span> uuid<span class="token punctuation">;</span>\r
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br><span class="line-number">480</span><br><span class="line-number">481</span><br><span class="line-number">482</span><br><span class="line-number">483</span><br><span class="line-number">484</span><br><span class="line-number">485</span><br><span class="line-number">486</span><br><span class="line-number">487</span><br><span class="line-number">488</span><br><span class="line-number">489</span><br><span class="line-number">490</span><br><span class="line-number">491</span><br><span class="line-number">492</span><br><span class="line-number">493</span><br><span class="line-number">494</span><br><span class="line-number">495</span><br><span class="line-number">496</span><br><span class="line-number">497</span><br><span class="line-number">498</span><br><span class="line-number">499</span><br><span class="line-number">500</span><br><span class="line-number">501</span><br><span class="line-number">502</span><br><span class="line-number">503</span><br><span class="line-number">504</span><br><span class="line-number">505</span><br><span class="line-number">506</span><br><span class="line-number">507</span><br><span class="line-number">508</span><br><span class="line-number">509</span><br><span class="line-number">510</span><br><span class="line-number">511</span><br><span class="line-number">512</span><br><span class="line-number">513</span><br><span class="line-number">514</span><br><span class="line-number">515</span><br><span class="line-number">516</span><br><span class="line-number">517</span><br><span class="line-number">518</span><br><span class="line-number">519</span><br><span class="line-number">520</span><br><span class="line-number">521</span><br><span class="line-number">522</span><br><span class="line-number">523</span><br><span class="line-number">524</span><br><span class="line-number">525</span><br><span class="line-number">526</span><br><span class="line-number">527</span><br><span class="line-number">528</span><br><span class="line-number">529</span><br><span class="line-number">530</span><br><span class="line-number">531</span><br><span class="line-number">532</span><br><span class="line-number">533</span><br><span class="line-number">534</span><br><span class="line-number">535</span><br><span class="line-number">536</span><br><span class="line-number">537</span><br><span class="line-number">538</span><br><span class="line-number">539</span><br><span class="line-number">540</span><br><span class="line-number">541</span><br><span class="line-number">542</span><br><span class="line-number">543</span><br><span class="line-number">544</span><br><span class="line-number">545</span><br><span class="line-number">546</span><br><span class="line-number">547</span><br><span class="line-number">548</span><br><span class="line-number">549</span><br><span class="line-number">550</span><br><span class="line-number">551</span><br><span class="line-number">552</span><br><span class="line-number">553</span><br><span class="line-number">554</span><br><span class="line-number">555</span><br><span class="line-number">556</span><br><span class="line-number">557</span><br><span class="line-number">558</span><br><span class="line-number">559</span><br><span class="line-number">560</span><br><span class="line-number">561</span><br><span class="line-number">562</span><br><span class="line-number">563</span><br><span class="line-number">564</span><br><span class="line-number">565</span><br><span class="line-number">566</span><br><span class="line-number">567</span><br><span class="line-number">568</span><br><span class="line-number">569</span><br><span class="line-number">570</span><br><span class="line-number">571</span><br><span class="line-number">572</span><br><span class="line-number">573</span><br><span class="line-number">574</span><br><span class="line-number">575</span><br><span class="line-number">576</span><br><span class="line-number">577</span><br><span class="line-number">578</span><br><span class="line-number">579</span><br><span class="line-number">580</span><br><span class="line-number">581</span><br><span class="line-number">582</span><br><span class="line-number">583</span><br><span class="line-number">584</span><br><span class="line-number">585</span><br><span class="line-number">586</span><br><span class="line-number">587</span><br><span class="line-number">588</span><br><span class="line-number">589</span><br><span class="line-number">590</span><br><span class="line-number">591</span><br><span class="line-number">592</span><br><span class="line-number">593</span><br><span class="line-number">594</span><br><span class="line-number">595</span><br><span class="line-number">596</span><br><span class="line-number">597</span><br><span class="line-number">598</span><br><span class="line-number">599</span><br><span class="line-number">600</span><br><span class="line-number">601</span><br><span class="line-number">602</span><br><span class="line-number">603</span><br><span class="line-number">604</span><br><span class="line-number">605</span><br><span class="line-number">606</span><br><span class="line-number">607</span><br><span class="line-number">608</span><br><span class="line-number">609</span><br><span class="line-number">610</span><br><span class="line-number">611</span><br><span class="line-number">612</span><br><span class="line-number">613</span><br><span class="line-number">614</span><br><span class="line-number">615</span><br><span class="line-number">616</span><br><span class="line-number">617</span><br><span class="line-number">618</span><br><span class="line-number">619</span><br><span class="line-number">620</span><br><span class="line-number">621</span><br><span class="line-number">622</span><br><span class="line-number">623</span><br><span class="line-number">624</span><br><span class="line-number">625</span><br><span class="line-number">626</span><br><span class="line-number">627</span><br><span class="line-number">628</span><br><span class="line-number">629</span><br><span class="line-number">630</span><br><span class="line-number">631</span><br><span class="line-number">632</span><br><span class="line-number">633</span><br><span class="line-number">634</span><br><span class="line-number">635</span><br><span class="line-number">636</span><br><span class="line-number">637</span><br><span class="line-number">638</span><br><span class="line-number">639</span><br><span class="line-number">640</span><br><span class="line-number">641</span><br><span class="line-number">642</span><br><span class="line-number">643</span><br><span class="line-number">644</span><br><span class="line-number">645</span><br><span class="line-number">646</span><br><span class="line-number">647</span><br><span class="line-number">648</span><br><span class="line-number">649</span><br><span class="line-number">650</span><br><span class="line-number">651</span><br><span class="line-number">652</span><br><span class="line-number">653</span><br><span class="line-number">654</span><br><span class="line-number">655</span><br><span class="line-number">656</span><br><span class="line-number">657</span><br><span class="line-number">658</span><br><span class="line-number">659</span><br><span class="line-number">660</span><br><span class="line-number">661</span><br><span class="line-number">662</span><br><span class="line-number">663</span><br><span class="line-number">664</span><br><span class="line-number">665</span><br><span class="line-number">666</span><br><span class="line-number">667</span><br><span class="line-number">668</span><br><span class="line-number">669</span><br><span class="line-number">670</span><br><span class="line-number">671</span><br><span class="line-number">672</span><br><span class="line-number">673</span><br><span class="line-number">674</span><br><span class="line-number">675</span><br><span class="line-number">676</span><br><span class="line-number">677</span><br><span class="line-number">678</span><br><span class="line-number">679</span><br><span class="line-number">680</span><br><span class="line-number">681</span><br><span class="line-number">682</span><br><span class="line-number">683</span><br><span class="line-number">684</span><br><span class="line-number">685</span><br><span class="line-number">686</span><br><span class="line-number">687</span><br><span class="line-number">688</span><br><span class="line-number">689</span><br><span class="line-number">690</span><br><span class="line-number">691</span><br><span class="line-number">692</span><br><span class="line-number">693</span><br><span class="line-number">694</span><br><span class="line-number">695</span><br><span class="line-number">696</span><br><span class="line-number">697</span><br><span class="line-number">698</span><br><span class="line-number">699</span><br><span class="line-number">700</span><br><span class="line-number">701</span><br><span class="line-number">702</span><br><span class="line-number">703</span><br><span class="line-number">704</span><br><span class="line-number">705</span><br><span class="line-number">706</span><br><span class="line-number">707</span><br><span class="line-number">708</span><br><span class="line-number">709</span><br><span class="line-number">710</span><br><span class="line-number">711</span><br><span class="line-number">712</span><br><span class="line-number">713</span><br><span class="line-number">714</span><br><span class="line-number">715</span><br><span class="line-number">716</span><br><span class="line-number">717</span><br><span class="line-number">718</span><br><span class="line-number">719</span><br><span class="line-number">720</span><br><span class="line-number">721</span><br><span class="line-number">722</span><br><span class="line-number">723</span><br><span class="line-number">724</span><br><span class="line-number">725</span><br><span class="line-number">726</span><br><span class="line-number">727</span><br><span class="line-number">728</span><br><span class="line-number">729</span><br><span class="line-number">730</span><br><span class="line-number">731</span><br><span class="line-number">732</span><br><span class="line-number">733</span><br><span class="line-number">734</span><br><span class="line-number">735</span><br><span class="line-number">736</span><br><span class="line-number">737</span><br><span class="line-number">738</span><br><span class="line-number">739</span><br><span class="line-number">740</span><br><span class="line-number">741</span><br><span class="line-number">742</span><br><span class="line-number">743</span><br><span class="line-number">744</span><br><span class="line-number">745</span><br><span class="line-number">746</span><br><span class="line-number">747</span><br><span class="line-number">748</span><br><span class="line-number">749</span><br><span class="line-number">750</span><br><span class="line-number">751</span><br><span class="line-number">752</span><br><span class="line-number">753</span><br><span class="line-number">754</span><br><span class="line-number">755</span><br><span class="line-number">756</span><br><span class="line-number">757</span><br><span class="line-number">758</span><br><span class="line-number">759</span><br><span class="line-number">760</span><br><span class="line-number">761</span><br><span class="line-number">762</span><br><span class="line-number">763</span><br><span class="line-number">764</span><br><span class="line-number">765</span><br><span class="line-number">766</span><br><span class="line-number">767</span><br><span class="line-number">768</span><br><span class="line-number">769</span><br><span class="line-number">770</span><br><span class="line-number">771</span><br><span class="line-number">772</span><br><span class="line-number">773</span><br><span class="line-number">774</span><br><span class="line-number">775</span><br><span class="line-number">776</span><br><span class="line-number">777</span><br><span class="line-number">778</span><br><span class="line-number">779</span><br><span class="line-number">780</span><br><span class="line-number">781</span><br><span class="line-number">782</span><br><span class="line-number">783</span><br><span class="line-number">784</span><br><span class="line-number">785</span><br><span class="line-number">786</span><br><span class="line-number">787</span><br><span class="line-number">788</span><br><span class="line-number">789</span><br><span class="line-number">790</span><br><span class="line-number">791</span><br><span class="line-number">792</span><br><span class="line-number">793</span><br><span class="line-number">794</span><br><span class="line-number">795</span><br><span class="line-number">796</span><br><span class="line-number">797</span><br><span class="line-number">798</span><br><span class="line-number">799</span><br><span class="line-number">800</span><br><span class="line-number">801</span><br><span class="line-number">802</span><br><span class="line-number">803</span><br><span class="line-number">804</span><br><span class="line-number">805</span><br><span class="line-number">806</span><br><span class="line-number">807</span><br><span class="line-number">808</span><br><span class="line-number">809</span><br><span class="line-number">810</span><br><span class="line-number">811</span><br><span class="line-number">812</span><br><span class="line-number">813</span><br><span class="line-number">814</span><br><span class="line-number">815</span><br><span class="line-number">816</span><br><span class="line-number">817</span><br><span class="line-number">818</span><br><span class="line-number">819</span><br><span class="line-number">820</span><br><span class="line-number">821</span><br><span class="line-number">822</span><br><span class="line-number">823</span><br><span class="line-number">824</span><br><span class="line-number">825</span><br><span class="line-number">826</span><br><span class="line-number">827</span><br><span class="line-number">828</span><br><span class="line-number">829</span><br><span class="line-number">830</span><br><span class="line-number">831</span><br><span class="line-number">832</span><br><span class="line-number">833</span><br><span class="line-number">834</span><br><span class="line-number">835</span><br><span class="line-number">836</span><br><span class="line-number">837</span><br><span class="line-number">838</span><br><span class="line-number">839</span><br><span class="line-number">840</span><br><span class="line-number">841</span><br><span class="line-number">842</span><br><span class="line-number">843</span><br><span class="line-number">844</span><br><span class="line-number">845</span><br><span class="line-number">846</span><br><span class="line-number">847</span><br><span class="line-number">848</span><br><span class="line-number">849</span><br><span class="line-number">850</span><br><span class="line-number">851</span><br><span class="line-number">852</span><br><span class="line-number">853</span><br><span class="line-number">854</span><br><span class="line-number">855</span><br><span class="line-number">856</span><br><span class="line-number">857</span><br><span class="line-number">858</span><br><span class="line-number">859</span><br><span class="line-number">860</span><br><span class="line-number">861</span><br><span class="line-number">862</span><br><span class="line-number">863</span><br><span class="line-number">864</span><br><span class="line-number">865</span><br><span class="line-number">866</span><br><span class="line-number">867</span><br><span class="line-number">868</span><br><span class="line-number">869</span><br><span class="line-number">870</span><br><span class="line-number">871</span><br><span class="line-number">872</span><br><span class="line-number">873</span><br><span class="line-number">874</span><br><span class="line-number">875</span><br><span class="line-number">876</span><br><span class="line-number">877</span><br><span class="line-number">878</span><br><span class="line-number">879</span><br><span class="line-number">880</span><br><span class="line-number">881</span><br><span class="line-number">882</span><br><span class="line-number">883</span><br><span class="line-number">884</span><br><span class="line-number">885</span><br><span class="line-number">886</span><br><span class="line-number">887</span><br><span class="line-number">888</span><br><span class="line-number">889</span><br><span class="line-number">890</span><br><span class="line-number">891</span><br><span class="line-number">892</span><br><span class="line-number">893</span><br><span class="line-number">894</span><br><span class="line-number">895</span><br><span class="line-number">896</span><br><span class="line-number">897</span><br><span class="line-number">898</span><br><span class="line-number">899</span><br><span class="line-number">900</span><br><span class="line-number">901</span><br><span class="line-number">902</span><br><span class="line-number">903</span><br><span class="line-number">904</span><br><span class="line-number">905</span><br><span class="line-number">906</span><br><span class="line-number">907</span><br><span class="line-number">908</span><br><span class="line-number">909</span><br><span class="line-number">910</span><br><span class="line-number">911</span><br><span class="line-number">912</span><br><span class="line-number">913</span><br><span class="line-number">914</span><br><span class="line-number">915</span><br><span class="line-number">916</span><br><span class="line-number">917</span><br><span class="line-number">918</span><br><span class="line-number">919</span><br><span class="line-number">920</span><br><span class="line-number">921</span><br><span class="line-number">922</span><br><span class="line-number">923</span><br><span class="line-number">924</span><br><span class="line-number">925</span><br><span class="line-number">926</span><br><span class="line-number">927</span><br><span class="line-number">928</span><br><span class="line-number">929</span><br><span class="line-number">930</span><br><span class="line-number">931</span><br><span class="line-number">932</span><br><span class="line-number">933</span><br><span class="line-number">934</span><br><span class="line-number">935</span><br><span class="line-number">936</span><br><span class="line-number">937</span><br><span class="line-number">938</span><br><span class="line-number">939</span><br><span class="line-number">940</span><br><span class="line-number">941</span><br><span class="line-number">942</span><br><span class="line-number">943</span><br><span class="line-number">944</span><br><span class="line-number">945</span><br><span class="line-number">946</span><br><span class="line-number">947</span><br><span class="line-number">948</span><br><span class="line-number">949</span><br><span class="line-number">950</span><br><span class="line-number">951</span><br><span class="line-number">952</span><br><span class="line-number">953</span><br><span class="line-number">954</span><br><span class="line-number">955</span><br><span class="line-number">956</span><br><span class="line-number">957</span><br><span class="line-number">958</span><br><span class="line-number">959</span><br><span class="line-number">960</span><br><span class="line-number">961</span><br><span class="line-number">962</span><br><span class="line-number">963</span><br><span class="line-number">964</span><br><span class="line-number">965</span><br><span class="line-number">966</span><br><span class="line-number">967</span><br><span class="line-number">968</span><br><span class="line-number">969</span><br><span class="line-number">970</span><br><span class="line-number">971</span><br><span class="line-number">972</span><br><span class="line-number">973</span><br><span class="line-number">974</span><br><span class="line-number">975</span><br><span class="line-number">976</span><br><span class="line-number">977</span><br><span class="line-number">978</span><br><span class="line-number">979</span><br><span class="line-number">980</span><br><span class="line-number">981</span><br><span class="line-number">982</span><br><span class="line-number">983</span><br><span class="line-number">984</span><br><span class="line-number">985</span><br><span class="line-number">986</span><br><span class="line-number">987</span><br><span class="line-number">988</span><br><span class="line-number">989</span><br><span class="line-number">990</span><br><span class="line-number">991</span><br><span class="line-number">992</span><br><span class="line-number">993</span><br><span class="line-number">994</span><br><span class="line-number">995</span><br><span class="line-number">996</span><br><span class="line-number">997</span><br><span class="line-number">998</span><br><span class="line-number">999</span><br><span class="line-number">1000</span><br><span class="line-number">1001</span><br><span class="line-number">1002</span><br><span class="line-number">1003</span><br><span class="line-number">1004</span><br><span class="line-number">1005</span><br><span class="line-number">1006</span><br><span class="line-number">1007</span><br><span class="line-number">1008</span><br><span class="line-number">1009</span><br><span class="line-number">1010</span><br><span class="line-number">1011</span><br><span class="line-number">1012</span><br><span class="line-number">1013</span><br><span class="line-number">1014</span><br><span class="line-number">1015</span><br><span class="line-number">1016</span><br><span class="line-number">1017</span><br><span class="line-number">1018</span><br><span class="line-number">1019</span><br><span class="line-number">1020</span><br><span class="line-number">1021</span><br><span class="line-number">1022</span><br><span class="line-number">1023</span><br><span class="line-number">1024</span><br><span class="line-number">1025</span><br><span class="line-number">1026</span><br><span class="line-number">1027</span><br><span class="line-number">1028</span><br><span class="line-number">1029</span><br><span class="line-number">1030</span><br><span class="line-number">1031</span><br><span class="line-number">1032</span><br><span class="line-number">1033</span><br><span class="line-number">1034</span><br><span class="line-number">1035</span><br><span class="line-number">1036</span><br><span class="line-number">1037</span><br><span class="line-number">1038</span><br><span class="line-number">1039</span><br><span class="line-number">1040</span><br><span class="line-number">1041</span><br><span class="line-number">1042</span><br><span class="line-number">1043</span><br><span class="line-number">1044</span><br><span class="line-number">1045</span><br><span class="line-number">1046</span><br><span class="line-number">1047</span><br><span class="line-number">1048</span><br><span class="line-number">1049</span><br><span class="line-number">1050</span><br><span class="line-number">1051</span><br><span class="line-number">1052</span><br><span class="line-number">1053</span><br><span class="line-number">1054</span><br><span class="line-number">1055</span><br><span class="line-number">1056</span><br><span class="line-number">1057</span><br><span class="line-number">1058</span><br><span class="line-number">1059</span><br><span class="line-number">1060</span><br><span class="line-number">1061</span><br><span class="line-number">1062</span><br><span class="line-number">1063</span><br><span class="line-number">1064</span><br><span class="line-number">1065</span><br><span class="line-number">1066</span><br><span class="line-number">1067</span><br><span class="line-number">1068</span><br><span class="line-number">1069</span><br><span class="line-number">1070</span><br><span class="line-number">1071</span><br><span class="line-number">1072</span><br><span class="line-number">1073</span><br><span class="line-number">1074</span><br><span class="line-number">1075</span><br><span class="line-number">1076</span><br><span class="line-number">1077</span><br><span class="line-number">1078</span><br><span class="line-number">1079</span><br><span class="line-number">1080</span><br><span class="line-number">1081</span><br><span class="line-number">1082</span><br><span class="line-number">1083</span><br><span class="line-number">1084</span><br><span class="line-number">1085</span><br><span class="line-number">1086</span><br><span class="line-number">1087</span><br><span class="line-number">1088</span><br><span class="line-number">1089</span><br><span class="line-number">1090</span><br><span class="line-number">1091</span><br><span class="line-number">1092</span><br><span class="line-number">1093</span><br><span class="line-number">1094</span><br><span class="line-number">1095</span><br><span class="line-number">1096</span><br><span class="line-number">1097</span><br><span class="line-number">1098</span><br><span class="line-number">1099</span><br><span class="line-number">1100</span><br><span class="line-number">1101</span><br><span class="line-number">1102</span><br><span class="line-number">1103</span><br><span class="line-number">1104</span><br><span class="line-number">1105</span><br><span class="line-number">1106</span><br><span class="line-number">1107</span><br><span class="line-number">1108</span><br><span class="line-number">1109</span><br><span class="line-number">1110</span><br><span class="line-number">1111</span><br><span class="line-number">1112</span><br><span class="line-number">1113</span><br><span class="line-number">1114</span><br><span class="line-number">1115</span><br><span class="line-number">1116</span><br><span class="line-number">1117</span><br><span class="line-number">1118</span><br><span class="line-number">1119</span><br><span class="line-number">1120</span><br><span class="line-number">1121</span><br><span class="line-number">1122</span><br><span class="line-number">1123</span><br><span class="line-number">1124</span><br><span class="line-number">1125</span><br><span class="line-number">1126</span><br></div></div></details>`,175);function w(f,h){const a=o("ExternalLinkIcon");return c(),l(r,null,[i,n("p",null,[n("a",k,[b,p(a)])]),m,n("p",null,[n("a",d,[g,p(a)])]),y],64)}var q=e(u,[["render",w],["__file","JavascriptTool.html.vue"]]);export{q as default};
