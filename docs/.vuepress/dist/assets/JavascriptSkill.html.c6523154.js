import{_ as n,h as s}from"./app.d9651a44.js";const a={},p=s(`<h1 id="javascript\u5F00\u53D1\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#javascript\u5F00\u53D1\u6280\u5DE7" aria-hidden="true">#</a> Javascript\u5F00\u53D1\u6280\u5DE7</h1><blockquote><p>\u603B\u7ED3\u4E8637\u4E2AES6-ES12\u7684\u5F00\u53D1\u6280\u5DE7</p></blockquote><h2 id="es6" tabindex="-1"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> ES6</h2><h3 id="_01-let-\u548C-const" tabindex="-1"><a class="header-anchor" href="#_01-let-\u548C-const" aria-hidden="true">#</a> 01-let \u548C const</h3><p>\u4E3A\u4E86\u5F00\u53D1\u7684\u4EE3\u7801\u89C4\u8303\u800C\u51FA\u73B0\u7684,\u6211\u4EEC\u8981\u9010\u6E10\u653E\u5F03var\uFF0C\u5728\u9879\u76EE\u4E2D\u591A\u7528let\u548Cconst\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u4E0Evar\u7684\u533A\u522B\uFF1A</p><ul><li>var\u6709\u53D8\u91CF\u63D0\u5347\uFF0C\u6709\u521D\u59CB\u5316\u63D0\u5347\uFF0C\u503C\u53EF\u53D8</li><li>let\u6709\u53D8\u91CF\u63D0\u5347\uFF0C\u6CA1\u6709\u521D\u59CB\u5316\u63D0\u5347\uFF0C\u503C\u53EF\u53D8</li><li>const\u6709\u53D8\u91CF\u63D0\u5347\uFF0C\u6CA1\u6709\u521D\u59CB\u5316\u63D0\u5347\uFF0C\u503C\u4E0D\u53EF\u53D8\uFF0C\u4F46\u5982\u679C\u662F\u5B9A\u4E49\u5BF9\u8C61\uFF0C\u5219\u5C5E\u6027\u53EF\u53D8</li><li>\u6682\u65F6\u6027\u6B7B\u533A\u95EE\u9898\u8BF4\u660E\uFF1A\u5176\u5B9Elet\u548Cconst\u662F\u6709\u53D8\u91CF\u63D0\u5347\u7684\uFF0C\u4F46\u662F\u6CA1\u6709\u521D\u59CB\u5316\u63D0\u5347\uFF1A</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;\u674E\u56DB&#39;</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Cannot access &#39;name&#39; before initialization</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u5757\u7EA7\u4F5C\u7528\u57DF\u89E3\u51B3\u95EE\u9898\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token comment">// 5 5 5 5 5</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token comment">// 0 1 2 3 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_02-\u9ED8\u8BA4\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_02-\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a> 02-\u9ED8\u8BA4\u53C2\u6570</h3><blockquote><p>\u5982\u679C\u53C2\u6570\u4E0D\u4F20\u8FDB\u6765\uFF0C\u5C31\u9700\u8981\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
  <span class="token keyword">var</span> age <span class="token operator">=</span> age <span class="token operator">||</span> <span class="token number">18</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u4F46\u662F\u8FD9\u4E48\u5199\u786E\u5B9E\u4E0D\u4F18\u96C5\uFF0C\u53EF\u4EE5\u4F7F\u7528ES6\u7684\u9ED8\u8BA4\u53C2\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 18</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token comment">// \u674E\u56DB 22</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_03-\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_03-\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 03-\u6269\u5C55\u8FD0\u7B97\u7B26</h3><blockquote><p>\u62FC\u63A5\u591A\u4E2A\u6570\u7EC4</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1, 2, 4, 4, 5, 7, 7, 8, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u66F4\u4F18\u96C5\u5730\u8FDB\u884C\u62FC\u63A5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token operator">...</span>arr3<span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1, 2, 4, 4, 5, 7, 7, 8, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_04-\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_04-\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> 04-\u5269\u4F59\u53C2\u6570</h3><blockquote><p>\u4E00\u4E2A\u51FD\u6570\uFF0C\u4F20\u5165\u53C2\u6570\u7684\u4E2A\u6570\u662F\u4E0D\u786E\u5B9A\u7684\uFF0C\u8FD9\u5C31\u53EF\u4EE5\u7528ES6\u7684\u5269\u4F59\u53C2\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> <span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span> <span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 [ 1, 2 ]</span>
<span class="token function">fn</span> <span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 [ 1, 2, 3, 4, 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_05-\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_05-\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 05-\u6A21\u677F\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token string">&#39;22&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&#39;\u4ECA\u5E74&#39;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&#39;\u5C81\u5566&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09\u4ECA\u5E7422\u5C81\u5566</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u73B0\u5728\u53EF\u4EE5\u8FD9\u4E48\u505A\uFF0C\u4F1A\u66F4\u4F18\u96C5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token string">&#39;22&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u4ECA\u5E74</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5C81\u5566</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09\u4ECA\u5E7422\u5C81\u5566</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_06-object-keys" tabindex="-1"><a class="header-anchor" href="#_06-object-keys" aria-hidden="true">#</a> 06-Object.keys</h3><blockquote><p>\u53EF\u4EE5\u7528\u6765\u83B7\u53D6\u5BF9\u8C61\u7684key\u7684\u96C6\u5408\uFF0C\u8FDB\u800C\u53EF\u4EE5\u83B7\u5F97\u5BF9\u5E94key\u7684value</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span> <span class="token comment">// [ &#39;name&#39;, &#39;age&#39;, &#39;gender&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_07-\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_07-\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> 07-\u7BAD\u5934\u51FD\u6570</h3><p>\u666E\u901A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>ES6\u65B0\u52A0\u4E86\u7BAD\u5934\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u53EF\u4EE5\u7701\u7565\u62EC\u53F7</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u51FD\u6570\u4F53\u91CC\u53EA\u6709\u4E00\u53E5return</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> name
<span class="token punctuation">}</span>
<span class="token comment">// \u53EF\u7B80\u5199\u4E3A</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> name

<span class="token comment">// \u5982\u679C\u8FD4\u56DE\u7684\u662F\u5BF9\u8C61</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u666E\u901A\u51FD\u6570\u548C\u7BAD\u5934\u51FD\u6570\u7684\u533A\u522B\uFF1A</p><ol><li>\u7BAD\u5934\u51FD\u6570\u4E0D\u53EF\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\uFF0C\u4E0D\u80FD\u4F7F\u7528new</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709\u81EA\u5DF1\u7684this</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709arguments\u5BF9\u8C61</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709\u539F\u578B\u5BF9\u8C61</li></ol></div><h3 id="_08-array-foreach" tabindex="-1"><a class="header-anchor" href="#_08-array-foreach" aria-hidden="true">#</a> 08-Array.forEach</h3><blockquote><p>ES6\u65B0\u52A0\u7684\u6570\u7EC4\u904D\u5386\u65B9\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> eachArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token comment">// \u4E09\u4E2A\u53C2\u6570\uFF1A\u904D\u5386\u9879 \u7D22\u5F15 \u6570\u7EC4\u672C\u8EAB</span>
<span class="token comment">// \u914D\u5408\u7BAD\u5934\u51FD\u6570</span>
eachArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1 0 [ 1, 2, 3, 4, 5 ]</span>
<span class="token comment">// 2 1 [ 1, 2, 3, 4, 5 ]</span>
<span class="token comment">// 3 2 [ 1, 2, 3, 4, 5 ]</span>
<span class="token comment">// 4 3 [ 1, 2, 3, 4, 5 ]</span>
<span class="token comment">// 5 4 [ 1, 2, 3, 4, 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_09-array-map" tabindex="-1"><a class="header-anchor" href="#_09-array-map" aria-hidden="true">#</a> 09-Array.map</h3><blockquote><p>\u5E38\u7528\u4E8E\u8FD4\u56DE\u4E00\u4E2A\u5904\u7406\u8FC7\u540E\u7684\u65B0\u6570\u7EC4</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mapArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token comment">// \u4E09\u4E2A\u53C2\u6570\uFF1A\u904D\u5386\u9879 \u7D22\u5F15 \u6570\u7EC4\u672C\u8EAB</span>
<span class="token comment">// \u914D\u5408\u7BAD\u5934\u51FD\u6570\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u5143\u7D20\u8FDB\u884C\u7FFB\u500D</span>
<span class="token keyword">const</span> mapArr2 <span class="token operator">=</span> mapArr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> num<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mapArr2<span class="token punctuation">)</span> <span class="token comment">// [ 2, 4, 6, 8, 10 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_10-array-filter" tabindex="-1"><a class="header-anchor" href="#_10-array-filter" aria-hidden="true">#</a> 10-Array.filter</h3><blockquote><p>\u987E\u540D\u601D\u4E49\uFF0C\u7528\u6765\u8FC7\u6EE4\u7684\u65B9\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> filterArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token comment">// \u4E09\u4E2A\u53C2\u6570\uFF1A\u904D\u5386\u9879 \u7D22\u5F15 \u6570\u7EC4\u672C\u8EAB</span>
<span class="token comment">// \u914D\u5408\u7BAD\u5934\u51FD\u6570\uFF0C\u8FD4\u56DE\u5927\u4E8E3\u7684\u96C6\u5408</span>
<span class="token keyword">const</span> filterArr2 <span class="token operator">=</span> filterArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> num <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filterArr2<span class="token punctuation">)</span> <span class="token comment">// [ 4, 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_11-array-some" tabindex="-1"><a class="header-anchor" href="#_11-array-some" aria-hidden="true">#</a> 11-Array.some</h3><blockquote><p>some\uFF0C\u610F\u601D\u5C31\u662F\u53EA\u6709\u4E00\u4E2A\u662F\u771F\uFF0C\u90A3\u5C31\u8FD4\u56DE\u771F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> someArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>

<span class="token comment">// \u4E09\u4E2A\u53C2\u6570\uFF1A\u904D\u5386\u9879 \u7D22\u5F15 \u6570\u7EC4\u672C\u8EAB</span>
<span class="token comment">// \u914D\u5408\u7BAD\u5934\u51FD\u6570\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u4E3Atrue\uFF0C\u5C31\u8FD4\u56DEtrue\uFF0C\u4E00\u4E2A\u90FDtrue\u90FD\u6CA1\u6709\uFF0C\u5C31\u8FD4\u56DEfalse</span>
<span class="token keyword">const</span> someArr2 <span class="token operator">=</span> someArr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">bol<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> bol<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>someArr2<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_12-array-every" tabindex="-1"><a class="header-anchor" href="#_12-array-every" aria-hidden="true">#</a> 12-Array.every</h3><blockquote><p>every\u8DDFsome\u662F\u76F8\u53CD\u7684\uFF0Csome\u662F\u53EA\u6709\u4E00\u4E2A\u5C31\u884C\uFF0Cevery\u662F\u8981\u6240\u6709\u4E3A\u771F\u624D\u8FD4\u56DE\u771F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> everyArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>

<span class="token comment">// \u4E09\u4E2A\u53C2\u6570\uFF1A\u904D\u5386\u9879 \u7D22\u5F15 \u6570\u7EC4\u672C\u8EAB</span>
<span class="token comment">// \u914D\u5408\u7BAD\u5934\u51FD\u6570\uFF0C\u9700\u8981\u6240\u6709\u4E3Atrue\uFF0C\u624D\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</span>
<span class="token keyword">const</span> everyArr2 <span class="token operator">=</span> everyArr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">bol<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> bol<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>everyArr2<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_13-array-reduce" tabindex="-1"><a class="header-anchor" href="#_13-array-reduce" aria-hidden="true">#</a> 13-Array.reduce</h3><blockquote><ol><li>\u7B2C\u4E00\u4E2A\u53C2\u6570callback\u51FD\u6570\uFF1A pre\u4E3A\u4E0A\u6B21return\u7684\u503C\uFF0Cnext\u4E3A\u6570\u7EC4\u7684\u672C\u6B21\u904D\u5386\u7684\u9879</li><li>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u521D\u59CB\u503C\uFF0C\u4E5F\u662F\u7B2C\u4E00\u4E2Apre</li></ol></blockquote><p>\u4E3E\u4E24\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BA1\u7B97 1 + 2 + 3 + 4 + 5</span>
<span class="token keyword">const</span> reduceArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> sum <span class="token operator">=</span> reduceArr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> pre <span class="token operator">+</span> next
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token comment">// 15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7EDF\u8BA1\u5143\u7D20\u51FA\u73B0\u4E2A\u6570</span>
<span class="token keyword">const</span> nameArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u738B\u4E94&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> totalObj <span class="token operator">=</span> nameArr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pre<span class="token punctuation">[</span>next<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pre<span class="token punctuation">[</span>next<span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    pre<span class="token punctuation">[</span>next<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> pre
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>totalObj<span class="token punctuation">)</span> <span class="token comment">// { &#39;\u5F20\u4E09&#39;: 3, \u674E\u56DB: 2, &#39;\u738B\u4E94&#39;: 1 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_14-\u5BF9\u8C61\u5C5E\u6027\u540C\u540D\u7B80\u5199" tabindex="-1"><a class="header-anchor" href="#_14-\u5BF9\u8C61\u5C5E\u6027\u540C\u540D\u7B80\u5199" aria-hidden="true">#</a> 14-\u5BF9\u8C61\u5C5E\u6027\u540C\u540D\u7B80\u5199</h3><blockquote><p>\u4EE5\u524D\u540C\u540D\u5C5E\u6027\u9700\u8981\u8FD9\u4E48\u5199</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token string">&#39;22&#39;</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> age
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;\u5F20\u4E09&#39;, age: &#39;22&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>ES6\u65B0\u589E\u8BED\u6CD5\uFF0C\u53EA\u9700\u8FD9\u4E48\u5199</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token string">&#39;22&#39;</span>

<span class="token comment">// \u5C5E\u6027\u540C\u540D\u53EF\u7B80\u5199</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">,</span>
  age
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;\u5F20\u4E09&#39;, age: &#39;22&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_15-promise" tabindex="-1"><a class="header-anchor" href="#_15-promise" aria-hidden="true">#</a> 15-Promise</h3><blockquote><p>Promise\uFF0C\u4E2D\u6587\u540D\u4E3A\u627F\u8BFA\uFF0C\u627F\u8BFA\u5728\u54EA\u5462\uFF1F\u627F\u8BFA\u5728\uFF0C\u4E00\u65E6\u4ED6\u7684\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u4F1A\u518D\u6539\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6210\u529F\u72B6\u6001</span>
<span class="token keyword">function</span> <span class="token function">requestData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u62DF\u8BF7\u6C42</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// \u4E00\u79D2\u949F\u540E\u8F93\u51FA &#39;\u5F20\u4E09&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5931\u8D25\u72B6\u6001</span>
<span class="token keyword">function</span> <span class="token function">requestData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u62DF\u8BF7\u6C42</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u5566&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// \u4E00\u79D2\u949F\u540E\u8F93\u51FA &#39;\u9519\u8BEF\u5566&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">all\u65B9\u6CD5</p><ul><li>\u63A5\u6536\u4E00\u4E2APromise\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5982\u6709\u975EPromise\u9879\uFF0C\u5219\u6B64\u9879\u5F53\u505A\u6210\u529F</li><li>\u5982\u679C\u6240\u6709Promise\u90FD\u6210\u529F\uFF0C\u5219\u8FD4\u56DE\u6210\u529F\u7ED3\u679C\u6570\u7EC4</li><li>\u5982\u679C\u6709\u4E00\u4E2APromise\u5931\u8D25\uFF0C\u5219\u8FD4\u56DE\u8FD9\u4E2A\u5931\u8D25\u7ED3\u679C</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u679C\u5168\u90FD\u4E3A\u6210\u529F</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u7ACB\u5373\u8F93\u51FA&#39;</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3\u79D2\u540E\u8F93\u51FA [ &#39;2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01&#39;, &#39;3000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01&#39;, &#39;1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01&#39; ]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> 
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u679C\u6709\u4E00\u4E2A\u5931\u8D25</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> isResolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isResolve <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u8F93\u51FA &#39;3000\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">race\u65B9\u6CD5</p><ul><li>\u63A5\u6536\u4E00\u4E2APromise\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5982\u6709\u975EPromise\u9879\uFF0C\u5219\u6B64\u9879\u5F53\u505A\u6210\u529F</li><li>\u54EA\u4E2APromise\u6700\u5FEB\u5F97\u5230\u7ED3\u679C\uFF0C\u5C31\u8FD4\u56DE\u90A3\u4E2A\u7ED3\u679C\uFF0C\u65E0\u8BBA\u6210\u529F\u5931\u8D25</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> isResolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isResolve <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u8F93\u51FA</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_16-class" tabindex="-1"><a class="header-anchor" href="#_16-class" aria-hidden="true">#</a> 16-class</h3><p>\u4EE5\u524D\u4F7F\u7528\u6784\u9020\u51FD\u6570\u751F\u6210\u5BF9\u8C61\uFF0C\u8FD9\u4E48\u505A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
<span class="token punctuation">}</span>

<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> zhangsan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
zhangsan<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u800C\u6709\u4E86ES6\u7684class\u53EF\u4EE5\u8FD9\u4E48\u505A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6784\u9020\u5668</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>

  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> zhangsan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
zhangsan<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>\u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0Cclass\u672C\u8D28\u4E5F\u662Ffunction\uFF0Cclass\u662Ffunction\u7684\u8BED\u6CD5\u7CD6</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> Person<span class="token punctuation">)</span> <span class="token comment">// function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u9664\u4E86\u4EE5\u4E0A\uFF0C\u8FD8\u9700\u8981\u77E5\u9053class\u7684\u4EE5\u4E0B\u77E5\u8BC6\u70B9</p><p>\u9759\u6001\u5C5E\u6027\u548C\u9759\u6001\u65B9\u6CD5\uFF0C\u4F7F\u7528static\u5B9A\u4E49\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u53EA\u80FDclass\u81EA\u5DF1\u7528\uFF0C\u5B9E\u4F8B\u7528\u4E0D\u4E86</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> age <span class="token operator">=</span> <span class="token number">22</span>

  <span class="token keyword">static</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token comment">// 22</span>
Person<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u54C8\u54C8</span>

<span class="token keyword">const</span> sunshine_lin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sunshine_lin<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
sunshine_lin<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// fn is not a function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>extend\u7EE7\u627F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token string">&#39;ketty&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// \u7EE7\u627F\u4E86Animal\u7684\u6784\u9020\u5668</span>
cat<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ketty 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_17-\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#_17-\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> 17-\u89E3\u6784\u8D4B\u503C</h3><blockquote><p>\u4EE5\u524D\u63D0\u53D6\u5BF9\u8C61\u91CC\u7684\u5C5E\u6027\u9700\u8981\u8FD9\u4E48\u505A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> name <span class="token operator">=</span> obj<span class="token punctuation">.</span>name
<span class="token keyword">const</span> age <span class="token operator">=</span> obj<span class="token punctuation">.</span>age
<span class="token keyword">const</span> gender <span class="token operator">=</span> obj<span class="token punctuation">.</span>gender
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 22 \u7537</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>ES6\u65B0\u589E\u4E86\u89E3\u6784\u8D4B\u503C\u7684\u8BED\u6CD5</p><blockquote><p>\u5BF9\u8C61\u89E3\u6784</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">doing</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">morning</span><span class="token operator">:</span> <span class="token string">&#39;\u6478\u9C7C&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">afternoon</span><span class="token operator">:</span> <span class="token string">&#39;\u6478\u9C7C&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">evening</span><span class="token operator">:</span> <span class="token string">&#39;sleep&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09 22 \u7537</span>

<span class="token comment">// \u89E3\u6784\u91CD\u540D</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> myname <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myname<span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>

<span class="token comment">// \u5D4C\u5957\u89E3\u6784</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">doing</span><span class="token operator">:</span> <span class="token punctuation">{</span> evening <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evening<span class="token punctuation">)</span> <span class="token comment">// sleep</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>\u6570\u7EC4\u89E3\u6784</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// 1 2 3</span>

<span class="token comment">// \u9ED8\u8BA4\u8D4B\u503C</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token comment">// 1 2 3 5</span>

<span class="token comment">// \u4E71\u5E8F\u89E3\u6784</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token operator">:</span> a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span> b<span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> c <span class="token punctuation">}</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// 2 1 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_18-find-\u548C-findindex" tabindex="-1"><a class="header-anchor" href="#_18-find-\u548C-findindex" aria-hidden="true">#</a> 18-find \u548C findIndex</h3><ul><li>find\uFF1A\u627E\u5230\u8FD4\u56DE\u88AB\u627E\u5143\u7D20\uFF0C\u627E\u4E0D\u5230\u8FD4\u56DEundefined</li><li>findIndex\uFF1A\u627E\u5230\u8FD4\u56DE\u88AB\u627E\u5143\u7D20\u7D22\u5F15\uFF0C\u627E\u4E0D\u5230\u8FD4\u56DE-1</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> findArr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u738B\u4E94&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> zhangsan <span class="token operator">=</span> findArr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name <span class="token operator">===</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ageIndex <span class="token operator">=</span> findArr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> age <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> age <span class="token operator">===</span> <span class="token number">20</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">)</span> <span class="token comment">// {name: &quot;\u5F20\u4E09&quot;, age: 18}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ageIndex<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_19-for-of-\u548C-for-in" tabindex="-1"><a class="header-anchor" href="#_19-for-of-\u548C-for-in" aria-hidden="true">#</a> 19-for of \u548C for in</h3><ul><li>for in \uFF1A\u904D\u5386\u65B9\u6CD5\uFF0C\u53EF\u904D\u5386\u5BF9\u8C61\u548C\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// name</span>
<span class="token comment">// age</span>
<span class="token comment">// gender</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0 1 2 3 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>for of \uFF1A\u904D\u5386\u65B9\u6CD5\uFF0C\u53EA\u80FD\u904D\u5386\u6570\u7EC4\uFF0C\u4E0D\u80FD\u904D\u5386\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1 2 3 4 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_20-set-\u548C-map" tabindex="-1"><a class="header-anchor" href="#_20-set-\u548C-map" aria-hidden="true">#</a> 20-Set \u548C Map</h3><div class="custom-container tip"><p class="custom-container-title">Set</p><ul><li>\u5148\u8BF4\u8BF4Set\u7684\u57FA\u672C\u7528\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u4E0D\u4F20\u6570\u7EC4</span>
<span class="token keyword">const</span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
set1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
set1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span> <span class="token comment">// Set(2) { 1, 2 }</span>

<span class="token comment">// \u4E5F\u53EF\u4F20\u6570\u7EC4</span>
<span class="token keyword">const</span> set2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u589E\u52A0\u5143\u7D20 \u4F7F\u7528 add</span>
set2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
set2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span> <span class="token comment">// Set(5) { 1, 2, 3, 4, &#39;\u5F20\u4E09&#39; }</span>
<span class="token comment">// \u662F\u5426\u542B\u6709\u67D0\u4E2A\u5143\u7D20 \u4F7F\u7528 has</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token comment">// \u67E5\u770B\u957F\u5EA6 \u4F7F\u7528 size</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token comment">// 5</span>
<span class="token comment">// \u5220\u9664\u5143\u7D20 \u4F7F\u7528 delete</span>
set2<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span> <span class="token comment">// Set(4) { 1, 3, 4, &#39;\u5F20\u4E09&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>\u518D\u8BF4\u8BF4Set\u7684\u4E0D\u91CD\u590D\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u589E\u52A0\u4E00\u4E2A\u5DF2\u6709\u5143\u7D20\uFF0C\u5219\u589E\u52A0\u65E0\u6548\uFF0C\u4F1A\u88AB\u81EA\u52A8\u53BB\u91CD</span>
<span class="token keyword">const</span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
set1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span> <span class="token comment">// Set(1) { 1 }</span>

<span class="token comment">// \u4F20\u5165\u7684\u6570\u7EC4\u4E2D\u6709\u91CD\u590D\u9879\uFF0C\u4F1A\u81EA\u52A8\u53BB\u91CD</span>
<span class="token keyword">const</span> set2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span> <span class="token comment">// Set(4) { 1, 2, &#39;\u5F20\u4E09&#39;, 3 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>Set\u7684\u4E0D\u91CD\u590D\u6027\u4E2D\uFF0C\u8981\u6CE8\u610F\u5F15\u7528\u6570\u636E\u7C7B\u578B\u548CNaN</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61\u90FD\u662F\u4E0D\u7528\u7684\u6307\u9488\uFF0C\u6240\u4EE5\u6CA1\u6CD5\u53BB\u91CD</span>
<span class="token keyword">const</span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span> <span class="token comment">// Set(4) { 1, { name: &#39;\u5F20\u4E09&#39; }, 2, { name: &#39;\u5F20\u4E09&#39; } }</span>

<span class="token comment">// \u5982\u679C\u662F\u4E24\u4E2A\u5BF9\u8C61\u662F\u540C\u4E00\u6307\u9488\uFF0C\u5219\u80FD\u53BB\u91CD</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> set2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> obj<span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span> <span class="token comment">// Set(3) { 1, { name: &#39;\u5F20\u4E09&#39; }, 2 }</span>

<span class="token comment">// \u6211\u4EEC\u90FD\u77E5\u9053 NaN !== NaN\uFF0CNaN\u662F\u81EA\u8EAB\u4E0D\u7B49\u4E8E\u81EA\u8EAB\u7684\uFF0C\u4F46\u662F\u5728Set\u4E2D\u4ED6\u8FD8\u662F\u4F1A\u88AB\u53BB\u91CD</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span> <span class="token comment">// Set(2) { 1, NaN }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>\u5229\u7528Set\u7684\u4E0D\u91CD\u590D\u6027\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u6570\u7EC4\u53BB\u91CD</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>

<span class="token comment">// Set\u53EF\u5229\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u8F6C\u4E3A\u6570\u7EC4\u54E6</span>
<span class="token keyword">const</span> quchongArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>quchongArr<span class="token punctuation">)</span> <span class="token comment">// [1,  2, 3, 4, 5, 66, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">Map</p><ul><li>Map\u5BF9\u6BD4object\u6700\u5927\u7684\u597D\u5904\u5C31\u662F\uFF0Ckey\u4E0D\u53D7\u7C7B\u578B\u9650\u5236</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49map</span>
<span class="token keyword">const</span> map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u65B0\u589E\u952E\u503C\u5BF9 \u4F7F\u7528 set(key, value)</span>
map1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
map1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
map1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u563B\u563B\u563B&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map1<span class="token punctuation">)</span> <span class="token comment">// Map(3) { true =&gt; 1, 1 =&gt; 2, &#39;\u54C8\u54C8&#39; =&gt; &#39;\u563B\u563B\u563B&#39; }</span>

<span class="token comment">// \u5224\u65ADmap\u662F\u5426\u542B\u6709\u67D0\u4E2Akey \u4F7F\u7528 has(key)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map1<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token comment">// \u83B7\u53D6map\u4E2D\u67D0\u4E2Akey\u5BF9\u5E94\u7684value \u4F7F\u7528 get(key)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>

<span class="token comment">// \u5220\u9664map\u4E2D\u67D0\u4E2A\u952E\u503C\u5BF9 \u4F7F\u7528 delete(key)</span>
map1<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map1<span class="token punctuation">)</span> <span class="token comment">// Map(2) { true =&gt; 1, 1 =&gt; 2 }</span>

<span class="token comment">// \u5B9A\u4E49map\uFF0C\u4E5F\u53EF\u4F20\u5165\u952E\u503C\u5BF9\u6570\u7EC4\u96C6\u5408</span>
<span class="token keyword">const</span> map2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u563B\u563B\u563B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map2<span class="token punctuation">)</span> <span class="token comment">// Map(3) { true =&gt; 1, 1 =&gt; 2, &#39;\u54C8\u54C8&#39; =&gt; &#39;\u563B\u563B\u563B&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><h2 id="es7" tabindex="-1"><a class="header-anchor" href="#es7" aria-hidden="true">#</a> ES7</h2><h3 id="_21-array-includes" tabindex="-1"><a class="header-anchor" href="#_21-array-includes" aria-hidden="true">#</a> 21-Array.includes</h3><ul><li>\u4F20\u5165\u5143\u7D20\uFF0C\u5982\u679C\u6570\u7EC4\u4E2D\u80FD\u627E\u5230\u6B64\u5143\u7D20\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> includeArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> isLisi <span class="token operator">=</span> includeArr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isLisi<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u8DDFindexOf\u5F88\u50CF\uFF0C\u4F46\u8FD8\u662F\u6709\u533A\u522B\u7684</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// -1  indexOf\u627E\u4E0D\u5230NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true includes\u80FD\u627E\u5230NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_22-\u6C42\u5E42\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_22-\u6C42\u5E42\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 22-\u6C42\u5E42\u8FD0\u7B97\u7B26</h3><ul><li>\u4EE5\u524D\u6C42\u5E42\uFF0C\u6211\u4EEC\u9700\u8981\u8FD9\u4E48\u5199</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>ES7\u63D0\u4F9B\u4E86\u6C42\u5E42\u8FD0\u7B97\u7B26\uFF1A**</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">**</span> <span class="token number">2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="es8" tabindex="-1"><a class="header-anchor" href="#es8" aria-hidden="true">#</a> ES8</h2><h3 id="_23-object-values" tabindex="-1"><a class="header-anchor" href="#_23-object-values" aria-hidden="true">#</a> 23-Object.values</h3><ul><li>\u53EF\u4EE5\u7528\u6765\u83B7\u53D6\u5BF9\u8C61\u7684value\u7684\u96C6\u5408</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token comment">// [ &#39;\u5F20\u4E09&#39;, 22, &#39;\u7537&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_24-object-entries" tabindex="-1"><a class="header-anchor" href="#_24-object-entries" aria-hidden="true">#</a> 24-Object.entries</h3><ul><li>\u53EF\u4EE5\u7528\u6765\u83B7\u53D6\u5BF9\u8C61\u7684\u952E\u503C\u5BF9\u96C6\u5408[entries\uFF1A\u6761\u76EE]</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> entries <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span>
<span class="token comment">// [ [ &#39;name&#39;, &#39;\u5F20\u4E09&#39; ], [ &#39;age&#39;, 22 ], [ &#39;gender&#39;, &#39;\u7537&#39; ] ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_25-async-await" tabindex="-1"><a class="header-anchor" href="#_25-async-await" aria-hidden="true">#</a> 25-async/await</h3><blockquote><p>\u4EE5\u540C\u6B65\u65B9\u5F0F\u6267\u884C\u5F02\u6B65\u64CD\u4F5C</p></blockquote><ul><li>\u6211\u4EEC\u5E73\u65F6\u53EF\u80FD\u4F1A\u9047\u5230\u8FD9\u79CD\u573A\u666F\uFF0C\u63A5\u53E3\u4E00\uFF0C\u8BF7\u6C42\u5230\u6570\u636E\u4E00\uFF0C\u800C\u6570\u636E\u4E00\u88AB\u5F53\u505A\u8BF7\u6C42\u4E8C\u7684\u53C2\u6570\u53BB\u8BF7\u6C42\u6570\u636E\u4E8C\uFF0C\u6211\u4EEC\u4F1A\u7528Promise\u8FD9\u4E48\u505A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u62DF\u7B2C\u4E00\u6B21\u8BF7\u6C42</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u7B2C\u4E00\u6B21\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6A21\u62DF\u7B2C\u4E8C\u6B21\u8BF7\u6C42</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u7B2C\u4E8C\u6B21\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u62FF\u7B2C\u4E00\u6B21\u8BF7\u6C42\u7684\u6570\u636E\u53BB\u4E5810\uFF0C\u5F53\u505A\u7B2C\u4E8C\u6B21\u8BF7\u6C42\u7684\u6570\u636E</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>res <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">sres</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sres<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1 + 2 = 3 3\u79D2\u540E\u8F93\u51FA 50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>\u8FD9\u6837\u7684\u5D4C\u5957\u662F\u4E0D\u7F8E\u89C2\u7684\uFF0C\u5982\u679C\u6709\u5F88\u591A\u4E2A\u63A5\u53E3\uFF0C\u90A3\u5C31\u4F1A\u5D4C\u5957\u5F88\u591A\u5C42\uFF0C\u6B64\u65F6\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528async/await\u6765\u4EE5\u540C\u6B65\u65B9\u5F0F\u6267\u884C\u5F02\u6B65\uFF0C\u6CE8\u610F\u4EE5\u4E0B\u51E0\u70B9\uFF1A <ul><li>await\u53EA\u80FD\u5728async\u51FD\u6570\u91CC\u4F7F\u7528</li><li>await\u540E\u9762\u6700\u597D\u63A5Promise\uFF0C\u5982\u679C\u540E\u9762\u63A5\u7684\u662F\u666E\u901A\u51FD\u6570\u5219\u4F1A\u76F4\u63A5\u6267\u884C</li><li>async\u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2APromise</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u7B2C\u4E00\u6B21\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn2</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u7B2C\u4E8C\u6B21\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>data <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">req</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u540C\u6B65\u65B9\u5F0F\u6267\u884C\u5F02\u6B65\uFF0C\u50CF\u6392\u961F\u4E00\u6837</span>
  <span class="token keyword">const</span> data1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u7B49\u5F851\u79D2\u540E\u8FD4\u56DE\u6570\u636E\u518D\u5F80\u4E0B\u6267\u884C</span>
  <span class="token keyword">const</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn2</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> <span class="token comment">// \u62FFdata1\u53BB\u8BF7\u6C422\u79D2\u540E\uFF0C\u5F80\u4E0B\u8D70</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span> <span class="token comment">// \u603B\u51713\u79D2\u540E \u8F93\u51FA 50</span>
<span class="token punctuation">}</span>
<span class="token function">req</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="es9" tabindex="-1"><a class="header-anchor" href="#es9" aria-hidden="true">#</a> ES9</h2><h3 id="_26-for-await-of" tabindex="-1"><a class="header-anchor" href="#_26-for-await-of" aria-hidden="true">#</a> 26-for await of</h3><ul><li>\u6211\u4EEC\u6765\u770B\u4EE5\u4E0B\u573A\u666F\u54C8</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ED3\u679C\u662F</span>
<span class="token comment">// 1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 3000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>

<span class="token comment">// \u4F46\u662F\u6211\u60F3\u8981\u8FD9\u4E2A\u7ED3\u679C</span>

<span class="token comment">// 3000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>\u7B2C\u4E00\u65F6\u95F4\u6211\u4EEC\u80AF\u5B9A\u60F3\u5230\u7684\u662Fasync/await</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6392\u961F</span>
  <span class="token keyword">const</span> data1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E 3000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
  <span class="token keyword">const</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span> <span class="token comment">// \u518D\u8FC71\u79D2 1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
  <span class="token keyword">const</span> data3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data3<span class="token punctuation">)</span> <span class="token comment">// \u518D\u8FC72\u79D2 2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token punctuation">}</span>
<span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>\u4F46\u662F\u4E0A\u9762\u4EE3\u7801\u4E5F\u662F\u6709\u7F3A\u70B9\u7684\uFF0C\u5982\u679C\u6709\u51E0\u5341\u4E2A\uFF0C\u90A3\u4E0D\u662F\u5F97\u5199\u51E0\u5341\u4E2Aawait\uFF0C\u6709\u6CA1\u6709\u4E00\u79CD\u65B9\u6CD5\u53EF\u4EE5\u901A\u8FC7\u5FAA\u73AF\u6765\u8F93\u51FA\u5462\uFF1F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 3000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
<span class="token comment">// 500\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_27-promise-finally" tabindex="-1"><a class="header-anchor" href="#_27-promise-finally" aria-hidden="true">#</a> 27-Promise.finally</h3><ul><li>\u65B0\u589E\u7684Promise\u65B9\u6CD5\uFF0C\u65E0\u8BBA\u5931\u8D25\u6216\u8005\u6210\u529F\u72B6\u6001\uFF0C\u90FD\u4F1A\u6267\u884C\u8FD9\u4E2A\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F\u55BD&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Ffinally&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u5931\u8D25\u55BD&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Ffinally&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="es10" tabindex="-1"><a class="header-anchor" href="#es10" aria-hidden="true">#</a> ES10</h2><h3 id="_28-array-flat" tabindex="-1"><a class="header-anchor" href="#_28-array-flat" aria-hidden="true">#</a> 28-Array.flat</h3><ul><li>\u6709\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u6211\u60F3\u8BA9\u4ED6\u53D8\u6210\u4E00\u7EF4\u6570\u7EC4\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [ 1, 2, 3, 4, 5, 6 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u8FD8\u53EF\u4EE5\u4F20\u53C2\u6570\uFF0C\u53C2\u6570\u4E3A\u964D\u7EF4\u7684\u6B21\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u5982\u679C\u4F20\u7684\u662F\u4E00\u4E2A\u65E0\u9650\u5927\u7684\u6570\u5B57\uFF0C\u90A3\u4E48\u5C31\u5B9E\u73B0\u4E86\u591A\u7EF4\u6570\u7EC4(\u65E0\u8BBA\u51E0\u7EF4)\u964D\u4E3A\u4E00\u7EF4\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1,  2, 3, 4,  5, 6,  7, 8, 9, 10, 11, 12]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_29-array-flatmap" tabindex="-1"><a class="header-anchor" href="#_29-array-flatmap" aria-hidden="true">#</a> 29-Array.flatMap</h3><ul><li>\u73B0\u5728\u7ED9\u4F60\u4E00\u4E2A\u9700\u6C42</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;\u5F20\u4E09 \u8A79\u59C6\u65AF \u5B89\u4E1C\u5C3C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5229\u62C9\u5FB7 \u7F57\u65AF \u9EA6\u79D1\u52D2\u59C6&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C06\u4E0A\u9762\u6570\u7EC4\u8F6C\u4E3A</span>
<span class="token punctuation">[</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8A79\u59C6\u65AF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5B89\u4E1C\u5C3C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5229\u62C9\u5FB7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7F57\u65AF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u9EA6\u79D1\u52D2\u59C6&#39;</span> <span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;\u5F20\u4E09&#39;, &#39;\u8A79\u59C6\u65AF&#39;, &#39;\u5B89\u4E1C\u5C3C&#39;, &#39;\u5229\u62C9\u5FB7&#39;, &#39;\u7F57\u65AF&#39;, &#39;\u9EA6\u79D1\u52D2\u59C6&#39; ]</span>
<span class="token comment">// flatMap\u5C31\u662Fflat + map\uFF0C\u4E00\u4E2A\u65B9\u6CD5\u9876\u4E24\u4E2A</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;\u5F20\u4E09&#39;, &#39;\u8A79\u59C6\u65AF&#39;, &#39;\u5B89\u4E1C\u5C3C&#39;, &#39;\u5229\u62C9\u5FB7&#39;, &#39;\u7F57\u65AF&#39;, &#39;\u9EA6\u79D1\u52D2\u59C6&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_30-bigint" tabindex="-1"><a class="header-anchor" href="#_30-bigint" aria-hidden="true">#</a> 30-BigInt</h3><blockquote><p>BigInt\u662FES10\u65B0\u52A0\u7684\u4E00\u79CDJavaScript\u6570\u636E\u7C7B\u578B\uFF0C\u7528\u6765\u8868\u793A\u8868\u793A\u5927\u4E8E 2^53 - 1 \u7684\u6574\u6570\uFF0C2^53 - 1\u662FES10\u4E4B\u524D\uFF0CJavaScript\u6240\u80FD\u8868\u793A\u6700\u5927\u7684\u6570\u5B57</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> theBiggestInt <span class="token operator">=</span> <span class="token number">9007199254740991n</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>theBiggestInt<span class="token punctuation">)</span>

<span class="token keyword">const</span> alsoHuge <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">9007199254740991</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>alsoHuge<span class="token punctuation">)</span> <span class="token comment">// 9007199254740991n</span>

<span class="token keyword">const</span> hugeString <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token string">&quot;9007199254740991&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hugeString<span class="token punctuation">)</span> <span class="token comment">// 9007199254740991n</span>

<span class="token keyword">const</span> hugeHex <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token string">&quot;0x1fffffffffffff&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hugeHex<span class="token punctuation">)</span> <span class="token comment">// 9007199254740991n</span>

<span class="token keyword">const</span> hugeBin <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token string">&quot;0b11111111111111111111111111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hugeBin<span class="token punctuation">)</span> <span class="token comment">// 9007199254740991n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u54E6\u5BF9\u4E86\uFF0C\u65E2\u7136\u662FJavaScript\u65B0\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u90A3\u4ED6\u7684typeof\u662F\u5565\uFF1F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bigNum <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">1728371927189372189739217</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> bigNum<span class="token punctuation">)</span> <span class="token comment">// bigint</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u6240\u4EE5\u4EE5\u540E\u9762\u8BD5\u5B98\u95EE\u4F60JavaScript\u6709\u591A\u5C11\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u522B\u50BB\u50BB\u7B546\u79CD\u4E86\uFF0C\u8981\u7B548\u79CD\uFF0C\u628AES6\u7684Symbol\u548CES10\u7684BigInt\u4E5F\u52A0\u4E0A\u53BB</p></blockquote><h3 id="_31-object-fromentries" tabindex="-1"><a class="header-anchor" href="#_31-object-fromentries" aria-hidden="true">#</a> 31-Object.fromEntries</h3><ul><li>\u524D\u9762ES8\u7684<a href="#_24-object-entries">Object.entries</a>\u662F\u628A\u5BF9\u8C61\u8F6C\u6210\u952E\u503C\u5BF9\u6570\u7EC4\uFF0C\u800CObject.fromEntries\u5219\u76F8\u53CD\uFF0C\u662F\u628A\u952E\u503C\u5BF9\u6570\u7EC4\u8F6C\u4E3A\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7537&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { name: &#39;\u5F20\u4E09&#39;, age: 22, gender: &#39;\u7537&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u4ED6\u8FD8\u6709\u4E00\u4E2A\u7528\u5904\uFF0C\u5C31\u662F\u628AMap\u8F6C\u4E3A\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7537&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span> <span class="token comment">// Map(3) { &#39;name&#39; =&gt; &#39;\u5F20\u4E09&#39;, &#39;age&#39; =&gt; 22, &#39;gender&#39; =&gt; &#39;\u7537&#39; }</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;\u5F20\u4E09&#39;, age: 22, gender: &#39;\u7537&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_32-string-trimstart-string-trimend" tabindex="-1"><a class="header-anchor" href="#_32-string-trimstart-string-trimend" aria-hidden="true">#</a> 32-String.trimStart &amp;&amp; String.trimEnd</h3><ul><li>JavaScript\u6709\u4E2Atrim\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6E05\u9664\u5B57\u7B26\u4E32\u9996\u5C3E\u7684\u7A7A\u683C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;    \u5F20\u4E09    &#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;\u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>trimStart\u548CtrimEnd\u7528\u6765\u5355\u72EC\u53BB\u9664\u5B57\u7B26\u4E32\u7684\u9996\u548C\u5C3E\u7684\u7A7A\u683C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;    \u5F20\u4E09    &#39;</span>
<span class="token comment">// \u53BB\u9664\u9996\u90E8\u7A7A\u683C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;\u5F20\u4E09   &#39;</span>
<span class="token comment">// \u53BB\u9664\u5C3E\u90E8\u7A7A\u683C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;   \u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="es11" tabindex="-1"><a class="header-anchor" href="#es11" aria-hidden="true">#</a> ES11</h2><h3 id="_33-promise-allsettled" tabindex="-1"><a class="header-anchor" href="#_33-promise-allsettled" aria-hidden="true">#</a> 33-Promise.allSettled</h3><div class="custom-container tip"><p class="custom-container-title">ES11\u65B0\u589E\u7684Promise\u7684\u65B9\u6CD5</p><ul><li>\u63A5\u6536\u4E00\u4E2APromise\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5982\u6709\u975EPromise\u9879\uFF0C\u5219\u6B64\u9879\u5F53\u505A\u6210\u529F</li><li>\u628A\u6BCF\u4E00\u4E2APromise\u7684\u7ED3\u679C\uFF0C\u96C6\u5408\u6210\u6570\u7EC4\uFF0C\u8FD4\u56DE</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> isResolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isResolve <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token comment">// 3\u79D2\u540E\u8F93\u51FA </span>
  <span class="token comment">// [</span>
  <span class="token comment">//   { status: &#39;fulfilled&#39;, value: &#39;2000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01&#39; },</span>
  <span class="token comment">//   { status: &#39;rejected&#39;, reason: &#39;3000\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01&#39; },</span>
  <span class="token comment">//   { status: &#39;rejected&#39;, reason: &#39;1000\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01&#39; }</span>
  <span class="token comment">// ]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_34-\u548C" tabindex="-1"><a class="header-anchor" href="#_34-\u548C" aria-hidden="true">#</a> 34-?. \u548C ??</h3><div class="custom-container danger"><p class="custom-container-title">\u63D0\u793A</p><p>\u90E8\u5206\u6D4F\u89C8\u5668\u4E0D\u652F\u6301\uFF0C\u4F1A\u62A5 <code>Unexpected token &#39;.&#39;</code></p></div><div class="custom-container tip"><p class="custom-container-title">?. [\u4E2D\u6587\u540D\u4E3A\u53EF\u9009\u94FE]</p><ul><li>\u6BD4\u5982\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u53D8\u91CF\uFF0C\u662F\u6570\u7EC4\u4E14\u6709\u957F\u5EA6\uFF0C\u624D\u505A\u67D0\u4E9B\u64CD\u4F5C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u53EF\u9009\u94FE</span>
<span class="token keyword">const</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>list2<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u6BD4\u5982\u6709\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6211\u8981\u53D6\u4E00\u4E2A\u53EF\u80FD\u4E0D\u5B58\u5728\u7684\u503C\uFF0C\u751A\u81F3\u6211\u4EEC\u90FD\u4E0D\u786E\u5B9Aobj\u662F\u5426\u5B58\u5728</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">cat</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1 <span class="token operator">&amp;&amp;</span> obj1<span class="token punctuation">.</span>dog <span class="token operator">&amp;&amp;</span> obj1<span class="token punctuation">.</span>dog<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1 <span class="token operator">&amp;&amp;</span> obj1<span class="token punctuation">.</span>cat <span class="token operator">&amp;&amp;</span> obj1<span class="token punctuation">.</span>cat<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// &#39;\u54C8\u54C8&#39;</span>

<span class="token comment">// \u53EF\u9009\u94FE</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">cat</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token operator">?.</span>dog<span class="token operator">?.</span>name<span class="token punctuation">)</span>  <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token operator">?.</span>cat<span class="token operator">?.</span>name<span class="token punctuation">)</span>  <span class="token comment">// &#39;\u54C8\u54C8&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>\u6BD4\u5982\u6709\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6211\u4E0D\u786E\u5B9A\u5B83\u5B58\u4E0D\u5B58\u5728\uFF0C\u5B58\u5728\u7684\u8BDD\u5C31\u53D6\u7D22\u5F15\u4E3A1\u7684\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1 <span class="token operator">&amp;&amp;</span> arr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1 <span class="token operator">&amp;&amp;</span> arr1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>

<span class="token comment">// \u53EF\u9009\u94FE</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6BD4\u5982\u6709\u4E00\u4E2A\u51FD\u6570\uFF0C\u6211\u4EEC\u4E0D\u786E\u5B9A\u5B83\u5B58\u4E0D\u5B58\u5728\uFF0C\u5B58\u5728\u7684\u8BDD\u5C31\u6267\u884C\u5B83</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> fn <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u53EF\u9009\u94FE</span>
<span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> fn<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">?? [\u7A7A\u4F4D\u5408\u5E76\u8FD0\u7B97\u7B26]</p><ul><li>\u4EE5\u4E0B\u4EE3\u7801\uFF0C\u54B1\u4EEC\u4F7F\u7528||\u8FD0\u7B97\u7B26\uFF0C\u53EA\u8981\u5DE6\u8FB9\u662F\u5047\u503C\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u53F3\u8FB9\u7684\u6570\u636E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span> <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u800C??\u548C||\u6700\u5927\u7684\u533A\u522B\u662F\uFF0C\u5728??\u8FD9\uFF0C\u53EA\u6709undefined\u548Cnull\u624D\u7B97\u5047\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">??</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span> <span class="token operator">??</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">??</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">??</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">??</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h2 id="es12" tabindex="-1"><a class="header-anchor" href="#es12" aria-hidden="true">#</a> ES12</h2><h3 id="_35-promise-any" tabindex="-1"><a class="header-anchor" href="#_35-promise-any" aria-hidden="true">#</a> 35-Promise.any</h3><div class="custom-container tip"><p class="custom-container-title">E12\u65B0\u589E\u7684Promise\u7684\u65B9\u6CD5</p><ul><li>\u63A5\u6536\u4E00\u4E2APromise\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5982\u6709\u975EPromise\u9879\uFF0C\u5219\u6B64\u9879\u5F53\u505A\u6210\u529F</li><li>\u5982\u679C\u6709\u4E00\u4E2APromise\u6210\u529F\uFF0C\u5219\u8FD4\u56DE\u8FD9\u4E2A\u6210\u529F\u7ED3\u679C</li><li>\u5982\u679C\u6240\u6709Promise\u90FD\u5931\u8D25\uFF0C\u5219\u62A5\u9519</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F53\u6709\u6210\u529F\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u6700\u5FEB\u90A3\u4E2A\u6210\u529F</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> isResolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isResolve <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E \u8F93\u51FA  1000\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5F53\u5168\u90FD\u5931\u8D25\u65F6</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> isResolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isResolve <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u6210\u529F\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6BEB\u79D2\u540E\u6211\u5931\u8D25\u5566\uFF01\uFF01\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E \u62A5\u9519 All promises were rejected</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="_36-\u6570\u5B57\u5206\u9694\u7B26" tabindex="-1"><a class="header-anchor" href="#_36-\u6570\u5B57\u5206\u9694\u7B26" aria-hidden="true">#</a> 36-\u6570\u5B57\u5206\u9694\u7B26</h3><ul><li>\u6570\u5B57\u5206\u9694\u7B26\u53EF\u4EE5\u8BA9\u4F60\u5728\u5B9A\u4E49\u957F\u6570\u5B57\u65F6\uFF0C\u66F4\u52A0\u5730\u4E00\u76EE\u4E86\u7136</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token number">1000000000</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token comment">// 1000000000</span>

<span class="token comment">// \u4F7F\u7528\u6570\u5B57\u5206\u9694\u7B26</span>
<span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token number">1_000_000_000</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span> <span class="token comment">// 1000000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_37-\u5C5E\u6027\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_37-\u5C5E\u6027\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 37-\u5C5E\u6027\u8868\u8FBE\u5F0F</h3><ul><li>\u6211\u4EEC\u7ECF\u5E38\u78B0\u5230\u8FD9\u6837\u7684\u95EE\u9898\uFF0C\u65E0\u8BBA\u662F\u5728\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u8FD8\u662FReact\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u6839\u636E\u67D0\u4E2A\u6761\u4EF6\u53BB\u4FEE\u6539\u67D0\u4E2A\u6570\u636E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">boyName</span><span class="token operator">:</span> name
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;girl&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">girlName</span><span class="token operator">:</span> name
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u4EE5\u5199\u4E3A\uFF1A</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">Name</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> name
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,179);function t(e,o){return p}var l=n(a,[["render",t],["__file","JavascriptSkill.html.vue"]]);export{l as default};
